{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"Read the Release Announcement for Rigs of Rods 2022.12"},{"location":"#end-user-documentation-for-the-rigs-of-rods-project","title":"End-user documentation for the Rigs of Rods project","text":"<ul> <li> <p> Rigs of Rods Quick Start</p> <p>New to Rigs of Rods? Start with the Installation Guide, work your way through the Beginner's Guide, and explore more advanced topics to enhance your gameplay experience.</p> <ul> <li>Installation Guide</li> <li>Beginner's Guide</li> <li>How to Install Mods</li> <li>Controls and Configuration Guide</li> <li>Multiplayer Server Setup Guide</li> <li>FAQ's</li> </ul> </li> <li> <p> Modding Rigs of Rods</p> <p>Want to start modding Rigs of Rods? Start at 0 and work your way to pro with detailed guides on modding.</p> <ul> <li>Truck File Format</li> <li>Soundscript File Format</li> <li>Addonpart File Format</li> <li>Terrn2 File Format</li> <li>Object File Format</li> <li>Alternate Skins (skinzip) Guide</li> <li>Installing Addons Guide</li> <li>Blender Mesh Editing Guide</li> <li>Editing Terrain Objects</li> </ul> </li> <li> <p> Community Rules</p> <ul> <li>Community Guidelines</li> <li>Forum Rules</li> <li>Repository Submission Guidelines</li> <li>Contributor Code of Conduct</li> <li>Multiplayer Rules to Play By</li> </ul> </li> </ul>"},{"location":"gameplay/aircraft-handling/","title":"Aircraft handling","text":""},{"location":"gameplay/aircraft-handling/#how-to-use-the-autopilot","title":"How to use the autopilot","text":"<p>You can find the autopilot on top of your dashboard in a plane. Upon startup it looks like this:</p> <p> </p> <p>The autopilot has different modes you can engage or disengage by pressing the buttons. When you change a value, the change is immediately applied to the current mode.</p>"},{"location":"gameplay/aircraft-handling/#heading-modes","title":"Heading modes","text":"<ul><li> HDG (Heading): set the airplane heading to the heading selected (in degree) </li><li> WLV (Wing Leveler): set the wings horizontal. The airplane should roughly keep its current heading. </li><li> NAV (Radio Navigation): engage when approaching a runway equipped with an ILS equipment (the red and white antennas). The airplane will first try to intercept the runway axis, then stay along it until you pass the runway edge. </li></ul>"},{"location":"gameplay/aircraft-handling/#heading-listings","title":"Heading Listings","text":"<p>This is a list of headings to use for ILS on included maps. </p> <ul><li>North St. Helens main runway - 240 degrees </li><li>Aspen main runway - 190 degrees </li></ul>"},{"location":"gameplay/aircraft-handling/#altitude-modes","title":"Altitude modes","text":"<ul><li> HOLD (Hold altitude): set the altitude to the altitude selected (in feet). The the maximum vertical speed allowed to reach the altitude is selected by the vert.speed setting (in feet per minute, the sign of the selected vert speed is ignored). So this mode works better with a vert.speed different than 0! </li><li> V/S (Vertical Speed): set the vertical speed (in feet per minute), without a target altitude. Positive value to climb, negative to descent. </li><li> NAV+V/S (Vertical Radio Navigation): when both NAV and V/S are selected, the altitude is controlled by the ILS system. So when approaching a runway with NAV, engage V/S to make the plane descend to the runway. </li></ul>"},{"location":"gameplay/aircraft-handling/#speed-mode","title":"Speed mode","text":"<ul><li> ATHR (Auto-Throttles) set the speed of the airplane as selected in IAS (Indicated Air Speed, in knots). </li></ul>"},{"location":"gameplay/aircraft-handling/#other-buttons","title":"other buttons","text":"<ul><li> GPWS (Ground Proximity Warning System): when engaged, a recorded voice calls altitude and warns in case of dangerous maneuvers close to the ground. </li><li> BRKS (Parking brakes) </li></ul>"},{"location":"gameplay/aircraft-handling/#horizontal-navigation-indicator-hsi","title":"Horizontal Navigation Indicator (HSI)","text":"<p>There is a simplified HSI (Horizontal Navigation Indicator) instrument between the AOA (Angle of Approach) indicator and the engine gauges.  It includes: </p> <ul><li><ul><li> a compass </li><li> a heading bug (that runs along the heading selector) </li><li> two position indicators:  <ul><li> a vertical bar for horizontal deviation </li><li> a horizontal bar for vertical deviation.  </li></ul> </li></ul> </li></ul> <p>They tell you how far you are from the optimal trajectory when you do an ILS approach. The optimal position is when both bars are at the center of the display. </p>"},{"location":"gameplay/aircraft-handling/#how-to-do-a-successful-instruments-approach-with-the-ils","title":"How to do a successful instruments approach with the ILS","text":"<ol><li>ensure the approach you want to do is equipped with an ILS:  <ul><li>check if there are red and white antennas at the end of the runway, at the side where you will touch down. Be sure the approach is clear of obstacles.  </li></ul> </li><li>fly to a comfortable distance from the runway, preferably off the terrain.  </li><li>ensure you are at the right altitude for an approach from that distance. If the horizontal bar is low, descend, if it is high, climb.  </li><li>fly in a way so you will soon intercept the runway axis, or are roughly on the runway axis  </li><li>Engage NAV, then V/S. Drop the joystick. The plane should fly by itself now, intercepting the runway axis and descending to the runway.  <ul><li>You can see how it performs on the HSI display. The bars should cross at the center when the approach is stabilized.  </li></ul> </li><li>Control your speed! You should fly as slow as possible (around 100 knots for the Antonov 12). Use auto-throttle if possible. Watch the AOA, if it gets too high, you will stall! Add more flaps in that case.  </li><li>If you go too fast, the plane will not descend and the horizontal bar will go down.  </li><li>On short final, the GPWS calls \"Minimums\": you reached the minimum decision altitude. If you see the runway and everything is fine, proceed to the landing (real pilots disconnect the autopilot at this stage and land by the hand).  </li><li>The autopilot should disconnect at the runway edge, but in some case it can continue to function, so be cautious at the flare.  </li><li>Engage reverses and brake (press and maintain key B). You landed! </li></ol>"},{"location":"gameplay/beginners-guide/","title":"Beginner's Guide","text":""},{"location":"gameplay/beginners-guide/#introduction","title":"Introduction","text":"<p>Rigs of Rods (RoR) is a free/libre soft-body physics simulator mainly targeted at simulating vehicle physics.  The soft-body physics system is based on mass-spring-damper theory.</p> <p>This page will help you learn the basics of Rigs of Rods, from your first run to playing multiplayer.</p>"},{"location":"gameplay/beginners-guide/#first-run","title":"First Run","text":"<p>When launching RoR for the first time, the user directory will be created. On Windows this is located at <code>Documents\\My Games\\Rigs of Rods</code> or at <code>~/.rigsofrods</code> on Linux. This is where configuration files, logs, and mods are stored.   </p> <p>The game should open in a small window:</p> <p></p> <p>Before playing, you should first change your settings. Begin by clicking <code>Settings</code>.</p> <p>First, make sure the rendering system is set to <code>Direct3D9 Rendering Subsystem</code>. If it's set to <code>OpenGL Rendering Subsystem</code>, change it then restart RoR. If Direct3D9 doesn't appear on the list, install the DirectX Runtime and restart your PC.</p> <p>If you're running Linux, ignore this as DirectX is not available. </p> <p></p> <p>Now select <code>Video Mode</code> and change it to your monitor's native resolution then restart the game to apply your changes.</p> <p></p> <p></p> <p>Click <code>Settings</code> again, then click the <code>Graphics</code> tab.</p> <p>The following settings should be fine for most people, but feel free to adjust them to fit your liking.</p> <p></p> <p>Then click the <code>Audio</code> tab and set the device and volume.</p> <p></p> <p>Once you're finished, restart the game again. </p> <p>Now you're ready to begin playing. Start by clicking <code>Single player</code> to open the terrain selector. </p> <p></p> <p>For the sake of this tutorial, select North St Helens. </p> <p>Note</p> <p>Depending on how you downloaded the game, the North St Helens terrain may be missing. If so, please install it from the Repository before continuing.</p> <p>Once the terrain loads, you will spawn as a country person known lovingly as RoRBot. You control him with the arrow keys while using <code>SHIFT</code> to run and <code>SPACE</code> to jump (good for getting over bumps, or if you get stuck).</p> <p></p> <p>You spawn in front of a building known as the Rig-a-Deal. This is where you will spawn new trucks. Walk into the \"Office\" to bring up the selection menu. You can also spawn a vehicle anywhere at any time by pressing <code>CTRL+G</code>.</p> <p></p> <p>Use the mouse or arrow keys to move through the menus. Select the DAF Semi truck. The truck spawns inside the Rig-a-Deal with you inside it. If you happen to spawn the truck with RoRBot outside of the vehicle, simply hit <code>ENTER</code>/<code>RETURN</code> to get in a vehicle.</p> <p></p>"},{"location":"gameplay/beginners-guide/#driving","title":"Driving","text":"<p>The DAF semi isn't the most agile or best looking truck in the game, but it serves us a purpose later. The camera inside the Rig-a-Deal is fixed, so you will be unable to move it until you leave. Switch to the in-cab camera by hitting <code>C</code>. Use the <code>UP</code> arrow key to accelerate out of the Rig-a-Deal (Rigs of Rods uses a simulated clutch which begins to engages at a specific point. This why the semi doesn't move until 1000 RPM). Use <code>DOWN</code> to brake, and <code>LEFT</code>/<code>RIGHT</code> arrows to steer. Use <code>PGUP</code>/<code>PGDOWN</code> to select your transmission direction/speed.</p> <p>Start by exploring Coldwater, the town you begin in. It isn't very big but provides some decent moving room. If you get stuck, or wreck, hit <code>I</code> to reset back to the Rig-a-Deal, or <code>BACKSPACE</code> to reset the truck in its current position. </p> <p>If you hold <code>BACKSPACE</code> for one second, you will enable the \"advanced repair mode\" which lets you move the vehicle to any position by using the <code>WASD</code> keys to move and the arrow keys to rotate. Press <code>BACKSPACE</code> again to exit.</p> <p>You can switch transmission modes by hitting <code>Q</code>. There are 5 transmission modes available:  * Automatic shift   * The gear change is fully automatic, the player only has to set the gear by pressing <code>PGUP</code>/<code>PGDOWN</code>. * Manual shift: Auto clutch   * The gear is changed on user request. No clutch should be pressed to change gear, vehicle takes care of that. Just use <code>A</code> and <code>Z</code> to shift.  * Fully manual: sequential shift   * The user must press clutch and select whether it is needed to switch up or down. Depress the clutch by hitting <code>LEFT SHIFT</code>, then press <code>A</code> to upshift or <code>Z</code> to downshift.  * Fully manual: stick shift   * This mode is useful if you have a game controller with an H-shifter (like Logitech G27). In this mode the player can set gears 1-6, N, and R directly by the stick.  * Fully manual: stick shift with ranges   * This mode is mostly used in vehicles having more gears than 6. In this case you can select from 3 ranges: low (gear 1-6), medium (gear 7-12), high (gear 13-18) by pressing the appropriate button. Like if you want to select the 8<sup>th</sup> gear, you have to select gear N first, press the midrange button, then select the 2<sup>nd</sup> gear on the h-stick. Remember, range selection can be made only if the gear is in N.</p> <p>If you stall, there are 2 keys to be remembered: <code>X</code> enables or disables the electricity in the vehicle, and <code>S</code> activates the starter. Press <code>X</code> and you'll see a yellow battery icon lit on the UI. Hold <code>S</code> until the engine is started. Resetting the vehicle with <code>BACKSPACE</code> or <code>I</code> will instantly start the engine.</p> <p>Remember how to change the camera? Hit <code>C</code> twice. You're now in third-person view and can move the camera around. Use the number pad (specifically <code>2</code>, <code>4</code>, <code>6</code>, and <code>8</code>) to move the camera. Pressing <code>5</code> resets the camera. <code>9</code> and <code>3</code> zoom in/out respectively and <code>1</code> gives you a front view of your truck.</p> <p>You can also move the camera by holding right-click and dragging with your mouse.</p> <p>Now, make your way back to the Rig-a-Deal.</p>"},{"location":"gameplay/beginners-guide/#trailer-loads","title":"Trailer Loads","text":"<p>You should see a large, grey, open-platform with an orange console. Park the truck (use <code>P</code> to set the parking brake) and hit <code>ENTER</code>/<code>RETURN</code> to get out. Note that the same camera commands work with RoRBot. Step in front of the orange console to open the load selector. </p> <p></p> <p></p> <p>Select the Semi trailer (37 tons). </p> <p>Get back in the semi and drive in front of the load. Use the camera in third-person view to help you if you need. Back into the trailer. When you get close, use <code>F1</code>/<code>F2</code> to lower and raise the trailer legs respectively. </p> <p>The hook points must be within 10cm to hook, so it may take some practice to get close. When you think you're close, hit <code>L</code>. If you're close enough, the semi will latch to the trailer. Raise the legs by holding <code>F1</code>. </p> <p></p> <p>You can now drive around with the trailer. You will notice that the trailer has a large effect on how the semi pulls and handles! This process is the same for most trailers. In some cases you can secure loads to trucks using <code>O</code>. </p> <p>NOTE: on some computers trailers may increase lag or decrease FPS(frames per second) dramatically!</p>"},{"location":"gameplay/beginners-guide/#flying","title":"Flying","text":"<p>Now that we've become comfortable with driving. Let's try to fly. Move your mouse to the to top of the screen to bring up the menubar, click <code>Vehicles</code> then <code>Antonov 12</code> to instantly enter the plane which is sitting on the runway. </p> <p></p> <p>Apply the parking brake by pressing <code>P</code>. Turn on the flying lights by pressing <code>M</code>. Start the engines by using your mouse to click the <code>ON</code> buttons in the lower right hand corner (or by pressing <code>CTRL+HOME</code>). </p> <p>When the engines settle to the appropriate idle speed (somewhere near 750rpm), release the parking brake and throttle the engines to full by holding <code>PGUP</code>. Pressing <code>CTRL+PGUP</code> will instantly set the throttle to max. </p> <p>If you have a short runway, be sure to use the flaps with <code>1</code> and <code>2</code> (this is especially helpful in multiplayer). When you reach 75-80 knots, lift up by pressing the <code>DOWN</code> arrow. Steer with the <code>LEFT</code>/<code>RIGHT</code> arrows and control the rudder with <code>Z</code> and <code>X</code>. Raise the landing gear, in this plane, by holding <code>F3</code>. </p> <p>The An-12 does not stand high speeds (175+ knots) well, and you may find that if you go too fast the wings will break apart!</p> <p></p> <p></p> <p>When it comes to landing, make sure you have room to slow down and take your time. Going straight into the runway is the easiest way to land when you first start off. It may take a few passes to go head-on so don't be afraid to abort a landing and throttle back up to regain altitude. The entire process is easier if you shadows enabled, but is possible without. When you land, hit <code>R</code> to reverse thrust and throttle up to slow down in addition to using <code>B</code> to brake the wheels.</p> <p>This tutorial does not make use of the autopilot. For more information regarding the use of autopilot, see Aircraft handling.</p>"},{"location":"gameplay/beginners-guide/#boating","title":"Boating","text":"<p>We must explore beyond Coldwater to get to the marina. Take the main road out of Coldwater, heading southwest toward the Elk Hotel. Take the second left after you leave town. You should see the water soon.  When you arrive at the marina, you should see marina-style boat docks and a ramp along with a building. </p> <p></p> <p>Walk around to the front of the building and enter the open door. Choose the Wahoo boat. </p> <p></p> <p>Use <code>UP</code>/<code>DOWN</code> to throttle and <code>LEFT</code>/<code>RIGHT</code> to steer. Use <code>PGUP</code> to center the throttle (to neutral) and <code>PGDOWN</code> to center the rudder. It may take you a while to get your sea legs. If you have waves enabled, see how far out you can go before you flip over waves!</p> <p></p>"},{"location":"gameplay/beginners-guide/#conclusion","title":"Conclusion","text":"<p>Now that you have a basic grasp of the basic vehicles in RoR, it is now up to you to create your own scenarios. If you feel bored, try the vast selection of mods available on the Repository.</p>"},{"location":"gameplay/beginners-guide/#multiplayer","title":"Multiplayer","text":"<p>If you feel like sharing the experience, you can play on one of the many public multiplayer servers. To get started, click the <code>Multi player</code> button on the main menu. </p> <p></p> <p>Set your username by clicking on <code>Settings</code> and changing it in the <code>Player nickname</code> textbox.</p> <p></p> <p>You may have to restart the game for the changes to take effect.</p> <p>Now just select the server you want to play on, then click <code>Join</code>.</p> <p></p> <p>The 'any' servers allow you to select a terrain, while other servers (such as Official Nhelens) are set to use a specific terrain. </p> <p>While on a server, you can enable collisions between other players or hide nicknames by going to <code>Settings</code> in the top menubar.</p> <p></p> <p>Note that multiplayer is still in development and can be unstable at times!</p>"},{"location":"gameplay/beginners-guide/#default-controls","title":"Default controls","text":"<p>Please see the Controls and configuration page for a full list of controls.</p>"},{"location":"gameplay/beginners-guide/#adding-content","title":"Adding content","text":"<p>To add new vehicles and terrains, go to the Installing content page.</p>"},{"location":"gameplay/common-issues/","title":"Common issues","text":"<p>This page explains the most common problems players may experience with Rigs of Rods and provides instructions on how to fix them.</p>"},{"location":"gameplay/common-issues/#failure-writing-settings-file","title":"Failure writing settings file","text":"<p>When attempting to launch RoR or change game settings, you may receive one of these errors or a variation of them:</p> <p></p> <p></p> <p></p>"},{"location":"gameplay/common-issues/#causes","title":"Causes","text":""},{"location":"gameplay/common-issues/#controlled-folder-access","title":"Controlled folder access","text":"<p>On Windows 10/11, Windows Security (Defender) has a \"Controlled folder access\" feature. When enabled, it blocks applications such as RoR from accessing your Documents folder. </p> <p>See this tutorial (Windows 10/Windows 11) for instructions on how to disable it.</p>"},{"location":"gameplay/common-issues/#unicode-characters","title":"Unicode characters","text":"<p>Another common cause of these errors is having Unicode characters in the path to the <code>Documents\\My Games\\Rigs of Rods</code> folder, typically caused by the Windows (Name of the folder in <code>C:\\Users</code>, NOT the display name!) username (e.g. <code>Ren\u00e9</code>).  </p> <p>There are three workarounds to this problem. Fix #2 is recommended if you don't want to run RoR as administrator.</p>"},{"location":"gameplay/common-issues/#fix-1","title":"Fix #1","text":"<ol> <li>Inside the installation directory, where RoR.exe is (usually <code>C:\\Program Files\\Rigs of Rods</code>) create a folder named <code>config</code> </li> <li>Right click <code>RoR.exe</code> and click <code>Properties</code> </li> <li>Under the <code>Compatibility</code> tab, check the <code>Run this program as administrator</code> box, then click <code>Apply</code> and close the window.  </li> </ol>"},{"location":"gameplay/common-issues/#fix-2","title":"Fix #2","text":"<ol> <li>Move any mods out of the <code>Documents\\My Games\\Rigs of Rods\\mods</code> folder if you have any installed</li> <li>Uninstall RoR from Windows settings, then remove the <code>Documents\\My Games\\Rigs of Rods</code> folder if required</li> <li>Download the zipped release from Itch.io and extract <code>rigs-of-rods-windows.zip</code> into any directory that isn't in Program Files or the users folder (Documents, Downloads, etc).  Example: <code>C:\\Games</code> </li> <li>Inside the extracted folder, create a folder named <code>config</code> </li> <li>Launch the game by double clicking <code>RoR.exe</code>. You can optionally create a shortcut by right clicking.</li> </ol> <p>Following either method will result in RoR now using the <code>config</code> folder instead of the default <code>Documents\\My Games\\Rigs of Rods</code> location to store user data.</p> <p>If you installed the content packs, you will have to move the <code>*.zip</code> files from <code>Documents\\My Games\\Rigs of Rods\\mods</code> to <code>config\\mods</code>. New mods are also installed there.</p>"},{"location":"gameplay/common-issues/#fix-3","title":"Fix #3","text":"<p>The last solution is simply to create a new Windows user account without any special characters or reinstall Windows.</p>"},{"location":"gameplay/common-issues/#no-render-system-plugin-available","title":"No render system plugin available","text":"<p>If you downloaded RoR using the zip file, you may receive these errors. This is caused by the DirectX 9 Runtime not being installed. Install it from Microsoft's website then restart your PC.</p>"},{"location":"gameplay/common-issues/#visual-c-dlls-missing","title":"Visual C++ DLLs missing","text":"<p>When launching RoR, you may receive a MSVCP140.dll/MSVCP110.dll/MSVCP100.dll not found error.</p> <p>This is caused by the required 64-bit Visual C++ Redistributable not being installed. </p> <p>Install the correct version that matches the <code>.dll</code> name in the error then restart your PC.</p> <p>Latest release:</p> <ul> <li>MSVCP140.dll  (Select the x64 version)</li> </ul> <p>Older versions:</p> <ul> <li> <p>MSVCP110.dll</p> </li> <li> <p>MSVCP100.dll</p> </li> </ul>"},{"location":"gameplay/common-issues/#full-screen-crash-cannot-create-device","title":"Full screen crash (Cannot create device)","text":"<p>This error is usually caused by enabling full screen with the wrong resolution (video mode) set. </p> <ol> <li>Browse to <code>Documents\\My Games\\Rigs of Rods</code> and delete the <code>config</code> folder inside.</li> <li>Start RoR, the game will be in a small window. Click Settings -&gt; Render system and change the Video Mode setting to your monitor's native resolution (e.g. 1920x1080). Enable full screen if you want.</li> <li>Restart RoR.</li> </ol> <p>If this doesn't fix your error, then your GPU is likely too old to run RoR. </p>"},{"location":"gameplay/common-issues/#null-program-bound","title":"Null program bound","text":"<p>This error occurs with some Intel integrated graphics chips. Unfortunately there's currently no fix.</p> <p>More info: GitHub issue</p>"},{"location":"gameplay/common-issues/#low-resolution-terrain-textures","title":"Low resolution terrain textures","text":"<p>On AMD graphics cards under Linux (OpenGL), terrain textures may appear low resolution:</p> <p></p> <p>This is caused by shadows, you will need to disable them (Settings -&gt; Graphics -&gt; Set shadows to \"None\" -&gt; Restart RoR).</p> <p>Alternatively you can play the Windows version through Wine.</p>"},{"location":"gameplay/common-issues/#flickering-vehicle-shadows","title":"Flickering vehicle shadows","text":"<p>Note</p> <p>This issue does not occur as of version 2022.12+</p> <p>With some GPUs (mainly integrated), shadows on vehicles may flicker: </p> <p></p> <p>This is caused by your GPU not supporting self-shadowing (Shadows from other objects casting onto the vehicle). Please try one of the following workarounds:</p>"},{"location":"gameplay/common-issues/#fix-1-disable-shadows","title":"Fix #1: Disable shadows","text":"<p>The simplest workaround is to just disable shadows. (Settings -&gt; Graphics -&gt; Set shadows to \"None\" -&gt; Restart RoR).</p>"},{"location":"gameplay/common-issues/#fix-2-enable-classic-materials","title":"Fix #2: Enable classic materials","text":"<p>Note</p> <p>As of version 2022.12, the \"classic materials\" option isn't available as it is now enabled by default.</p> <p>In versions 2020.01 to 2022.04, an option to enable classic (0.38-era) material shaders is available. This can be found under Settings -&gt; Graphics -&gt; Classic material shaders. </p> <p>Currently they do not support self-shadowing, so the glitch is not present using these.</p>"},{"location":"gameplay/common-issues/#fix-3-disable-self-shadowing-from-default-materials","title":"Fix #3: Disable self-shadowing from default materials","text":"<p>If you prefer to use the default materials instead, do the following: </p> <ol> <li> <p>Browse to where RoR is installed. This is usually <code>C:\\Program Files\\Rigs of Rods</code> by default. </p> </li> <li> <p>Open the <code>resources</code> folder, followed by the  <code>managed_materials</code> folder. </p> </li> <li> <p>Copy the <code>managed_mats_vehicles.material</code> file onto your Desktop. </p> </li> <li> <p>Open the file with Notepad (Right click -&gt; Open with -&gt; Notepad)</p> </li> <li> <p>Add <code>//</code> to the beginning of the first line: <code>//import * from \"shadows.material\"</code></p> </li> <li> <p>Save the file, then copy it back to <code>resources\\managed_materials</code>, overwriting the original file. Allow administrator permission when prompted.</p> </li> </ol>"},{"location":"gameplay/common-issues/#airplane-spawning-crash","title":"Airplane spawning crash","text":"<p>If the game crashes when spawning an aircraft, change the Lights setting (Graphics tab) to anything that isn't <code>None (fastest)</code>:</p> <p></p>"},{"location":"gameplay/controls-config/","title":"Controls and configuration","text":""},{"location":"gameplay/controls-config/#intro","title":"Intro","text":"<p>Rigs of Rods is a simulator which strives for maximum realism, and hence you need an appropriate controller, such as a wheel for land vehicles and joystick for aerial or marine vehicles.</p> <p>Input is configured from the in-game Controls menu (Keyboard only), editing configuration file input.map, or by using the Input Mapping Tool.</p>"},{"location":"gameplay/controls-config/#keyboard-layout","title":"Keyboard layout","text":""},{"location":"gameplay/controls-config/#general-controls","title":"General controls","text":"GeneralKey Pause game            ESC Quit game            ALT+F4 Spawn new vehicleCTRL+G Enter or exit vehicleENTER Reset vehicle       I     Reset vehicle in placeBACKSPACE View vehicle statistics T View vehicle commandsCTRL+T Screenshot         Print Screen/SYSRQ Chat (Multiplayer) Y Toggle HUD          U     Toggle soft reset modeAPOSTROPHE Toggle limited camera movementSHIFT+SPACE Adjust simulation speedCTRL+= / SHIFT+=  Reset simulation speed/set presetBACKSLASH Switch between vehicles CTRL+RBRACKET / CTRL+LBRACKET  Remove current vehicleCTRL+Del Respawn last vehicleCTRL+ . (period)"},{"location":"gameplay/controls-config/#character","title":"Character","text":"CharacterKey Jump          SPACE    Turn right    RIGHT    Turn left     LEFT     Walk forwards UP       Walk backwardsDOWN     Run           SHIFT+UP"},{"location":"gameplay/controls-config/#camera","title":"Camera","text":"CameraKey Change view        C Rotate up/down     Numpad 8 / Numpad 2 Rotate left/right  Numpad 4 / Numpad 6 Zoom in/out        Numpad 9 / Numpad 3 Zoom in/out (fast) SHIFT+Numpad 9 / SHIFT+Numpad 3 Free camera   SHIFT+C Fixed camera  ALT+C Decrease FOV  Numpad 7 Increase FOV  CTRL+Numpad 7 Reset FOV  SHIFT+Numpad 7"},{"location":"gameplay/controls-config/#time","title":"Time","text":"<p>Sky type must be set to Caelum or SkyX. Sandstorm sky does not support time change.</p> Time AdjustKey Change time        Numpad + (plus) / Numpad - (minus) Change time (fast)SHIFT+Numpad + (plus) / SHIFT+Numpad - (minus)"},{"location":"gameplay/controls-config/#overview-map","title":"Overview map","text":"MapKey Toggle map view TAB Zoom in/out     CTRL+TAB / SHIFT+TAB Toggle alpha     CTRL+SHIFT+TAB Toggle icons     CTRL+SHIFT+ALT+TAB"},{"location":"gameplay/controls-config/#saves","title":"Saves","text":"<p>Note</p> <p>You can load a savegame from the main menu.</p> SavegamesKey Quick saveNUMPAD / (divide) Quick loadNUMPAD * (multiply) Save slot 1CTRL+ALT+1 Save slot 2CTRL+ALT+2 Save slot 3CTRL+ALT+3 Save slot 4CTRL+ALT+4 Save slot 5CTRL+ALT+5 Load slot 1ALT+1 Load slot 2ALT+2 Load slot 3ALT+3 Load slot 4ALT+4 Load slot 5ALT+5"},{"location":"gameplay/controls-config/#common-vehicle-controls","title":"Common vehicle controls","text":"Basic vehicle controlsKey Steer Left                               LEFT      Steer Right                              RIGHT     Accelerate/Brake                         UP / DOWN"},{"location":"gameplay/controls-config/#shifting","title":"Shifting","text":"ShiftingKey Autoshift up      PGUP   Autoshift down    PGDOWN Switch shift modesQ         Manual clutch     SHIFT     Shift up          A         Shift down        Z"},{"location":"gameplay/controls-config/#lights","title":"Lights","text":"MiscKey Toggle headlights     N      Toggle beacons    M      Blinker left      , (comma)  Blinker right     . (period)    Blinker hazards  - (hyphen) Custom lights (e.g. lightbars) CTRL+1, CTRL+2 ... CTRL+9, CTRL+0"},{"location":"gameplay/controls-config/#misc","title":"Misc","text":"MiscKey Truck horn        H      Parking brake     P      Trailer parking brakeCTRL+P Toggle contact (ignition)    X      Starter (hold)    S      Attach trailer    L      Inter-wheel differentialsW Inter-axle differentialsCTRL+W Transfer case (2WD/4WD)SHIFT+W Alternate gear ratiosALT+W Secure Load       O      Show skeleton     K      Cycle skeleton views CTRL+K Rescue truck      R      Particle cannon(e.g. water cannons on fire trucks)   G      Tire Pressure(not supported by most vehicles)RBRACKET [ / LBRACKET ]"},{"location":"gameplay/controls-config/#commands","title":"Commands","text":"Function keysCombo COMMANDS 01F1 ...... COMMANDS 12F12 COMMANDS 13CTRL + F1 ...... COMMANDS 24CTRL + F12 COMMANDS 25ALT + F1 ...... COMMANDS 36ALT + F12 COMMANDS 37CTRL + ALT + F1 ...... COMMANDS 48CTRL + ALT + F12 COMMANDS 49CTRL+ SHIFT + F1 ...... COMMANDS 58CTRL + SHIFT + F10 COMMANDS 59CTRL + SHIFT + F11 ...... COMMANDS 68CTRL + ALT + F8 COMMANDS 69CTRL + ALT + F9 ...... COMMANDS 78CTRL + SHIFT + ALT + F6 COMMANDS 79CTRL + SHIFT + ALT + F7 ...... COMMANDS 83CTRL + SHIFT + ALT + F11 COMMANDS 84CTRL + SHIFT + ALT + F12 <p>Notes</p> <ul> <li> <p>Some vehicles use ALT+F4 as a command, which closes the game window. To avoid this press F4 then ALT.</p> </li> <li> <p>Some laptops require you to hold the FN key in order to use commands.</p> </li> </ul>"},{"location":"gameplay/controls-config/#aerial-and-marine-controls","title":"Aerial and marine controls","text":""},{"location":"gameplay/controls-config/#planes","title":"Planes","text":"Airplane controlsKey Steer left   LEFT               Steer right  RIGHT              Elevator up  UP                 Elevator downDOWN               Rudder right X                  Rudder left  Z                  Brake        B                  Parking brakeP                  Reverse      R                  Less flaps   1                  More flaps   2                  Less airbrakes3                More airbrakes4                Throttle downPAGE-DOWN          Throttle up  PAGE-UP            Start enginesCLICK BUTTONS \"ON\" Start all enginesCTRL+HOME Full throttleCTRL+PAGEUP No throttleCTRL+PAGEDOWN <p>It is recommended to use: <code>CTRL+Home</code> to start all engines of a plane and <code>CTRL+PAGE-UP</code> to full throttle all engines because some planes could have more than 4 engines and you couldn't control them with your mouse.</p>"},{"location":"gameplay/controls-config/#boats","title":"Boats","text":"Boat controlsKey Throttle down  DOWN    Throttle up    UP     Steer left     LEFT  Steer right    RIGHT Center rudder  PGUP   Center throttlePGDOWN"},{"location":"gameplay/controls-config/#changing-keyboard-controls","title":"Changing keyboard controls","text":"<p>Starting with Rigs of Rods version 2021.10, it is now possible to remap keyboard controls in-game. Just press the Controls button on the main menu:</p> <p></p> <p></p> <p>From here it's pretty self-explanatory, just select which control you want to change and press the new key. </p> <p>Notes</p> <ul> <li> <p>Some common vehicle controls can be found the \"Common\" category. One example is the key to secure loads, found in the Common category with the label  <code>COMMON_SECURE_LOAD</code>.</p> </li> <li> <p>The menu currently only supports remapping keyboard controls. Remapping other input devices (controllers, steering wheels, joysticks, etc) still have to be done manually. Please see Configuring controls with the Input Mapping Tool.</p> </li> </ul>"},{"location":"gameplay/controls-config/#config-file-inputmap","title":"Config file 'input.map'","text":"<p>This file defines all key alias for RoR, located at <code>Documents\\My Games\\Rigs of Rods\\config</code> (Windows) or <code>~/.rigsofrods/config</code> (Linux) by default. It has the following format:</p> <pre><code>EVENT_NAME    EVENT_TYPE    MAPPING\n</code></pre> <p>For example:</p> <pre><code>BOAT_CENTER_RUDDER     Keyboard    DOWN\n</code></pre> <p>This binds the BOAT_CENTER_RUDDER event to the Down arrow on your keyboard.</p> <p>A list of all valid events can be found in the Keypress Events section.</p>"},{"location":"gameplay/controls-config/#keyboard","title":"Keyboard","text":"<p>For the keyboard there are several special things:</p>"},{"location":"gameplay/controls-config/#modifiers","title":"Modifiers","text":"<ul> <li>CTRL</li> <li>SHIFT</li> <li>ALT</li> </ul> <p>Combine them with a + sign. Example:</p> <pre><code>CAMERA_FREE_MODE    Keyboard    EXPL+SHIFT+C\n</code></pre>"},{"location":"gameplay/controls-config/#the-expl-tag","title":"The EXPL tag","text":"<p>A special keyword used in defining commands.</p> <p>In this example, only COMMANDS_01 is triggered when pressing F1, and COMMANDS_13 is triggered when pressing CTRL+F1 (but not COMMANDS_01)</p> <pre><code>COMMANDS_01                    Keyboard             EXPL+F1 \nCOMMANDS_13                    Keyboard             EXPL+CTRL+F1\n</code></pre> <p>In this example, COMMANDS_01 would be triggered if you press CTRL+F1, as F1 is part of the COMMANDS_13 combination.</p> <pre><code>COMMANDS_01                    Keyboard             F1 \nCOMMANDS_13                    Keyboard             CTRL+F1\n</code></pre>"},{"location":"gameplay/controls-config/#list-of-usable-keys","title":"List of usable keys","text":"<pre><code>0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nA\nABNT_C1\nABNT_C2\nADD\nAPOSTROPHE\nAPPS\nAT\nAX\nB\nBACK\nBACKSLASH\nC\nCALCULATOR\nCAPITAL\nCOLON\nCOMMA\nCONVERT\nD\nDECIMAL\nDELETE\nDIVIDE\nDOWN\nE\nEND\nEQUALS\nESCAPE\nF\nF1\nF10\nF11\nF12\nF13\nF14\nF15\nF2\nF3\nF4\nF5\nF6\nF7\nF8\nF9\nG\nGRAVE\nH\nHOME\nI\nINSERT\nJ\nK\nKANA\nKANJI\nL\nLBRACKET\nLCONTROL\nLEFT\nLMENU\nLSHIFT\nLWIN\nM\nMAIL\nMEDIASELECT\nMEDIASTOP\nMINUS\nMULTIPLY\nMUTE\nMYCOMPUTER\nN\nNEXTTRACK\nNOCONVERT\nNUMLOCK\nNUMPAD0\nNUMPAD1\nNUMPAD2\nNUMPAD3\nNUMPAD4\nNUMPAD5\nNUMPAD6\nNUMPAD7\nNUMPAD8\nNUMPAD9\nNUMPADCOMMA\nNUMPADENTER\nNUMPADEQUALS\nO\nOEM_102\nP\nPAUSE\nPERIOD\nPGDOWN\nPGUP\nPLAYPAUSE\nPOWER\nPREVTRACK\nQ\nR\nRBRACKET\nRCONTROL\nRETURN\nRIGHT\nRMENU\nRSHIFT\nRWIN\nS\nSCROLL\nSEMICOLON\nSLASH\nSLEEP\nSPACE\nSTOP\nSUBTRACT\nSYSRQ\nT\nTAB\nU\nUNDERLINE\nUNLABELED\nUP\nV\nVOLUMEDOWN\nVOLUMEUP\nW\nWAKE\nWEBBACK\nWEBFAVORITES\nWEBFORWARD\nWEBHOME\nWEBREFRESH\nWEBSEARCH\nWEBSTOP\nX\nY\nYEN\nZ\n</code></pre>"},{"location":"gameplay/controls-config/#joystick-wheel-or-gamepad","title":"Joystick, Wheel or gamepad","text":"<p>This category covers all analogue input devices detected by the operating system, so all gamepads, joysticks, wheels, pedals, etc.</p>"},{"location":"gameplay/controls-config/#joystickbutton","title":"JoystickButton","text":"<p>Arguments:</p> <ul> <li>Joystick Number (unused in modern mappings), set to 0</li> <li>Button number</li> </ul> <pre><code>AIRPLANE_THROTTLE_DOWN    JoystickButton    0    2\n</code></pre>"},{"location":"gameplay/controls-config/#joystickaxis","title":"JoystickAxis","text":"<p>Arguments:</p> <ul> <li>Joystick Number (unused in modern mappings), set to 0</li> <li>Axis number</li> <li>Options:<ul> <li>HALF</li> <li>REVERSE</li> <li>UPPER</li> <li>LOWER</li> <li>RELATIVE</li> <li>DIGITAL</li> <li>DEADZONE : add deadzone in percent with equal sign: \"DEADZONE=0.15\".</li> <li>LINEARITY: add linearity in percent with equal sign: \"LINEARITY=0.15\".</li> </ul> </li> </ul> <pre><code>AIRPLANE_STEER_RIGHT    JoystickAxis    0    1    UPPER+DEADZONE = 0.15\n</code></pre>"},{"location":"gameplay/controls-config/#joystickpov","title":"JoystickPov","text":"<p>Arguments:</p> <ul> <li>Joystick Number (unused in modern mappings), set to 0</li> <li>POV number</li> <li>Direction: North, South, East, West, NorthEast, SouthEast, NorthWest, SouthWest.</li> </ul> <pre><code>CHARACTER_FORWARD    JoystickPov    0    0    North\n</code></pre>"},{"location":"gameplay/controls-config/#joystickslider-joysticksliderx-joystickslidery","title":"JoystickSlider, JoystickSliderX, JoystickSliderY","text":"<p>Arguments:</p> <ul> <li>Joystick Number (unused in modern mappings), set to 0</li> <li>Slider number</li> <li>Options:<ul> <li>REVERSE</li> </ul> </li> </ul> <pre><code>TRUCK_MANUAL_CLUTCH    JoystickSliderY    0    Y    0    REVERSE+DEADZONE = -30\n</code></pre>"},{"location":"gameplay/controls-config/#keypress-events","title":"Keypress Events","text":"<p>These are all the valid keypress events as of version 2022.12, they can be used in a input map or for prop animations.  Not all make sense though for animated props.</p>"},{"location":"gameplay/controls-config/#common-generic","title":"Common: Generic","text":"Event Default keybinding Description COMMON_ACCELERATE_SIMULATION CTRL+EQUALS accelerate the simulation COMMON_ACCELERATE_SIMULATION CTRL+EQUALS accelerate the simulation COMMON_DECELERATE_SIMULATION SHIFT+EQUALS decelerate the simulation COMMON_RESET_SIMULATION_PACE BACKSLASH reset the simulation pace COMMON_OUTPUT_POSITION H write current position to log (you can open the logfile and reuse the position) COMMON_QUIT_GAME ESCAPE exit the game COMMON_QUICKLOAD MULTIPLY quickload scene COMMON_QUICKSAVE DIVIDE quicksave scene COMMON_SCREENSHOT SYSRQ (Print Screen) take a screenshot COMMON_SCREENSHOT_BIG CTRL+SYSRQ take a big screenshot (3 times the screen size) COMMON_TOGGLE_MAT_DEBUG None debug purpose - dont use COMMON_TOGGLE_PHYSICS J enable or disable physics COMMON_FOV_LESS NUMPAD7 decreases the current FOV value COMMON_FOV_MORE CTRL+NUMPAD7 increase the current FOV value COMMON_FOV_RESET SHIFT+NUMPAD7 reset the FOV value COMMON_SAVE_TERRAIN Keyboard ALT+SHIFT+CTRL+M save the currently loaded terrain to a mesh file COMMON_TOGGLE_TERRAIN_EDITOR SHIFT+Y toggle terrain editor COMMON_FULLSCREEN_TOGGLE ALT+RETURN toggle between windowed and fullscreen mode"},{"location":"gameplay/controls-config/#common-actor-interaction","title":"Common: Actor interaction","text":"Event Default keybinding Description COMMON_ENTER_OR_EXIT_TRUCK RETURN enter or exit a truck COMMON_ENTER_NEXT_TRUCK CTRL+RBRACKET enter next truck COMMON_ENTER_PREVIOUS_TRUCK CTRL+LBRACKET enter previous truck COMMON_REMOVE_CURRENT_TRUCK CTRL+DELETE remove current truck COMMON_TRUCK_REMOVE CTRL+SHIFT+DELETE delete current truck COMMON_RESPAWN_LAST_TRUCK CTRL+PERIOD respawn last truck COMMON_GET_NEW_VEHICLE CTRL+G get new vehicle COMMON_PRESSURE_LESS LBRACKET decrease tire pressure (note: only very few trucks support this) COMMON_PRESSURE_MORE RBRACKET increase tire pressure (note: only very few trucks support this) COMMON_LOCK L connect hook node to a node in close proximity COMMON_AUTOLOCK ALT+L unlock autolock hook node COMMON_ROPELOCK CTRL+L connect a rope to a node in close proximity COMMON_REPAIR_TRUCK BACK repair truck COMMON_RESCUE_TRUCK R teleport to rescue truck COMMON_RESET_TRUCK I reset truck to original starting position COMMON_TOGGLE_RESET_MODE APOSTROPHE toggle reset mode COMMON_SECURE_LOAD O tie a load to the truck COMMON_TOGGLE_TRUCK_BEACONS M toggle truck beacons COMMON_TOGGLE_TRUCK_LOW_BEAMS N toggle truck low beams COMMON_CYCLE_TRUCK_LIGHTS CTRL+N cycle between light modes COMMON_TOGGLE_TRUCK_HIGH_BEAMS SHIFT+N toggle truck high beams COMMON_TOGGLE_TRUCK_FOG_LIGHTS ALT+N toggle truck fog lights COMMON_TOGGLE_CUSTOM_PARTICLES G toggle particle cannon COMMON_TOGGLE_REPLAY_MODE CTRL+J enable or disable replay mode COMMON_REPLAY_FORWARD RIGHT more replay forward COMMON_REPLAY_BACKWARD LEFT more replay backward COMMON_REPLAY_FAST_FORWARD SHIFT+RIGHT move replay fast forward COMMON_REPLAY_FAST_BACKWARD SHIFT+LEFT move replay fast backward"},{"location":"gameplay/controls-config/#common-ui","title":"Common: UI","text":"Event Default keybinding Description COMMON_CONSOLE_TOGGLE GRAVE show / hide the console COMMON_ENTER_CHATMODE Y enter the chat COMMON_SEND_CHAT RETURN sends the entered text COMMON_HIDE_GUI U hide all GUI elements COMMON_TOGGLE_DASHBOARD CTRL+U display or hide the dashboard overlay COMMON_TOGGLE_DEBUG_VIEW K toggle debug view COMMON_CYCLE_DEBUG_VIEWS CTRL+K cycle debug views COMMON_TRUCK_INFO T toggle truck HUD COMMON_TRUCK_DESCRIPTION CTRL+T toggle truck description COMMON_NETCHATDISPLAY SHIFT+U display or hide net chat COMMON_NETCHATMODE CTRL+U toggle between net chat display modes COMMON_TOGGLE_STATS F toggle Ogre statistics (FPS etc.)"},{"location":"gameplay/controls-config/#common-savegames","title":"Common: Savegames","text":"Event Default keybinding Description COMMON_QUICKSAVE_01 ALT+CTRL+1 save scene in slot 01 COMMON_QUICKSAVE_02 ALT+CTRL+2 save scene in slot 02 COMMON_QUICKSAVE_03 ALT+CTRL+3 save scene in slot 03 COMMON_QUICKSAVE_04 ALT+CTRL+4 save scene in slot 04 COMMON_QUICKSAVE_05 ALT+CTRL+5 save scene in slot 05 COMMON_QUICKSAVE_06 ALT+CTRL+6 save scene in slot 06 COMMON_QUICKSAVE_07 ALT+CTRL+7 save scene in slot 07 COMMON_QUICKSAVE_08 ALT+CTRL+8 save scene in slot 08 COMMON_QUICKSAVE_09 ALT+CTRL+9 save scene in slot 09 COMMON_QUICKSAVE_10 ALT+CTRL+0 save scene in slot 10 COMMON_QUICKLOAD_01 ALT+1 load scene from slot 01 COMMON_QUICKLOAD_02 ALT+2 load scene from slot 02 COMMON_QUICKLOAD_03 ALT+3 load scene from slot 03 COMMON_QUICKLOAD_04 ALT+4 load scene from slot 04 COMMON_QUICKLOAD_05 ALT+5 load scene from slot 05 COMMON_QUICKLOAD_06 ALT+6 load scene from slot 06 COMMON_QUICKLOAD_07 ALT+7 load scene from slot 07 COMMON_QUICKLOAD_08 ALT+8 load scene from slot 08 COMMON_QUICKLOAD_09 ALT+9 load scene from slot 09 COMMON_QUICKLOAD_10 ALT+0 load scene from slot 10"},{"location":"gameplay/controls-config/#truck-generic","title":"Truck: Generic","text":"Event Default keybinding Description TRUCK_ACCELERATE UP accelerate the truck TRUCK_ACCELERATE_MODIFIER_25 ALT+UP accelerate with 25 percent pedal input TRUCK_ACCELERATE_MODIFIER_50 CTRL+UP accelerate with 50 percent pedal input TRUCK_BLINK_LEFT COMMA toggle left direction indicator (blinker) TRUCK_BLINK_RIGHT PERIOD toggle right direction indicator (blinker) TRUCK_BLINK_WARN MINUS toggle all direction indicators TRUCK_BRAKE DOWN brake TRUCK_BRAKE_MODIFIER_25 ALT+DOWN brake with 25 percent pedal input TRUCK_BRAKE_MODIFIER_50 CTRL+DOWN brake with 50 percent pedal input TRUCK_HORN H truck horn TRUCK_LIGHTTOGGLE1 CTRL+1 toggle custom light 1 TRUCK_LIGHTTOGGLE2 CTRL+2 toggle custom light 2 TRUCK_LIGHTTOGGLE3 CTRL+3 toggle custom light 3 TRUCK_LIGHTTOGGLE4 CTRL+4 toggle custom light 4 TRUCK_LIGHTTOGGLE5 CTRL+5 toggle custom light 5 TRUCK_LIGHTTOGGLE6 CTRL+6 toggle custom light 6 TRUCK_LIGHTTOGGLE7 CTRL+7 toggle custom light 7 TRUCK_LIGHTTOGGLE8 CTRL+8 toggle custom light 8 TRUCK_LIGHTTOGGLE9 CTRL+9 toggle custom light 9 TRUCK_LIGHTTOGGLE10 CTRL+0 toggle custom light 10 TRUCK_PARKING_BRAKE P toggle parking brake TRUCK_TRAILER_PARKING_BRAKE CTRL+P toggle trailer parking brake TRUCK_ANTILOCK_BRAKE SHIFT+B toggle antilock brake TRUCK_TOGGLE_VIDEOCAMERA CTRL+V toggle videocamera TRUCK_TRACTION_CONTROL SHIFT+T toggle traction control TRUCK_CRUISE_CONTROL SPACE toggle cruise control TRUCK_CRUISE_CONTROL_READJUST CTRL+SPACE match target speed / rpm with current truck speed / rpm TRUCK_CRUISE_CONTROL_ACCL CTRL+R increase target speed / rpm TRUCK_CRUISE_CONTROL_DECL CTRL+F decrease target speed / rpm TRUCK_STARTER S hold to start the engine TRUCK_STEER_LEFT LEFT steer left TRUCK_STEER_RIGHT RIGHT steer right TRUCK_TOGGLE_CONTACT X toggle ignition TRUCK_TOGGLE_FORWARDCOMMANDS CTRL+SHIFT+F toggle forwardcommands TRUCK_TOGGLE_IMPORTCOMMANDS CTRL+SHIFT+I toggle importcommands TRUCK_TOGGLE_PHYSICS END toggle physics TRUCK_TOGGLE_INTER_AXLE_DIFF ALT+W cycle between available inter axle differential modes TRUCK_TOGGLE_INTER_WHEEL_DIFF W cycle between available inter wheel differential modes TRUCK_TOGGLE_TCASE_4WD_MODE CTRL+W toggle transfer case mode TRUCK_TOGGLE_TCASE_GEAR_RATIO SHIFT+W toggle transfer case gear ratio TRUCK_LEFT_MIRROR_LEFT SEMICOLON move left mirror to the left TRUCK_LEFT_MIRROR_RIGHT CTRL+SEMICOLON move left mirror to the right TRUCK_RIGHT_MIRROR_LEFT COLON more right mirror to the left TRUCK_RIGHT_MIRROR_RIGHT CTRL+COLON move right mirror to the right"},{"location":"gameplay/controls-config/#truck-transmission","title":"Truck: Transmission","text":"Event Default keybinding Description TRUCK_AUTOSHIFT_DOWN PGDOWN shift automatic transmission one gear down TRUCK_AUTOSHIFT_UP PGUP shift automatic transmission one gear up TRUCK_MANUAL_CLUTCH LSHIFT manual clutch (for manual transmission) TRUCK_SHIFT_DOWN Z shift one gear down in manual transmission mode TRUCK_SHIFT_NEUTRAL D shift to neutral gear in manual transmission mode TRUCK_SHIFT_UP A shift one gear up in manual transmission mode TRUCK_SHIFT_GEAR_REVERSE N/A shift directly to reverse gear TRUCK_SHIFT_GEAR1 N/A shift directly to first gear TRUCK_SHIFT_GEAR2 N/A shift directly to second gear TRUCK_SHIFT_GEAR3 N/A shift directly to third gear TRUCK_SHIFT_GEAR4 N/A shift directly to fourth gear TRUCK_SHIFT_GEAR5 N/A shift directly to 5<sup>th</sup> gear TRUCK_SHIFT_GEAR6 N/A shift directly to 6<sup>th</sup> gear TRUCK_SHIFT_GEAR7 N/A shift directly to 7<sup>th</sup> gear TRUCK_SHIFT_GEAR8 N/A shift directly to 8<sup>th</sup> gear TRUCK_SHIFT_GEAR9 N/A shift directly to 9<sup>th</sup> gear TRUCK_SHIFT_GEAR10 N/A shift directly to 10<sup>th</sup> gear TRUCK_SHIFT_GEAR11 N/A shift directly to 11<sup>th</sup> gear TRUCK_SHIFT_GEAR12 N/A shift directly to 12<sup>th</sup> gear TRUCK_SHIFT_GEAR13 N/A shift directly to 13<sup>th</sup> gear TRUCK_SHIFT_GEAR14 N/A shift directly to 14<sup>th</sup> gear TRUCK_SHIFT_GEAR15 N/A shift directly to 15<sup>th</sup> gear TRUCK_SHIFT_GEAR16 N/A shift directly to 16<sup>th</sup> gear TRUCK_SHIFT_GEAR17 N/A shift directly to 17<sup>th</sup> gear TRUCK_SHIFT_GEAR18 N/A shift directly to 18<sup>th</sup> gear TRUCK_SHIFT_LOWRANGE N/A sets low range (1-6) for H-shaft TRUCK_SHIFT_MIDRANGE N/A sets middle range (7-12) for H-shaft TRUCK_SHIFT_HIGHRANGE N/A sets high range (13-18) for H-shaft TRUCK_CYCLE_GEAR_RANGES N/A toggle between low/middle/high gear ranges TRUCK_SWITCH_SHIFT_MODES Q toggle between transmission modes"},{"location":"gameplay/controls-config/#airplane","title":"Airplane","text":"Event Default keybinding Description AIRPLANE_STEER_RIGHT RIGHT steer right AIRPLANE_BRAKE B normal brake for an aircraft AIRPLANE_ELEVATOR_DOWN DOWN pull the elevator down in an aircraft. AIRPLANE_ELEVATOR_UP UP pull the elevator up in an aircraft. AIRPLANE_FLAPS_FULL CTRL+2 full flaps in an aircraft. AIRPLANE_FLAPS_LESS 1 one step less flaps. AIRPLANE_FLAPS_MORE 2 one step more flaps. AIRPLANE_FLAPS_NONE CTRL+1 no flaps. AIRPLANE_PARKING_BRAKE P airplane parking brake. AIRPLANE_REVERSE R reverse the turboprops AIRPLANE_RUDDER_LEFT Z rudder left AIRPLANE_RUDDER_RIGHT X rudder right AIRPLANE_STEER_LEFT LEFT steer left AIRPLANE_STEER_RIGHT RIGHT steer right AIRPLANE_THROTTLE_AXIS         N/A throttle axis. Only use this if you have fitting hardware :) (i.e. a Slider) AIRPLANE_THROTTLE_DOWN PGDOWN decreases the airplane thrust AIRPLANE_THROTTLE_FULL CTRL+PGUP full thrust AIRPLANE_THROTTLE_NO CTRL+PGDOWN no thrust AIRPLANE_THROTTLE_UP PGUP increase the airplane thrust AIRPLANE_TOGGLE_ENGINES CTRL+HOME switch all engines on / off AIRPLANE_AIRBRAKES_NONE CTRL+3 no airbrakes AIRPLANE_AIRBRAKES_FULL CTRL+4 full airbrakes AIRPLANE_AIRBRAKES_LESS 3 less airbrakes AIRPLANE_AIRBRAKES_MORE 4 more airbrakes AIRPLANE_THROTTLE N/A airplane throttle"},{"location":"gameplay/controls-config/#boat","title":"Boat","text":"Event Default keybinding Description BOAT_CENTER_RUDDER PGDOWN center the rudder BOAT_REVERSE PGUP no thrust BOAT_STEER_LEFT LEFT steer left a step BOAT_STEER_LEFT_AXIS N/A steer left (analog value!) BOAT_STEER_RIGHT RIGHT steer right a step BOAT_STEER_RIGHT_AXIS N/A steer right (analog value!) BOAT_THROTTLE_AXIS N/A throttle axis. Only use this if you have fitting hardware :) (i.e. a Slider) BOAT_THROTTLE_DOWN DOWN decrease throttle BOAT_THROTTLE_UP UP increase throttle"},{"location":"gameplay/controls-config/#commands_1","title":"Commands","text":"Event Default keybinding Description COMMANDS_01 F1 Command 1 COMMANDS_02 F2 Command 2 COMMANDS_03 F3 Command 3 COMMANDS_04 F4 Command 4 COMMANDS_05 F5 Command 5 COMMANDS_06 F6 Command 6 COMMANDS_07 F7 Command 7 COMMANDS_08 F8 Command 8 COMMANDS_09 F9 Command 9 COMMANDS_10 F10 Command 10 COMMANDS_11 F11 Command 11 COMMANDS_12 F12 Command 12 COMMANDS_13 CTRL+F1 Command 13 COMMANDS_14 CTRL+F2 Command 14 COMMANDS_15 CTRL+F3 Command 15 COMMANDS_16 CTRL+F4 Command 16 COMMANDS_17 CTRL+F5 Command 17 COMMANDS_18 CTRL+F6 Command 18 COMMANDS_19 CTRL+F7 Command 19 COMMANDS_20 CTRL+F8 Command 20 COMMANDS_21 CTRL+F9 Command 21 COMMANDS_22 CTRL+F10 Command 22 COMMANDS_23 CTRL+F11 Command 23 COMMANDS_24 CTRL+F12 Command 24 COMMANDS_25 SHIFT+F1 Command 25 COMMANDS_26 SHIFT+F2 Command 26 COMMANDS_27 SHIFT+F3 Command 27 COMMANDS_28 SHIFT+F4 Command 28 COMMANDS_29 SHIFT+F5 Command 29 COMMANDS_30 SHIFT+F6 Command 30 COMMANDS_31 SHIFT+F7 Command 31 COMMANDS_32 SHIFT+F8 Command 32 COMMANDS_33 SHIFT+F9 Command 33 COMMANDS_34 SHIFT+F10 Command 34 COMMANDS_35 SHIFT+F11 Command 35 COMMANDS_36 SHIFT+F12 Command 36 COMMANDS_37 ALT+F1 Command 37 COMMANDS_38 ALT+F2 Command 38 COMMANDS_39 ALT+F3 Command 39 COMMANDS_40 ALT+F4 Command 40 COMMANDS_41 ALT+F5 Command 41 COMMANDS_42 ALT+F6 Command 42 COMMANDS_43 ALT+F7 Command 43 COMMANDS_44 ALT+F8 Command 44 COMMANDS_45 ALT+F9 Command 45 COMMANDS_46 ALT+F10 Command 46 COMMANDS_47 ALT+F11 Command 47 COMMANDS_48 ALT+F12 Command 48 COMMANDS_49 CTRL+SHIFT+F1 Command 49 COMMANDS_50 CTRL+SHIFT+F2 Command 50 COMMANDS_51 CTRL+SHIFT+F3 Command 51 COMMANDS_52 CTRL+SHIFT+F4 Command 52 COMMANDS_53 CTRL+SHIFT+F5 Command 53 COMMANDS_54 CTRL+SHIFT+F6 Command 54 COMMANDS_55 CTRL+SHIFT+F7 Command 55 COMMANDS_56 CTRL+SHIFT+F8 Command 56 COMMANDS_57 CTRL+SHIFT+F9 Command 57 COMMANDS_58 CTRL+SHIFT+F10 Command 58 COMMANDS_59 CTRL+SHIFT+F11 Command 59 COMMANDS_60 CTRL+SHIFT+F12 Command 60 COMMANDS_61 CTRL+ALT+F1 Command 61 COMMANDS_62 CTRL+ALT+F2 Command 62 COMMANDS_63 CTRL+ALT+F3 Command 63 COMMANDS_64 CTRL+ALT+F4 Command 64 COMMANDS_65 CTRL+ALT+F5 Command 65 COMMANDS_66 CTRL+ALT+F6 Command 66 COMMANDS_67 CTRL+ALT+F7 Command 67 COMMANDS_68 CTRL+ALT+F8 Command 68 COMMANDS_69 CTRL+ALT+F9 Command 69 COMMANDS_70 CTRL+ALT+F10 Command 70 COMMANDS_71 CTRL+ALT+F11 Command 71 COMMANDS_72 CTRL+ALT+F12 Command 72 COMMANDS_73 CTRL+SHIFT+ALT+F1 Command 73 COMMANDS_74 CTRL+SHIFT+ALT+F2 Command 74 COMMANDS_75 CTRL+SHIFT+ALT+F3 Command 75 COMMANDS_76 CTRL+SHIFT+ALT+F4 Command 76 COMMANDS_77 CTRL+SHIFT+ALT+F5 Command 77 COMMANDS_78 CTRL+SHIFT+ALT+F6 Command 78 COMMANDS_79 CTRL+SHIFT+ALT+F7 Command 79 COMMANDS_80 CTRL+SHIFT+ALT+F8 Command 80 COMMANDS_81 CTRL+SHIFT+ALT+F9 Command 81 COMMANDS_82 CTRL+SHIFT+ALT+F10 Command 82 COMMANDS_83 CTRL+SHIFT+ALT+F11 Command 83 COMMANDS_84 CTRL+SHIFT+ALT+F12 Command 84"},{"location":"gameplay/controls-config/#character_1","title":"Character","text":"Event Default keybinding Description CHARACTER_BACKWARDS S step backwards with the character CHARACTER_FORWARD W step forward with the character CHARACTER_JUMP SPACE let the character jump CHARACTER_LEFT LEFT rotate character left CHARACTER_RIGHT RIGHT rotate character right CHARACTER_RUN SHIFT+W let the character run CHARACTER_SIDESTEP_LEFT A sidestep to the left CHARACTER_SIDESTEP_RIGHT D sidestep to the right CHARACTER_ROT_UP UP rotate view up CHARACTER_ROT_DOWN DOWN rotate view down"},{"location":"gameplay/controls-config/#camera_1","title":"Camera","text":"Event Default keybinding Description CAMERA_CHANGE C change camera mode CAMERA_LOOKBACK NUMPAD1 look back (toggles between normal and lookback) CAMERA_RESET NUMPAD5 reset the camera position CAMERA_ROTATE_DOWN NUMPAD2 rotate camera down CAMERA_ROTATE_LEFT NUMPAD4 rotate camera left CAMERA_ROTATE_RIGHT NUMPAD6 rotate camera right CAMERA_ROTATE_UP NUMPAD8 rotate camera up CAMERA_ZOOM_IN NUMPAD9 zoom camera in CAMERA_ZOOM_IN_FAST SHIFT+NUMPAD9 zoom camera in faster CAMERA_ZOOM_OUT NUMPAD3 zoom camera out CAMERA_ZOOM_OUT_FAST SHIFT+NUMPAD3 zoom camera out faster CAMERA_FREE_MODE_FIX ALT+C fix the camera to a position CAMERA_FREE_MODE SHIFT+C enable / disable free camera mode CAMERA_UP Q move camera up CAMERA_DOWN Z move camera down"},{"location":"gameplay/controls-config/#sky","title":"Sky","text":"Event Default keybinding Description SKY_DECREASE_TIME SUBTRACT decrease day-time SKY_DECREASE_TIME_FAST SHIFT+SUBTRACT decrease day-time a lot faster SKY_INCREASE_TIME ADD increase day-time SKY_INCREASE_TIME_FAST SHIFT+ADD increase day-time a lot faster"},{"location":"gameplay/controls-config/#grass-unused","title":"Grass (Unused)","text":"Event Default keybinding Description GRASS_LESS N/A EXPERIMENTAL: remove some grass GRASS_MORE N/A EXPERIMENTAL: add some grass GRASS_MOST N/A EXPERIMENTAL: set maximum amount of grass GRASS_NONE N/A EXPERIMENTAL: remove grass completely GRASS_SAVE N/A EXPERIMENTAL: save changes to the grass density image"},{"location":"gameplay/controls-config/#survey-map","title":"Survey map","text":"Event Default keybinding Description SURVEY_MAP_TOGGLE_ICONS CTRL+SHIFT+ALT+TAB toggle map icons SURVEY_MAP_TOGGLE CTRL+SHIFT+TAB toggle map SURVEY_MAP_CYCLE TAB cycle map modes SURVEY_MAP_ZOOM_IN CTRL+TAB zoom in SURVEY_MAP_ZOOM_OUT SHIFT+TAB zoom out"},{"location":"gameplay/controls-config/#menu","title":"Menu","text":"Event Default keybinding Description MENU_DOWN DOWN select next element in current category MENU_LEFT LEFT select previous category MENU_RIGHT RIGHT select next category MENU_SELECT RETURN select focused item and close menu MENU_UP UP select previous element in current category"},{"location":"gameplay/controls-config/#truck-editing","title":"Truck editing","text":"Event Default keybinding Description TRUCKEDIT_RELOAD SHIFT+CTRL+R reload truck"},{"location":"gameplay/controls-config/#road-editing","title":"Road editing","text":"Event Default keybinding Description ROAD_EDITOR_POINT_INSERT INSERT insert road point ROAD_EDITOR_POINT_GOTO G go to road point ROAD_EDITOR_POINT_SET_POS M set road point position ROAD_EDITOR_POINT_DELETE DELETE delete road point ROAD_EDITOR_REBUILD_MESH B regenerate road mesh"},{"location":"gameplay/controls-config/#controllers","title":"Controllers","text":""},{"location":"gameplay/controls-config/#xbox","title":"Xbox","text":"<p>Rigs of Rods supports Xbox 360 / One / Series controllers out of the box, just plug in your controller and play! </p> <p>You can find a list of controls here.</p> <p>If your Xbox controller does not work with RoR,  please create a thread on the support forum  or send a message in the #support channel on the official RoR Discord server.</p>"},{"location":"gameplay/controls-config/#playstation-controller-support-using-steam","title":"PlayStation controller support using Steam","text":"<p>Currently, Rigs of Rods does not support PlayStation controllers. However, thanks to Steam's excellent input interface, it is possible to \"disguise\" your PlayStation controller as an Xbox controller, allowing it to work with the game. </p> <p>This has been tested with a DualShock 4 controller,  these instructions should also work with the DualSense (PS5) controller as well. </p> <p>To begin, install Steam if you don't already have it and sign in. </p> <p>You will first have to enable PlayStation controller support. Click <code>Steam</code> -&gt; <code>Settings</code> </p> <p>On the Controller tab, select <code>General controller settings</code></p> <p></p> <p>Enable <code>PlayStation Configuration Support</code> then click <code>Back</code> to return to the settings menu</p> <p></p> <p>Next you'll have to add RoR as a non-Steam game. To do this click <code>Games</code> -&gt; <code>Add a Non-Steam Game to My Library...</code></p> <p></p> <p>Click , locate where RoR is installed (usually <code>C:\\Program Files\\Rigs of Rods</code>) then double-click <code>RoR.exe</code></p> <p></p> <p>Finally, click <code>Add selected programs</code>. RoR will now be in your game library. </p> <p>If you've done everything correctly, you should now be able to launch the game from Steam and your controller should be working! </p> <p>Controls are listed here. </p> <p>If you wish to edit the controls, you can use Steam's UI by clicking \"Controller layout\" under the green play button (only shown when controller is connected). </p> <p>For advanced editing you'll need to edit the <code>Controller__XBOX_360_For_Windows_.map</code> file inside the <code>Rigs of Rods\\config</code> folder. See Config file 'input.map' for more info. </p>"},{"location":"gameplay/controls-config/#mouse","title":"Mouse","text":""},{"location":"gameplay/controls-config/#required-applications","title":"Required applications","text":"<p>vJoy joystick emulator</p> <p>FreePIE input emulator</p>"},{"location":"gameplay/controls-config/#setting-up-the-input-map-and-freepie-script","title":"Setting up the input map and FreePIE script","text":"<p>After installing the above applications, download this zip file which contains the required input map and FreePIE script.</p> <p>There will be two files in the zip: <code>vJoy_Device.map</code> and <code>MouseControl.py</code>. </p> <p>Extract both files into <code>Documents\\My Games\\Rigs of Rods\\config</code>.</p>"},{"location":"gameplay/controls-config/#using-freepie","title":"Using FreePIE","text":"<p>Open FreePIE and press <code>File -&gt; Open</code>. Browse to the <code>MouseControl.py</code> file you downloaded earlier:</p> <p></p> <p></p> <p></p> <p>Then press <code>Script -&gt; Run script</code>:</p> <p></p> <p>The script should now be running. If you get an error, install vJoy.</p> <p>Leave FreePIE running, launch RoR and you should now have mouse control!</p> <p>You can modify both the script and the input map to make them better suit for your use. </p> <p>For example the numbers <code>40</code> and <code>80</code> in the script are the sensitivity of the controls.</p> <p>Mouse middle button in the script above, will reset the axises in game, in this case the steering and throttle.</p>"},{"location":"gameplay/controls-config/#configuring-controls-with-the-input-mapping-tool","title":"Configuring controls with the Input Mapping Tool","text":"<p>The easiest way to configure your device for use in Rigs of Rods is to use the Input Mapping Tool.</p>"},{"location":"gameplay/controls-config/#vjoy-conflicts","title":"vJoy Conflicts","text":"<p>Note</p> <p>If you have vJoy installed, you will have to disable it before running the tool!</p> <p></p>"},{"location":"gameplay/controls-config/#launching-the-tool","title":"Launching the tool","text":"<p>After downloading, extract the zip into a new folder. Then double-click <code>Run.bat</code> to launch the tool. </p> <p></p>"},{"location":"gameplay/controls-config/#adding-new-inputs","title":"Adding new inputs","text":"<p>To begin adding inputs, click <code>Add</code>.</p> <p></p> <p>Select the event you want to assign an input to. In this example, I will use <code>TRUCK_ACCELERATE</code></p> <p>Then select the correct input type:</p> Event typeDescription KeyboardAll keys on the keyboard. JoystickAxisUsed for steering wheels/sticks/etc. JoystickSliderAny type of slider, mainly seen on flight sticks. JoystickButtonButtons! (e.g. `A` button on an Xbox controller) JoystickPovUsed for D-Pad controls. <p>Click <code>Add</code> once ready, the tool will then ask you to move the axis/press a button. </p> <p>The popup will automatically close once the requested action is completed.  If not, press Enter.</p> <p></p> <p>Repeat the process for all the inputs you want to add.</p> <p></p> <p>Once you're done, it's time to export the keymap.</p>"},{"location":"gameplay/controls-config/#exporting-the-keymap","title":"Exporting the keymap","text":"<p>Note</p> <p>The latest version of the Input Mapping Tool should automatically set the correct file name for your input device. If it doesn't, please see the troubleshooting section below.</p> <p>Click <code>Export Keymap</code> then select your device from the list.</p> <p></p> <p>Browse to <code>Documents\\My Games\\Rigs of Rods\\config</code>, then click <code>Open</code> to save the file.</p> <p></p> <p>And finally, run Rigs of Rods and test your device! If you wish to make further edits in the future, you can import your input map by clicking <code>Import Keymap</code>.</p> <p>If you want to share your created input map, upload it to the Input Maps section of the Repository. Thanks!</p>"},{"location":"gameplay/controls-config/#troubleshooting","title":"Troubleshooting","text":"<p>If your input mapping isn't working in-game, you'll first want to check if the name of your input map file is correct.</p> <p>To do this, you'll find a file named <code>getdeviceinfo.exe</code> in the same folder as the tool. Double-click it, a command prompt window will appear for a split second, this is normal.  You will now see a <code>inputinfo.txt</code> file in the directory. Open the text file.</p> <p>Example output:</p> <pre><code>System info:\n    OIS Version: 1.3.0\n    OIS Release Name: 1.3.0\n    Input Manager: Win32InputManager\n    Total Keyboards: 1\n    Total Mice: 1\n    Total JoySticks: 1\n\nDevices:\n    - OISKeyboard, Vendor: Win32InputManager\n    - OISMouse, Vendor: Win32InputManager\n    - OISJoyStick, Vendor: Controller (Xbox One For Windows)\n\n\nJoystick 0:\n    Vendor: Controller (Xbox One For Windows)\n    VendorMapFilename: Controller__Xbox_One_For_Windows_.map\n    ID: 0\n    Type: [3] OISJoyStick\n    Axes: 5\n    Sliders: 0\n    POV/HATs: 1\n    Buttons: 16\n    Vector3: 0\n    Vector3Sensitivity: 2.28\n</code></pre> <p><code>VendorMapFilename</code> will be the name of your exported file. In this example, the name will be <code>Controller__Xbox_One_For_Windows_.map</code>.</p> <p>This is what you'll want to name your file. You can choose to just save your input map through the tool again or rename the file from File Explorer.</p> <p>If you rename the file, it is highly recommended you enable file extensions (View -&gt; File name extensions):</p> <p></p> <p>This is to help avoid you naming the file  <code>.map.map</code> by mistake. </p> <p>If you've made sure your input map is named correctly and the device still doesn't function in-game,  please create a thread on the support forum or send a message in the #support channel on the official RoR Discord server.</p>"},{"location":"gameplay/general-faq/","title":"General FAQ","text":"<p>Welcome to the General FAQ! Here you'll find answers to common questions you may have about Rigs of Rods. It is organized into sections to make finding answers easier.</p> <p>For info regarding errors and/or crashes, see: Common issues</p>"},{"location":"gameplay/general-faq/#downloading-rigs-of-rods","title":"Downloading Rigs of Rods","text":""},{"location":"gameplay/general-faq/#supported-operating-systems","title":"Supported operating systems","text":"<p>Rigs of Rods is officially supported on 64 bit Windows 7 SP1, Windows 8/8.1, Windows 10/11, and Linux.</p> <p>Windows XP &amp; Vista are no longer supported as of version 0.4.8 RC5. </p> <p>32 bit is no longer supported as of version 2020.01.</p> <p>MacOS hasn't been supported since version 0.37 due to lack of developer interest and outdated dependencies currently used by the game.</p> <p>ChromeOS and mobile platforms (iOS/Android) are unsupported and likely never will be.</p>"},{"location":"gameplay/general-faq/#windows","title":"Windows","text":"<p>The latest version can be downloaded from the home page or Itch.io.</p> <p>If you decide to download from Itch, we recommended using the Itch desktop app as you'll receive updates automatically.</p> <p>If you need help, see: Installing the game</p>"},{"location":"gameplay/general-faq/#linux","title":"Linux","text":"<p>The Linux version can be downloaded from Itch.io.</p> <p>It is recommended to install using the Itch desktop app.</p>"},{"location":"gameplay/general-faq/#development-builds","title":"Development builds","text":"<p>If you want to try out the newest features and improvements to RoR, you can download the latest development build from Itch.io.</p> <p>As these versions contain the latest code, unexpected issues may occur!</p> <p>You can report bugs and other issues on RoR's GitHub repo issue tracker. </p> <p>Make sure your issue hasn't already been reported.</p> <p>Note</p> <p>The issue tracker is only for issues relating to the latest development build.  if you're using an official release, please post on the correct support forum instead.</p>"},{"location":"gameplay/general-faq/#old-versions","title":"Old versions","text":"<p>You can find previous RoR versions on SourceForge. These versions are entirely unsupported!</p>"},{"location":"gameplay/general-faq/#mods","title":"Mods","text":""},{"location":"gameplay/general-faq/#downloading-mods","title":"Downloading mods","text":"<p>You can find mods on the Repository and the content section of the forum.</p> <p>For more info regarding installing mods, see: Installing content (mods).</p>"},{"location":"gameplay/general-faq/#archives","title":"Archives","text":"<p>The forum archives have been unavailable since September 2020.</p> <p>A backup of the original Repository files (hosted by AnotherFoxGuy) may be found here. </p> <p>Warning</p> <p>The Repository archive contains a handful of content featuring Sketchup 3D Warehouse assets that were released prior to the rule prohibiting  the use of these models. These are considered stolen content (see below) and are not allowed on official services. </p> <p>It also contains older versions of mods which may not be compatible with the latest RoR version. Always check the current Repository for the latest versions.</p>"},{"location":"gameplay/general-faq/#downloading-mods-from-unofficial-sources","title":"Downloading mods from unofficial sources","text":"<p>If you search for RoR mods on Google or YouTube, you'll likely find car mods that aren't available from the Repository. Almost all of these mods contain models ripped from other games/websites, which goes against our Terms of Service.  They are not allowed on any of our services, including multiplayer. May also contain viruses and/or malware.</p> <p>Further reading: Don\u2019t Steal Content or Violate Intellectual Property Stolen Content (Bus Epidemic)</p>"},{"location":"gameplay/general-faq/#multiplayer","title":"Multiplayer","text":"<p>To play multiplayer, see this section of the Beginner's Guide.</p>"},{"location":"gameplay/general-faq/#wrong-server-version","title":"Wrong server version","text":"<p>This means you're trying to join a server that is running an older or newer RoRNet version than what your current RoR version supports.</p> <p>The latest version, 2022.12, supports RoRNet 2.44.</p>"},{"location":"gameplay/installing-content/","title":"Installing content","text":"<p>One of the best features of Rigs of Rods is the vast amount of community-created mods available. This page will tell you everything you need to know about installing mods. You will have to launch RoR at least once for the mods directory to be created.</p>"},{"location":"gameplay/installing-content/#in-game-repository","title":"In-Game Repository","text":"<p>Starting with Rigs of Rods version 2022.04, it is now possible to download new content from the Repository in-game. </p> <p>Just click on the Repository button at the main menu:</p> <p></p> <p>You can view different categories, sort by most downloaded/last update/etc, and change the display view.</p> <p></p> <p>After you find a mod to install, just click on the file and press the Install button:</p> <p></p> <p>To remove a mod, just go back to the file listing and press Remove. </p>"},{"location":"gameplay/installing-content/#limitations","title":"Limitations","text":"<ul> <li> <p>The In-Game Repository currently does not support installing content packs which are a zip file containing other zips. You can still download them in-game, but you'll have to browse to the <code>mods</code> folder and extract the pack zip manually. </p> </li> <li> <p>While there is an Addons category, most files there will have to be installed manually. Please see Installing addons for more information.</p> </li> </ul>"},{"location":"gameplay/installing-content/#installing-mods-manually","title":"Installing mods manually","text":"<p>Adding a new vehicle or terrain is very simple. Follow the appropriate instructions for your operating system.</p>"},{"location":"gameplay/installing-content/#windows","title":"Windows","text":"<p>First, open File Explorer by clicking the  icon on your taskbar or by pressing Windows key + E.</p> <p>Click Documents, located under 'This PC' or 'Quick access':</p> <p></p> <p>Select  followed by . You are now in RoR's user directory.</p> <p>Place the <code>*.zip</code> file inside the <code>mods</code> folder, either by cut (CTRL+X) and paste (CTRL+V) or drag and drop. Your mods folder should now have the zip inside:</p> <p> </p> <p>You can also organize your mod zips by creating subfolders (e.g. <code>mods\\cars\\DodgeViperGTS.zip</code>).</p> <p>That's it! You can launch Rigs of Rods now and your shiny new mod should be ready to use.</p>"},{"location":"gameplay/installing-content/#linux","title":"Linux","text":"<p>For this, we'll be using Ubuntu 20.04. Instructions should be similar if you're using another distro.</p> <p>First, click the  icon located on your dock/launcher. You should now be in your Home directory. </p> <p>Warning</p> <p>If you installed RoR via the Snap Store, the user directory is located at <code>~/snap/rigs-of-rods/common/</code>.</p> <p>By default, RoR's user folder is named <code>.rigsofrods</code>, which is a hidden folder. Hidden folders can be shown by clicking the top right menu icon and enabling 'Show Hidden Files':</p> <p></p> <p>Once enabled, open the  folder. You are now in RoR's user directory.</p> <p>Place the <code>*.zip</code> file inside the <code>mods</code> folder, either by cut (CTRL+X) and paste (CTRL+V) or drag and drop. Your mods folder should now have the zip inside: </p> <p></p> <p>You can also organize your mod zips by creating subfolders (e.g. <code>mods\\cars\\DodgeViperGTS.zip</code>).</p> <p>That's it! You can launch Rigs of Rods now and your shiny new mod should be ready to use.</p>"},{"location":"gameplay/installing-content/#where-to-download-mods","title":"Where to download mods","text":"<p>Mods can be downloaded from the official Repository and the content section of the forum.  You should not download mods from unofficial sites, explained below.</p>"},{"location":"gameplay/installing-content/#things-to-avoid","title":"Things to avoid","text":"<p>When it comes to installing RoR mods, there are some common mistakes new players make. Here's a list of things you should avoid when installing mods.</p>"},{"location":"gameplay/installing-content/#downloading-mods-from-unofficial-sources","title":"Downloading mods from unofficial sources","text":"<p>If you search for RoR mods on Google or YouTube, you'll likely find car mods that aren't available from the Repository. Almost all of these mods contain models ripped from other games/websites, which goes against our Terms of Service.  They are not allowed on any of our services, including multiplayer. May also contain viruses and/or malware.</p> <p>Further reading: Don\u2019t Steal Content or Violate Intellectual Property Stolen Content (Bus Epidemic)</p>"},{"location":"gameplay/installing-content/#extracting-zips","title":"Extracting zips","text":"<p>Unless specified in the file description (e.g. a content pack) you should NEVER extract a mod zip! Extracting usually results in conflicts with other mods, and model/texture loading failures. </p>"},{"location":"gameplay/installing-content/#installing-mods-in-the-game-directory","title":"Installing mods in the game directory","text":"<p>Some new players who fail to read this page find RoR's install directory (where <code>RoR.exe</code> is) and end up placing mod zips in the <code>content</code> folder. </p> <p>This folder is ONLY for default content, installing mods here will likely result in them getting overwritten during an update or removed if you decide to uninstall. Please install mods in the correct directory, as explained above.</p>"},{"location":"gameplay/installing-content/#installing-content-packs","title":"Installing content packs","text":"<p>To install content packs (a zip file containing multiple zips inside) such as the Gabester Vehicle Pack or the content packs, just extract the zip (using File Explorer or 7-Zip) into the <code>mods</code> folder.</p>"},{"location":"gameplay/installing-content/#installing-skinzips","title":"Installing skinzips","text":"<p>Some mods may provide a <code>*.skinzip</code> which contains some extra liveries/skins for the vehicle. To install these, just place them inside the <code>mods</code> folder.</p> <p>For more information about skinzips, see this page.</p>"},{"location":"gameplay/installing-content/#psdpdn-files","title":"PSD/PDN files","text":"<p>These are files meant to be used by photo editing programs such as Photoshop or paint.net, they are not meant to be placed in the RoR directories.</p>"},{"location":"gameplay/installing-the-game/","title":"Installation Guide","text":"<p>To effortlessly install and keep Rigs of Rods up-to-date, we recommend using the itch.io desktop app available for Windows and Linux.</p> <p></p> <p>Don't place your device at risk</p> <p>For your security, only download Rigs of Rods from the official Download Center. Downloading from unknown sources may expose you to malware, outdated versions, or modified files that could harm your device.</p>"},{"location":"gameplay/installing-the-game/#windows","title":"Windows","text":"<p>\"Windows protected your PC\" Windows SmartScreen</p> <p>On Windows, you may be presented with a pop up saying that it prevented an unrecognized app from starting. You must click More info and then Run anyway in order for the installer to run.</p>"},{"location":"gameplay/installing-the-game/#with-installer","title":"with Installer recommended","text":"Windows 11 version 21H1 <p>For the latest version, go to the Download Center and select Rigs of Rods 64-bit Installer for Windows. You will immediately be redirected to SourceForge, and the download will automatically begin.</p> <p>When your download finishes, follow these steps to quickly go through the installer.</p> <ol> <li>Select your language, by default it is English. Click Next.</li> <li>Accept the License Agreement by selecting I accept the agreement then click Next.</li> <li>If you wish to install to another location, select Browse, otherwise the default location will be used.</li> <li>If you want the installer to create a desktop shortcut check Create a desktop shortcut.</li> <li>Review the installation and click Back if you want to make any changes, otherwise click Install to begin the installation process.</li> <li>Upon completion of the installation read then click Next.</li> <li>Well done, the installation is now completed. Leave Launch Rigs of Rods checked and click Finish to launch Rigs of Rods.</li> </ol>"},{"location":"gameplay/installing-the-game/#with-portable-zip","title":"with Portable (.zip)","text":"<p>For the latest version, go to the Download Center and select Rigs of Rods 64-bit Portable (.zip) for Windows. You will immediately be redirected to SourceForge, and the download will automatically begin.</p> <p>When your download finishes, follow these steps to launch Rigs of Rods.</p> <ol> <li>Extract the .zip into your desired location (Do not merge with an existing Rigs of Rods version!)</li> <li>Launch Rigs of Rods by double-clicking <code>RoR.exe</code></li> </ol>"},{"location":"gameplay/installing-the-game/#linux","title":"Linux","text":""},{"location":"gameplay/installing-the-game/#with-portable-zip_1","title":"with Portable (.zip) recommended","text":"<p>For the latest version, go to the Download Center and select Rigs of Rods 64-bit Portable (.zip) for Linux. You will immediately be redirected to Sourceforge, and the download will automatically begin.</p> <p>When your download finishes, follow these steps to launch Rigs of Rods on Linux.</p> <ol> <li>Extract the .zip into your desired location (Do not merge with an existing Rigs of Rods version!) <pre><code>unzip rigs-of-rods-linux.zip\n</code></pre></li> <li>It may not always be necessary, but grant the execute permission to the executable and script run file. <pre><code>chmod +x ./RoR\nchmod +x ./RunRoR\n</code></pre></li> <li>Depending on your graphical interface, you may double-click <code>RunRoR</code> or run from the terminal. <pre><code>./RunRoR\n</code></pre></li> </ol>"},{"location":"gameplay/installing-the-game/#with-snap-store","title":"with Snap Store","text":"<p>Snap Store is not OFFICIALLY maintained but is regularly kept up-to-date. Snaps can be used on all major Linux distributions and is widely used because of its graphical counterpart the Snap Store.</p> <pre><code>sudo snap install rigs-of-rods\n</code></pre>"},{"location":"gameplay/installing-the-game/#with-aur","title":"with AUR","text":"<p>The Arch User Repository (AUR) packages can be installed on your Arch Linux system with with the use of a helper like yay or paru.</p> <pre><code>paru -S rigsofrods\n</code></pre>"},{"location":"gameplay/installing-the-game/#development-builds","title":"Development Builds","text":"<p>If you want to try out the latest changes without waiting for a stable release, you can use the development builds. These builds include new features, bug fixes, and improvements but may also be unstable.</p> <p>Try at your own risk!</p> <p>These builds allow you to experience new changes before they are officially released. These builds are not thoroughly tested, so the chance you may experience crashes, bugs, or other issues is higher than with stable versions. If you encounter problems, consider reporting them on the Rigs of Rods GitHub issues page.</p>"},{"location":"gameplay/installing-the-game/#with-itch-io-desktop-app","title":"with itch.io Desktop App recommended","text":"<p>Just like the stable release, the development builds are available through the itch.io app. After every code change, the builds are automatically pushed to itch.io and delivered as an optional update for you.</p> <p> Download Rigs of Rods Experimental</p>"},{"location":"gameplay/installing-the-game/#with-itchio-zip","title":"with itch.io (.zip)","text":"<p>If you prefer not to use the the desktop app, you can still download the builds manually.</p> <ol> <li>Go to the the Rigs of Rods itch.io build page.</li> <li>Download the development builds for Windows or Linux.</li> <li>Extract the contents to a preferred location.</li> <li>Run <code>RoR.exe</code> (Windows) or <code>./RunRoR</code> (Linux) to start the game.</li> </ol> <p>Refer to previous sections of this guide for additional guidance on launching the game. If you have any issues with development builds (such as broken links or missing builds) please refer to this thread on the community forums. </p>"},{"location":"gameplay/jargon/","title":"Jargon","text":"<p>This is a glossary of un-intuitive terms used by members of RoR community.</p>"},{"location":"gameplay/jargon/#player-terms","title":"Player terms","text":""},{"location":"gameplay/jargon/#rorlog","title":"RoR.log","text":"<p>The RoR.log is a file which contains information from the last session from Rigs of Rods. It is very helpful to attach this file to any support issues or bugs for more information.</p>"},{"location":"gameplay/jargon/#a-mod","title":"A mod","text":"<p>Downloadable game content. The word stands for 'modification', but may describe any content ranging from actually modified vehicles to original and self-contained ones. Maps and other downloads aren't usually referred to as 'mod' directly, but some terms, such as 'mod cache', include them.</p>"},{"location":"gameplay/jargon/#a-cache-a-mod-cache","title":"A cache (a mod cache)","text":"<p>Local database of downloaded and installed content, generated by RoR on player's computer for faster browsing and loading. Managed automatically, but may occasionally break and require cleanup and re-generation, so called 'cache regen'.</p>"},{"location":"gameplay/jargon/#a-repo-repository","title":"A repo (repository)","text":"<p>A website with downloadable content.</p>"},{"location":"gameplay/jargon/#rorbot","title":"RoRBot","text":"<p>Player-controlled human character, viewed from 3<sup>rd</sup> person camera by default. It can walk/run/swim and enter vehicles. The name is historical - in the past, RoRbot was represented by various 3d models, the first one being \"robot.mesh\" which comes with OGRE3D engine.</p>"},{"location":"gameplay/jargon/#a-truck","title":"A truck","text":"<p>May refer to any kind of vehicle or machine in RoR.  Historically, RoR only supported heavy trucks and the rig definition fileformat had extension .truck. Later, other vehicle types and other file extensions were added, but the notion of \"truck\" as any kind of vehicle had stuck.</p>"},{"location":"gameplay/jargon/#caelum","title":"Caelum","text":"<p>Atmospheric effects software.</p>"},{"location":"gameplay/jargon/#fov","title":"FOV","text":"<p>Field of view, defines depth of perspective in 3D scene.</p>"},{"location":"gameplay/jargon/#infraction","title":"Infraction","text":"<p>A form of punishment on the forums. This is usually for misbehavior or breaking the rules.</p>"},{"location":"gameplay/jargon/#ogre-ogre-ogre3d","title":"OGRE, Ogre, Ogre3D","text":"<p>The 3D rendering engine used in Rigs of Rods.</p>"},{"location":"gameplay/jargon/#content-creator-terms","title":"Content creator terms","text":""},{"location":"gameplay/jargon/#stolen","title":"Stolen!","text":"<p>This means the mod in question contains elements, in most cases meshes (3d models) which aren't the author's original work. This includes meshes obtained from public repositories, most notably SketchUp warehouse.</p> <p>More information: Don\u2019t Steal Content or Violate Intellectual Property</p>"},{"location":"gameplay/jargon/#unreleased","title":"Unreleased","text":"<p>Meaning if it is a vehicle, it has no download link and only beta testers have it.</p>"},{"location":"gameplay/jargon/#nb","title":"N/B","text":"<p>Node/Beam. This is the skeleton of any vehicle in RoR. </p>"},{"location":"gameplay/jargon/#node","title":"Node","text":"<p>Essentially zero-dimensional ball joints. They occupy no space, but they do have mass. By themselves they can do very little. They exist to provide beams with two points to connect. They also control collision.</p>"},{"location":"gameplay/jargon/#a-beam","title":"A beam","text":"<p>Visible connections between nodes. Beams do not have any mass and do not interact with anything but the two nodes they are connected to. Beams can stretch, compress, and break based on the forces applied to them. The initial length of a beam is the space between two nodes. As a vehicle moves and flexes, the movement of these two nodes forms the force against the beams. Beam is also the physics engine used in Rigs of Rods.</p>"},{"location":"gameplay/jargon/#ao-ao-bake","title":"AO, AO Bake","text":"<p>Ambient occlusion, a very significant light/shadow effect used in 3D modelling.</p> <p>AO baking is the process of automated generation of AO textures.</p>"},{"location":"gameplay/jargon/#a-cinecam","title":"A cinecam","text":"<p>An user-defined camera attached to vehicle chassis.</p>"},{"location":"gameplay/jargon/#a-command-a-command-beam","title":"A command, a command beam","text":"<p>An user-controlled hydraulic in a vehicle, \"command hydro\".</p>"},{"location":"gameplay/jargon/#editorizer","title":"Editorizer","text":"<p>Freeware program for making n/b structures.</p>"},{"location":"gameplay/jargon/#flares","title":"Flares","text":"<p>Flares are lights in Rigs of Rods. The name refers to their visualization - a 2d flare image, the classic simple depiction of a light source in 3D games. </p>"},{"location":"gameplay/jargon/#props","title":"Props","text":"<p>Meshes that can be added to vehicles that do not have collision.</p>"},{"location":"gameplay/jargon/#flexbody","title":"Flexbody","text":"<p>Flexbodies allow you to make mesh-based vehicles which actually deform with the node-and-beam chassis. This makes for incredible visual detail while still keeping the fantastic deformation physics present in Rigs of Rods. </p>"},{"location":"gameplay/jargon/#fusedrag","title":"Fusedrag","text":"<p>A vehicle feature which adjusts aerodynamic properties of the vehicle body/hull. Very important in RoR, greatly affects speed and acceleration.</p>"},{"location":"gameplay/jargon/#rotators","title":"Rotators","text":"<p>Rotators are alternate commands (Hydros) that allow you to do turntables, like in the base of a rotating crane.</p>"},{"location":"gameplay/jargon/#rollon","title":"Rollon","text":"<p>Enables collision between wheels and the contactable textured surfaces of a truck.</p>"},{"location":"gameplay/jargon/#ropables","title":"Ropables","text":"<p>Nodes that can be grabbed to.</p>"},{"location":"gameplay/jargon/#slopebrake","title":"SlopeBrake","text":"<p>Fixes the bug, where trucks slowly roll down a slope no matter how much brake-force is applied.</p>"},{"location":"gameplay/multiplayer-server-setup/","title":"Multiplayer server setup","text":""},{"location":"gameplay/multiplayer-server-setup/#introduction","title":"Introduction","text":"<p>This tutorial will guide you through the process of setting up a Rigs of Rods multiplayer server.</p>"},{"location":"gameplay/multiplayer-server-setup/#port-forwarding","title":"Port forwarding","text":"<p>THIS STEP IS EXTREMELY IMPORTANT - FAILURE TO PORT FORWARD WILL RESULT IN YOUR SERVER TO NOT APPEAR ON THE SERVER LIST AND OTHER PLAYERS WILL NOT BE ABLE TO JOIN!</p> <p>Before we begin, you MUST be able to forward the server port (TCP <code>12000</code> by default). This requires accessing your router's firewall settings. </p> <p>Warning</p> <p>All routers/ISPs are different, so just search for a tutorial for your router. A general port forwarding guide can be found here. If you're unable to figure it out, don't bother trying to host a server.</p> <p>If you fail to port forward, the Cannot connect to master server error will appear on startup.</p> <p>On Windows, you also may have to allow <code>rorserver.exe</code> through the firewall. </p> <p>Got that? Great! Let's begin. </p>"},{"location":"gameplay/multiplayer-server-setup/#windows","title":"Windows","text":""},{"location":"gameplay/multiplayer-server-setup/#requirements","title":"Requirements","text":"<ul> <li>VS 2015-2022 Redistributable x64</li> <li>Text editor </li> <li>Router access for port forwarding</li> <li>Good internet connection speed</li> <li>A brain, basic computer knowledge, and patience</li> </ul>"},{"location":"gameplay/multiplayer-server-setup/#download","title":"Download","text":"<p>Let's begin by downloading the latest Windows server release from here.</p> <p>Extract the downloaded zip into a new folder:</p> <p></p> <p>Tip</p> <p>It is highly recommended to enable file extensions in File Explorer as this will make it easier to differentiate each config file. Windows 10:  Windows 11: </p>"},{"location":"gameplay/multiplayer-server-setup/#servercfg","title":"server.cfg","text":"<p>Inside the folder, open (<code>server.cfg</code>) with Notepad or your preferred text editor.</p> <p></p> <p>This is the main configuration file for your server. Each section contains a comment explaining what it does, pretty self-explanatory.</p> <p>For simplicity's sake, you only need to change the <code>name</code>, <code>terrain</code>, <code>port</code>, and <code>password</code> lines.</p> <p>Save and close the file once you're finished.</p>"},{"location":"gameplay/multiplayer-server-setup/#servermotd","title":"server.motd","text":"<p>This file sets your server's Message of the Day (MOTD), shown on server join:</p> <p></p> <p>Fill it out with whatever you'd like. </p>"},{"location":"gameplay/multiplayer-server-setup/#serverrules","title":"server.rules","text":"<p>This file contains the rules for your server, shown by typing <code>!rules</code>.</p> <p>Just as before, fill it out with rules you want players to follow. </p>"},{"location":"gameplay/multiplayer-server-setup/#serverauth","title":"server.auth","text":"<p>This file configures the admins and moderators on your server. Please see the UserAuth setup section for more information. </p>"},{"location":"gameplay/multiplayer-server-setup/#running","title":"Running","text":"<p>Once you're finished configuring your server, double-click <code>run.bat</code> to launch the server:</p> <p></p> <p>If successful, your server should now be running and registered on the server list!</p> <p>Please see the troubleshooting section if you receive an error.</p>"},{"location":"gameplay/multiplayer-server-setup/#linux","title":"Linux","text":""},{"location":"gameplay/multiplayer-server-setup/#download_1","title":"Download","text":"<p>I will assume you're running the server on a 64-bit VPS with SSH/FTP access and have <code>unzip</code> and <code>nano</code> installed.</p> <p>Let's begin by downloading the latest Linux server release from here.</p> <p>Upload the file to your VPS using an FTP client such as WinSCP or FileZilla.</p> <p>Now SSH into your VPS and change to the directory where you uploaded the zip file. </p> <p>Extract the zip with the following command:</p> <p><code>unzip rorserver-2021.04-linux.zip -d rorserver</code></p> <p>The server files should now be located in the <code>rorserver</code> folder:</p> <p></p>"},{"location":"gameplay/multiplayer-server-setup/#servercfg_1","title":"server.cfg","text":"<p>In SSH, Go into the newly created <code>rorserver</code> folder and type <code>nano server.cfg</code>.</p> <p></p> <p>This is the main configuration file for your server.</p> <p>Each section contains a comment explaining what it does, pretty self-explanatory.</p> <p>For simplicity's sake, you only need to change the <code>name</code>, <code>terrain</code>, <code>port</code>, and <code>password</code> lines.</p> <p>Once you're done, press <code>CTRL+O</code> to save the file and <code>CTRL+X</code> to exit.</p>"},{"location":"gameplay/multiplayer-server-setup/#servermotd_1","title":"server.motd","text":"<p>This file sets your server's Message of the Day (MOTD), shown on server join:</p> <p></p> <p>Fill it out with whatever you'd like. </p>"},{"location":"gameplay/multiplayer-server-setup/#serverrules_1","title":"server.rules","text":"<p>This file contains the rules for your server, shown by typing <code>!rules</code>.</p> <p>Just as before, fill it out with rules you want players to follow. </p>"},{"location":"gameplay/multiplayer-server-setup/#serverauth_1","title":"server.auth","text":"<p>This file configures the admins and moderators on your server. Please see the UserAuth setup section for more information. </p>"},{"location":"gameplay/multiplayer-server-setup/#running_1","title":"Running","text":"<p>Once you're finished configuring your server, start your server by running the following:</p> <pre><code>chmod +x rorserver\nsh RunRoR.sh\n</code></pre> <p><code>chmod +x rorserver</code> only needs to be run once to set permissions.</p> <p></p> <p>If successful, your server should now be running and registered on the server list!</p> <p>Please see the troubleshooting section if you receive an error.</p>"},{"location":"gameplay/multiplayer-server-setup/#userauth-setup","title":"UserAuth setup","text":"<p>This section will teach you how to set up the <code>server.auth</code> file. This is used to define who is staff on your server.</p> <p>Shut down your server before following these steps.</p>"},{"location":"gameplay/multiplayer-server-setup/#user-token","title":"User token","text":"<p>First, you need to set a user token in your game's settings. To do this, please follow this tutorial.</p>"},{"location":"gameplay/multiplayer-server-setup/#serverauth_2","title":"server.auth","text":"<p>Open the <code>server.auth</code> file in a text editor. The contents should look like this:</p> <pre><code>; This files defines who is an admin, moderator etc on your server\n; the syntax is as follows: &lt;authorization&gt; &lt;token&gt; &lt;username (optional)&gt;\n;  - where authorization is a number between 1 and 13:\n;       1: administrator (red name, has access to all admin functions)\n;       4: moderator (red name, has access to all admin functions)\n;       8: bot, robot (blue name, no special privileges)\n;  - token is the user token of the user. It's the token that uniquely identifies the user, not the username.\n;       This is not the normal token, but an encoded version of it.\n;       You can get this token by starting your server, filling in your token\n;       in your configurator and then look in the logfile for your encoded token.\n;       A typical encoded token is exactly 40 characters long.\n;  - username is the username that will be shown to other players\n;       The username that the user fills in into their configurator will be overridden by this username.\n;       If you do not specify a username, the username from the client's configurator will be used.\n;\n; note: You need to restart server after every edit to this file.\n; note: Do not use spaces in the usernames\n; note: Empty lines and lines starting with a \";\" will be ignored.\n\n; EXAMPLE ADMIN (replace these with your username and encoded token)\n;1 9b3c463506f128319a0f16ef08d39d876ca25c68 admin_user\n</code></pre> <p>Start your server, join it and open the log file located at <code>config/server.log</code>. You should see a line similar to this:</p> <p><code>INFO| New client: example_user (en_US), using RoR 0.4.7.0-dev-0ab5bca-dirty, with token 0EBB5A8B28053AB3CF63D4C59F0C1E04F28F01C9</code></p> <p><code>0EBB5A8B28053AB3CF63D4C59F0C1E04F28F01C9</code> is the hashed token for the player, which is what you will set in your auth file. </p> <p>If you want the player to be a admin, set the number to <code>1</code>, or <code>4</code> if you want the player to be a moderator.</p> <pre><code>;example admin\n1 0EBB5A8B28053AB3CF63D4C59F0C1E04F28F01C9 example_user\n;example moderator\n4 0EBB5A8B28053AB3CF63D4C59F0C1E04F28F01C9 example_user\n</code></pre> <p>Make sure to remove the comment (<code>;</code>) before the line. </p> <p>Save the file and restart your server. If the server read the auth file correctly, it should log this:</p> <p><code>INFO| found X auth overrides in the authorizations file!</code></p> <p>The next time you join your server you should now have a red flag next to your name if you're a admin or a blue flag if you're a moderator.</p> <p></p>"},{"location":"gameplay/multiplayer-server-setup/#moderation-commands","title":"Moderation commands","text":"<p><code>!list</code> </p> <p>Lists all players on a server with their UID.</p> <p><code>!kick</code> and <code>!ban</code> </p> <p>Kicks or bans a player. Banned players are stored in <code>banned-players.json</code> which is loaded on server startup. </p> <p>Usage: <code>!kick UID reason</code> or <code>!ban UID reason</code></p> <p><code>!say</code> </p> <p>Sends a message to a player using their UID or the entire server.</p> <p>Usage: <code>!say 10 message</code> or <code>!say -1 message</code></p>"},{"location":"gameplay/multiplayer-server-setup/#troubleshooting","title":"Troubleshooting","text":"<p>Many things can go wrong with your server, here's a small selection of problems that may occur:</p>"},{"location":"gameplay/multiplayer-server-setup/#common-error-messages","title":"Common error messages","text":""},{"location":"gameplay/multiplayer-server-setup/#cannot-connect-to-master-server","title":"Cannot connect to master server","text":"<p>By default, the server attempts to connect to the server list (master server) and will exit if the connection fails.</p> <p><code>Registration failed, response code: HTTP 503, body: {\"result\":false,\"message\":\"Could not connect to your server and verify it's version. Please check your Firewall or leave it as it is now to create a local only server. Your server is NOT advertised on the master server!</code></p> <p>This happens when:</p> <ul> <li>You didn't forward the port correctly in your router's settings.</li> <li>You specified the wrong IP address in your server's config. If you don't know the correct IP address, then don't specify one. The server will search the correct IP address itself.</li> <li>Your firewall is blocking network access to the server. </li> </ul> <p>If you do not want your server advertised on the server list and would rather have players join through the 'Direct IP' tab , change <code>mode = inet</code> to <code>mode = lan</code> in your server config.</p>"},{"location":"gameplay/multiplayer-server-setup/#address-already-in-use","title":"Address already in use","text":"<p><code>FATAL Listerer: SWInetSocket::bind() error: Address already in use</code></p> <p>The port that you filled in is already in use by another program. Please use another port number.</p>"},{"location":"gameplay/multiplayer-server-setup/#failed-to-open-authorization-file","title":"Failed to open authorization file","text":"<p><code>Couldn't open the local authorizations file ('/etc/rorserver/simple.auth'). No authorizations were loaded.</code></p> <p>This means that the server failed to read your authorization file. Make sure your filename matches the one you specified and refer back to the UserAuth setup section.</p> <p>If you didn't setup an authorization file, you can safely ignore this error message.</p>"},{"location":"gameplay/multiplayer-server-setup/#connection-issues","title":"Connection issues","text":""},{"location":"gameplay/multiplayer-server-setup/#server-uses-a-different-protocol-version","title":"Server uses a different protocol version","text":"<p><code>Network fatal error: server uses a different protocol version</code></p> <p>You need to download the correct game version to match your server version. The latest RoR version supports RoRNet 2.44.</p> <p>The latest version may be downloaded from the homepage.</p> <p>If you've come across a problem not listed here, please post in the appropriate support forum.</p>"},{"location":"gameplay/tuning/","title":"Tuning","text":"<p>Warning</p> <p>This feature is in development. It will be made available in an upcoming release. If you're interested in trying this out today, download the latest development build.</p>"},{"location":"gameplay/tuning/#introduction","title":"Introduction","text":"<p>The tuning menu is a new single player feature available for vehicles. It enables the ability to install add-on parts, toggle visibility of meshes and visual effects, flip wheel direction, and save/load tuneups.</p> <p>Tuning is currently disabled in Multiplayer, support will be added in a future release.</p> <p>For a technical overview of the addonpart file format, see: Addonpart file format</p> <p></p>"},{"location":"gameplay/tuning/#addon-parts","title":"Addon parts","text":"<p>The main feature of the Tuning menu is the ability to install add-on parts with one click, without manually editing the truck file.</p> <p>Add-ons for the currently spawned vehicle will be displayed. Add-ons can be downloaded from the in-game Repository or the website and placed into the <code>mods</code> folder just like vehicles and terrains. Please note that only a handful of parts currently support the new file format. </p> <p>To install a part, simply click the box next to the part name. Click again to remove.</p>"},{"location":"gameplay/tuning/#part-conflicts","title":"Part conflicts","text":"<p>When hovering over an add-on part, red outlines around other parts may appear:</p> <p></p> <p>These are conflicts. Conflicting parts cannot be installed together. When installing a part that conflicts, the other parts will be disabled (marked with an X).</p> <p>Attempting to install a conflicting part through the selector will display an error:</p> <p></p>"},{"location":"gameplay/tuning/#parts-selector","title":"Parts selector","text":"<p>Below the parts list is a <code>Browse all parts</code> button. The parts selector displays all installed addonparts:</p> <p></p> <p>From this menu it's possible to force install any part. Keep in mind that most parts are designed for specific vehicles, installing them will likely result in glitches or other unexpected behavior!</p> <p>The main exception to this are wheels. Some wheels (such as the StanceWerkz Wheel Pack) are designed to be installed onto most vehicles.  These wheels can only be installed through the parts selector.</p>"},{"location":"gameplay/tuning/#visual-elements","title":"Visual elements","text":"<p>The Tuning menu also features the ability to toggle the visibility of props, flexbodies, flares (lights), exhaust smoke, and managedmaterials:</p> <p></p> <p></p> <p>Numbers next to element names are IDs, these are used for the addonpart file format.</p> <p>Disabled elements are moved to the bottom of the list. </p>"},{"location":"gameplay/tuning/#protected","title":"Protected","text":"<p>With the \"Protected\" option, it's possible to 'lock' an element from being changed or disabled by an add-on part. This can be useful for disabling specific elements of an addon (for instance, parts of a body kit).</p>"},{"location":"gameplay/tuning/#wheels","title":"Wheels","text":"<p>When installing wheel addons, it's possible for the wheel mesh to be facing the wrong direction. This can be fixed through the Tuning menu:</p> <p></p> <p>Some vehicles feature flexbody tires, if the wheel includes a pre-mounted tire you will need to hide them:</p> <p></p>"},{"location":"gameplay/tuning/#saving-and-loading","title":"Saving and loading","text":"<p>Once you're finished customizing a vehicle, it can be saved by clicking <code>Save as...</code> at the top of the Tuning menu:</p> <p>Note</p> <p>The <code>Save as...</code> button only appears after installing an add-on or toggling an element. </p> <p></p> <p>Give it a name, then click <code>Save</code>. Existing tunes with the same name will not be overwritten unless <code>Overwrite</code> is enabled.</p> <p></p> <p></p> <p>The tune is now saved. Simply click on the tune name to load it. Press &amp; hold the <code>Delete</code> button to permanently remove a tune.</p> <p>Tunes are saved in <code>.tuneup</code> files inside a new <code>projects</code> folder in the user directory.</p>"},{"location":"gameplay/tuning/#savegames","title":"Savegames","text":"<p>Savegames work seamlessly with Tuning, any changes you make to spawned vehicles will be saved. </p> <p>When loading a savegame, the game may freeze/hang for a second when accessing the Tuning menu. This is caused by the conflict check and is normal.</p>"},{"location":"gameplay/vehicle-ai/","title":"Vehicle AI","text":""},{"location":"gameplay/vehicle-ai/#introduction","title":"Introduction","text":"<p>Introduced in version 2022.12, AI vehicles now can be controlled and customized through the \"Vehicle AI\" section of the top menu:</p> <p></p> <p>Only available in single player, disabled in multiplayer to prevent abuse. </p> <p>This page serves as a guide on how to use this new feature, along with explaining its limitations. </p> <p>Video demo:</p>"},{"location":"gameplay/vehicle-ai/#general-options","title":"General options","text":""},{"location":"gameplay/vehicle-ai/#vehicle-count","title":"Vehicle count","text":"<p>How many vehicles should be spawned. The distance and position values are only used with more than one vehicle.</p>"},{"location":"gameplay/vehicle-ai/#distance","title":"Distance","text":"<p>The distance between each vehicle. Make sure to not set too low of a value, otherwise the vehicles may spawn inside of each other!</p>"},{"location":"gameplay/vehicle-ai/#position","title":"Position","text":"<p>Whether the vehicles will spawn behind or next to each other. </p> <p>Behind:</p> <p></p> <p>Parallel:</p> <p></p>"},{"location":"gameplay/vehicle-ai/#repeat-times","title":"Repeat times","text":"<p>How many times to loop the path. Useful if you want a vehicle to drive multiple laps. </p>"},{"location":"gameplay/vehicle-ai/#vehicle-options","title":"Vehicle options","text":""},{"location":"gameplay/vehicle-ai/#modes","title":"Modes","text":"<p>Currently there are five modes available. Each mode defines how the AI vehicle will behave. </p>"},{"location":"gameplay/vehicle-ai/#normal","title":"Normal","text":"<p>The default mode. AI vehicle will modify its speed for turns, and will slow down/stop if other vehicles or the player character is blocking the path. </p> <p>A demo video of this mode can be seen above. </p>"},{"location":"gameplay/vehicle-ai/#race","title":"Race","text":"<p>Sets the AI vehicle to always drive at the defined speed.  Currently this mode will not slow down to make turns, as a result the vehicle may miss sharp turns.</p> <p>Demo video:</p>"},{"location":"gameplay/vehicle-ai/#drag-race","title":"Drag Race","text":"<p>Sets up two parallel vehicles which will accelerate at full speed. Best used with a drag strip such as Rock Falls Raceway.</p> <p>Demo video:</p>"},{"location":"gameplay/vehicle-ai/#crash","title":"Crash","text":"<p>Sets up two vehicles that will drive into each other. Works best with straight line paths. </p> <p>Demo video:</p>"},{"location":"gameplay/vehicle-ai/#chase","title":"Chase","text":"<p>Sets the AI vehicle to chase the player vehicle or character.  Currently the AI will always try to target the player without taking other waypoints or objects into account.  As a result this mode works best on a flat terrain, on other maps the AI will usually end up crashing. </p> <p>Demo video:</p>"},{"location":"gameplay/vehicle-ai/#speed","title":"Speed","text":"<p>Sets the speed of the AI vehicle in km/h for cars and trucks and knots for boats and airplanes.</p>"},{"location":"gameplay/vehicle-ai/#altitude","title":"Altitude","text":"<p>Sets the height airplanes will climb to after take off. Currently planes will remain at the set altitude, they won't ascend or descend to reach a checkpoint.</p>"},{"location":"gameplay/vehicle-ai/#vehicle-name","title":"Vehicle name","text":"<p>The vehicle the AI will use. Default is the 'Bus RVI Agora S', a standard vehicle included with RoR. Just click on the name to open a selector menu.  If the chosen vehicle has sections and/or skins, the AI vehicle will use the selected section/skin.</p>"},{"location":"gameplay/vehicle-ai/#presets-menu","title":"Presets menu","text":"<p>After setting up the above options, click the <code>Presets</code> drop down menu:</p> <p></p> <p>On a supported terrain, the presets that are available for the terrain will be displayed. If not a list of supported terrains will be shown instead.</p> <p>Presets are automatically downloaded from the ai-waypoints GitHub repository.</p>"},{"location":"gameplay/vehicle-ai/#startstoprecord","title":"Start/Stop/Record","text":"<p>After selecting the preset, click the <code>Start</code> button to spawn the AI vehicle(s). Click <code>Stop</code> at any time to remove the AI. You can press <code>Start</code> multiple times to spawn more vehicles.</p> <p>The <code>Record</code> button allows you to place waypoints by recording the vehicle/character movement. This feature is mostly meant for fun, it is not recommended to use this to create presets.</p>"},{"location":"gameplay/vehicle-ai/#creating-waypoint-presets","title":"Creating waypoint presets","text":"<p>Creating a new waypoint preset is simple. Just open the enlarged overview map (press <code>TAB</code> key twice):</p> <p></p>"},{"location":"gameplay/vehicle-ai/#controls","title":"Controls","text":"<p>At the bottom of the map you'll find the following mouse controls:</p> <p>Teleport - Left click </p> <p>Set AI waypoint - Right Click </p> <p>Remove all AI waypoints - Middle click </p> <p>Scroll wheel - Zoom mini map </p> <p>Note</p> <p>The zoom feature only works with the small minimap: </p>"},{"location":"gameplay/vehicle-ai/#adding-waypoints","title":"Adding waypoints","text":"<p>Right click anywhere on the overview map to place a waypoint. Middle click on any waypoint to delete it.</p> <p>After placing the waypoints, click the <code>Start</code> button to test drive your route. </p> <p>Your overview map should now look similar to this:</p> <p></p>"},{"location":"gameplay/vehicle-ai/#exporting","title":"Exporting","text":"<p>Now click on the <code>Waypoints</code> drop down menu:</p> <p></p> <p>Coordinates of each waypoint will be displayed. Clicking on a coordinate will teleport you to the waypoint. </p> <p>When finished click the <code>Export</code> button. You should see a message which reads <code>X waypoints exported to RoR.log</code>.</p> <p>Browse to where your RoR.log is located (<code>Documents\\My Games\\Rigs of Rods\\logs</code> on Windows or <code>~/.rigsofrods/logs</code> on Linux) and open the <code>RoR.log</code> file with a text editor.</p> <p>Scroll to the end of the file, you should see lines similar to these:</p> <pre><code>    {\n        \"terrain\":\"simple2.terrn2\",\n        \"preset\":\"Preset name\",\n        \"waypoints\":\n        [\n            [514.403748, 0.000000, 513.201904],\n            [1008.375610, 0.000000, 521.615051],\n            [1007.173706, 0.000000, 25.239437],\n            [9.615024, 0.000000, 24.037560],\n            [15.624413, 0.000000, 993.953064],\n            [998.400024, 0.000000, 995.200012],\n            [320.901398, 0.000000, 514.403748],\n            [495.994720, 0.000000, 513.038086]\n        ]\n    }\n</code></pre> <p>The waypoints are exported in JSON format. </p> <p>From here you can:</p> <ul> <li> <p>Name the preset and create an issue ticket on GitHub with the completed preset. Someone else will add it to the <code>waypoints.json</code> file. </p> </li> <li> <p>Download the <code>waypoints.json</code> file from GitHub (right click -&gt; Save As, set file type to \"All files\") and place it in the <code>savegames</code> folder. RoR will load this file instead of downloading. Edit the file with your new preset, then create a pull request with your changes.</p> </li> </ul> <p>The preset can also be added to a terrain using the AI Presets section.</p>"},{"location":"gameplay/vehicle-ai/#limitations","title":"Limitations","text":"<p>The current AI is an evolution of the per-terrain based AI featured on terrains such as F1 Test Track and Bajarama V2. It has some limitations:</p> <ul> <li> <p>An AI vehicle in 'normal' mode will slow down at every waypoint. For most terrains this is fine but for others (such as race tracks) the AI drives too slowly. The current 'race' mode does not fix this as that mode will always drive at the same speed and won't slow down for corners.</p> </li> <li> <p>As stated above, the 'chase' mode only targets the player and does not follow any other waypoints. This usually results in the chase vehicle crashing. </p> </li> </ul>"},{"location":"gameplay/version-2020-01-faq/","title":"Version 2020.01 FAQ","text":"<p>Rigs of Rods version 2020.01 brings some important changes to how players interact with the game. This page should answer any questions you have about these changes.</p>"},{"location":"gameplay/version-2020-01-faq/#version-format-change","title":"Version format change","text":"<p>Until now, Rigs of Rods has used the semver release format (0.38.x, 0.39.x, 0.4.x).  Starting with version 2020.01, we now use date-based versioning.  All future versions will now start with <code>&lt;year&gt;.&lt;month&gt;</code></p>"},{"location":"gameplay/version-2020-01-faq/#why","title":"Why?","text":"<p>In 2016, we (the RoR developers) released version 0.4.7.0. During the following years, lots of bugfixes and new features were added. We wanted to include them all with the next release, 0.4.8.0, but new bugs and technical issues prevented us from doing so. </p> <p>So on January 2019, the first release candidate, 0.4.8 RC1, was released as a test build. As with all test builds, bugs were found and the next release candidates (RC2, RC3, RC4) followed.</p> <p>But as we made more changes and bugfixes, mods became dependent on the development builds to function properly. The current stable release (0.4.7.0) became too old to support them. However, the game still had some major glitches holding back an official 0.4.8.0 release. As a solution, we decided to release 0.4.8 RC4 as a replacement to 0.4.7.0, followed by RC5 a few months later.</p> <p>With RoR now considered 'stable enough' to do another stable release, we wanted to break away from release candidates. The original plan was to finally officially release 0.4.8.0, however compatibility issues with the Documents user folder (explained below) made it nearly impossible to correctly handle upgrades. After long discussions on Discord and GitHub(1 / 2) we ultimately decided to change the version format.</p>"},{"location":"gameplay/version-2020-01-faq/#user-folder-location-change","title":"User folder location change","text":"<p>Since 0.38, the user directory, where mods and configuration files are stored, was named after the version number (<code>Rigs of Rods 0.38/0.39/0.4</code>). All 0.4 versions have used the same <code>Documents\\Rigs of Rods 0.4</code> directory. Over time, the config file format has received major updates, making it increasingly difficult to be backwards compatible. In most cases, attempting to upgrade from older versions caused RoR to either outright crash or have other major glitches.</p> <p>Starting with version 2020.01, the user directory has been moved to <code>Documents\\My Games\\Rigs of Rods</code>. The <code>My Games</code> folder is used by a large amount of modern Windows games to store configuration files, so it is fitting for RoR to use it as well. </p> <p>The user directory on Linux will remain in <code>~/.rigsofrods</code> for now.</p>"},{"location":"gameplay/version-2020-01-faq/#mods","title":"Mods","text":"<p>On first run, players with the old directory will receive a notice about the directory change. To continue using your mods, you will have to move your mod directories (<code>mods</code> on recent RCs, or <code>packs</code>,<code>terrains</code>, and <code>vehicles</code> on older versions) to the new <code>My Games\\Rigs of Rods</code> directory. RoR itself will not move the folders to prevent data loss. The Installing content page has been updated for the new directory. </p>"},{"location":"gameplay/version-2020-01-faq/#settings-and-input-mappings","title":"Settings and input mappings","text":"<p>At the moment, players who already use 0.4.8 RC5 can move the <code>config</code> and <code>savegames</code> folders from <code>Documents\\Rigs of Rods 0.4</code> to the new directory without issues. </p> <p>For those running older versions, DO NOT move the <code>config</code> or <code>savegames</code> folders. Version 2020.01 is not compatible with anything older than 0.4.8 RC5.</p> <p>If you have input maps for controllers (separate controller <code>.map</code> files, not an edited <code>input.map</code>!!) you will have to move those to the new <code>config</code> folder to continue using your input devices.</p>"},{"location":"gameplay/version-2020-01-faq/#end-of-32-bit-support","title":"End of 32 bit support","text":"<p>Beginning with version 2020.01, Rigs of Rods will be for 64-bit systems only due to unfixable bugs with 32 bit builds. We're sorry for any inconvenience this may cause.</p>"},{"location":"rules/community-guidelines/","title":"Community Guidelines","text":"<p>TL;DR</p> <p>Be kind, inclusive, and respectful. No harassment, hate speech, or trolling will be tolerated. Respect everyone\u2019s privacy and intellectual property. Keep discussions constructive and on-topic. Being a part of the Rigs of Rods community is a privilege, not a right, and members who continually breach these guidelines will find themselves limited or removed from the community, regardless of any contributions they have made.</p>"},{"location":"rules/community-guidelines/#be-respectful-and-kind","title":"Be Respectful and Kind","text":"<ol> <li>Treat everyone with respect. No derogatory or harmful language, harassment, or personal attacks.</li> <li>Encourage positive interactions. Constructive feedback is great, but make sure it's kind and helpful.</li> <li>Discrimination will not be tolerated. This includes racism, sexism, homophobia, transphobia, or any other forms of hate or bigotry.</li> </ol>"},{"location":"rules/community-guidelines/#no-begging-for-content-or-help","title":"No Begging for Content or Help","text":"<ol> <li> <p>Don\u2019t repeatedly ask for content or mods. Respect the time and effort creators put into their work. Requests for help or content should be polite and reasonable, but please avoid excessive begging.</p> <p>A few examples of begging include:</p> <ul> <li>Constantly asking, \u201cWhen will this mod be released?\u201d in multiple channels or threads.</li> <li>Sending private messages to creators asking for early access or custom content.</li> <li>Demanding or pressuring others to create mods, skins, or vehicles for you without offering compensation or collaboration.</li> </ul> </li> <li> <p>Be patient. The community is here to help, but answers or content may take time. Remember that everyone is a volunteer.</p> <p>A few examples of begging for help include:</p> <ul> <li>Posting the same request across multiple channels or threads within a short period of time.</li> <li>Continuously asking for personal troubleshooting assistance without attempting to follow previous advice or read existing documentation.</li> <li>Demanding immediate help or answers, especially from specific community members. </li> </ul> </li> </ol> <p>By avoiding these behaviors, you help maintain a positive atmosphere where creators and helpers feel appreciated for their time and contributions.</p>"},{"location":"rules/community-guidelines/#respect-unwritten-rules-and-community-norms","title":"Respect Unwritten Rules and Community Norms","text":"<ol> <li>Be mindful of community culture. Every community has certain unwritten norms that regular members follow. Pay attention to how conversations typically flow and adapt accordingly.</li> <li>Be a good community member. While some rules aren\u2019t explicitly stated, following common sense and showing basic etiquette goes a long way. Respecting unwritten guidelines ensures that the community remains a welcoming and enjoyable place for everyone.</li> </ol>"},{"location":"rules/community-guidelines/#respect-moderators","title":"Respect Moderators","text":"<ol> <li>Moderators are here to help. If you have a problem, reach out to them respectfully.</li> <li>Follow their instructions. If you're asked to stop certain behavior or move a discussion elsewhere, please comply. They\u2019re working to keep the community safe and welcoming for everyone.</li> </ol>"},{"location":"rules/community-guidelines/#engage-constructively","title":"Engage Constructively","text":"<ol> <li>Stay on topic. Stick to project-related discussions, whether it's about mods, development, or gameplay.</li> <li>Provide constructive criticism. If you\u2019re giving feedback, do so in a way that builds others up rather than tears them down.</li> <li>Avoid flaming or inciting drama. Heated discussions are okay, but personal attacks, arguments, and toxic behavior are not.</li> </ol>"},{"location":"rules/community-guidelines/#keep-our-community-safe","title":"Keep our Community Safe","text":"<ol> <li>No harassment or trolling. Harassment and trolling harm the community and make others feel unwelcome or unsafe. Harassment can take many forms, including targeted abuse, threats, personal attacks, or even subtle behaviors like constantly criticizing or belittling someone. Trolls seek to provoke others for entertainment, often derailing discussions and creating a toxic environment.</li> <li>No hate speech or harmful language. This community does not tolerate racism, sexism, homophobia, transphobia, or any other form of discrimination. This includes slurs, derogatory language, or attempts to dehumanize or marginalize any group based on their identity. Hate speech will result in immediate action from moderators, including warnings, temporary suspensions, or permanent bans.</li> <li>No spamming or unsolicited self-promotion. Spamming disrupts meaningful conversations and can overwhelm others. While we encourage sharing mods, ideas, and contributions, excessive self-promotion or promoting unrelated content can derail discussions.</li> <li>Maintain privacy and personal boundaries. Respect the privacy of others and avoid sharing or soliciting personal information, such as real names, addresses, or other sensitive details, without explicit consent. Even seemingly harmless inquiries about personal details can make others feel uncomfortable or unsafe, so it\u2019s crucial to maintain boundaries. Everyone has a right to privacy, respect that.</li> <li>No graphic or inappropriate content. This community is meant to be safe for all ages, so avoid sharing or discussing inappropriate or explicit content. This includes images, links, or discussions that are violent, graphic, or sexually explicit. Moderators may take immediate action if inappropriate content is shared</li> <li>This space is dedicated to the enjoyment and development of Rigs of Rods. Discussions should focus on topics relevant to the game, modding, or community-related matters. While off-topic conversations are welcome in designated areas, they should not dominate the main channels or forums.</li> </ol>"},{"location":"rules/community-guidelines/#inclusivity-is-key","title":"Inclusivity is Key","text":"<ol> <li>We are a global community. Rigs of Rods attracts people from all over the world, with different cultural backgrounds, languages, and perspectives. It\u2019s important to be open-minded, respectful, and willing to learn from others. Take into account that what may be common or normal in one region may not be the same elsewhere.</li> <li>All skill levels are welcome. Whether someone is brand new to Rigs of Rods or has been contributing for years, everyone deserves respect and encouragement. Beginners may need more help, so be patient and supportive. Experienced users should offer guidance rather than ridicule.</li> <li>Use inclusive language. Avoid making assumptions about others\u2019 identities, such as their gender, background, or abilities.</li> <li>Recognize diverse perspectives and experiences. People will approach topics and conversations differently based on their own life experiences. This diversity makes our community richer. Respect and listen to other viewpoints, and avoid dismissing someone\u2019s contributions or opinions based on assumptions about their background or identity.</li> <li>Avoid exclusionary behavior. Ensure that no one feels left out or alienated. Cliques, inside jokes, and exclusionary behavior can create an unwelcoming environment. Make an effort to include everyone, whether in-game discussions, mod development, or casual chats.</li> </ol>"},{"location":"rules/community-guidelines/#dont-steal-content-or-violate-intellectual-property","title":"Don\u2019t Steal Content or Violate Intellectual Property","text":"<ol> <li> <p>Respect creators\u2019 work. The Rigs of Rods community thrives on user-generated content like mods, skins, and vehicles. While Rigs of Rods itself is licensed under the GNU General Public License v3 (GPLv3), this license does not apply to user-generated content. Creators retain full rights over the content they create, and their work must be respected accordingly.</p> <p>A few examples of content theft include:</p> <ul> <li>Downloading someone else\u2019s mod, skin, or vehicle and reposting it as your own without permission or credit.</li> <li>Modifying someone else's work and sharing it without the original creator\u2019s consent and proper attribution.</li> <li>Using assets, textures, or models from other games, websites, or creators without following their licensing terms.</li> </ul> </li> <li> <p>Always give proper credit. When sharing or using someone else\u2019s work, make sure to give clear credit to the original creator. Even if you\u2019ve made modifications, acknowledge the original author in your post or description.</p> <p>Examples of giving proper credit:</p> <ul> <li>\u201cThis vehicle mod was originally created by [Creator\u2019s Name], and I\u2019ve modified it with their permission.\u201d</li> <li>\u201cTextures used in this mod are from [Creator\u2019s Name], used with a Creative Commons license.\u201d</li> </ul> </li> <li> <p>Ask for permission when necessary. If you want to use or modify someone else\u2019s work in any way, always ask for their permission first. Many creators are open to collaboration or sharing, but it\u2019s important to show respect by getting their consent.</p> </li> <li> <p>Follow licensing and terms of use. Some content may come with specific licenses that outline how it can be used or shared (e.g., Creative Commons). Make sure to follow these guidelines strictly.</p> <p>Violation of licensing include:</p> <ul> <li>Re-uploading content that\u2019s been explicitly licensed for non-commercial or personal use without proper attribution.</li> <li>Distributing or selling mods that were meant to be freely available.</li> </ul> </li> </ol> <p>By respecting these guidelines, you\u2019re helping to support a healthy and creative community where everyone\u2019s contributions are valued and protected.</p>"},{"location":"rules/community-guidelines/#enforcement-and-sanctions","title":"Enforcement and Sanctions","text":"<p>Moderators are responsible for ensuring that all members adhere to the community standards, and violations will be addressed in a fair and consistent manner.</p> <ol> <li>Warning<ul> <li>First offenses are typically met with a warning. For minor infractions, a moderator may issue a verbal or written warning, either privately or publicly, depending on the situation.</li> <li>Warnings are an opportunity for learning. The goal is to give members a chance to understand what they\u2019ve done wrong and improve their behavior. Members are encouraged to ask moderators for clarification if they\u2019re unsure about what prompted the warning.</li> </ul> </li> <li>Temporary Mutes<ul> <li>Mutes on Discord may be used to prevent further disruptive behavior. If a user continues to engage in inappropriate or disruptive behavior after receiving a warning, moderators may temporarily mute or restrict them from posting in channels.</li> </ul> </li> <li>Temporary Suspensions<ul> <li>More serious infractions may result in temporary suspensions. If a user violates community guidelines in a significant way or continues problematic behavior despite multiple warnings, a temporary suspension (ban) may be applied.</li> <li>Duration of suspension: Temporary suspensions typically range from a few days to a few weeks, depending on the nature of the violation and the user\u2019s history. During this time, the suspended member will be unable to post, engage, or access the community.</li> <li>Re-entry after suspension: Members returning from suspension are expected to adjust their behavior accordingly. Further violations after a suspension can result in a permanent ban.</li> </ul> </li> <li>Permanent Bans<ul> <li>Serious or repeated offenses may result in a permanent ban. In cases where users engage in severe violations or consistently ignore the guidelines and sanctions, they may be permanently banned from the community. This means they will no longer have access to either the Rigs of Rods forums or Discord server.</li> <li>No tolerance for extreme offenses. There is zero tolerance for certain actions, including threats of harm, hate speech, and the sharing of illegal or harmful material. These will result in an immediate and permanent ban.</li> </ul> </li> <li>Content Removal <ul> <li>Inappropriate or harmful content may be removed without warning. If a post, comment, or link violates community guidelines, moderators may remove the content to protect the community.</li> <li>Notification of removal: Moderators will typically inform users why their content was removed and provide a reason. However, in extreme cases (e.g., harmful or offensive content), the content may be removed without prior notification to minimize harm.</li> </ul> </li> <li>Appeals Process<ul> <li>Members can appeal disciplinary actions.  If you feel that a warning, mute, suspension, or ban was applied unfairly, you may appeal the decision on our Help Desk. You may not contact any moderator to appeal their decision, doing so may make your appeal more likely to be rejected. Moderators and administrators will review the case and any relevant context to determine whether the action was appropriate.</li> <li>Appeals must be respectful and constructive. Personal attacks against moderators or dismissive responses may result in further penalties. If your appeal is denied, the decision will stand, and continued attempts to bypass or contest it could lead to further sanctions.</li> </ul> </li> <li>Moderator Discretion<ul> <li>Moderators may apply sanctions based on context. Not every violation fits neatly into a specific category, and moderators may use their discretion when issuing warnings or sanctions. The intent behind the action, its impact on the community, and the user\u2019s behavior history will be considered.</li> </ul> </li> <li>Zero Tolerance for Retaliation<ul> <li>Retaliating against members for reporting misconduct is prohibited. If you report a violation or inappropriate behavior, you are protected from any form of retaliation. Attempts to harass or intimidate members who report others will result in immediate disciplinary action.</li> </ul> </li> </ol>"},{"location":"rules/contributor-code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"rules/contributor-code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"rules/contributor-code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or   advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"rules/contributor-code-of-conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"rules/contributor-code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"rules/contributor-code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at abuse-policy{at}rigsofrods.org. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"rules/contributor-code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p>"},{"location":"rules/forum-rules/","title":"Forum Rules","text":"<p>TL;DR</p> <p>This acts as an extension of the Community Guidelines. These rules are specific to the community forums.</p>"},{"location":"rules/forum-rules/#be-respectful-and-courteous","title":"Be Respectful and Courteous","text":"<ul> <li>Treat all community members with kindness and respect. Personal attacks, insults, harassment, or bullying will not be tolerated.</li> <li>Disagreements are normal, but always debate ideas, not people. Avoid rude sarcastic, or condescending language.</li> <li>Discriminatory language or hate speech based on race, gender, sexual orientation, nationality, religion, or any other identity will result in immediate action.</li> </ul>"},{"location":"rules/forum-rules/#constructive-feedback-only","title":"Constructive Feedback Only","text":"<ul> <li>When offering feedback or critique on others' work (e.g., mods, vehicles, skins), keep it constructive and helpful.</li> <li>Avoid harsh or unnecessary criticism that discourages others from contributing.</li> <li>If you're requesting help or feedback, be patient and clear about what you're looking for.</li> </ul>"},{"location":"rules/forum-rules/#spam","title":"Spam","text":"<p>Definition: Spam refers to irrelevant, unsolicited, or repetitive messages that disrupt the flow of conversation and clutter the forums.</p> <p>Types of Spam:</p> <ul> <li>Posting the same message multiple times across different threads or forums.</li> <li>Posting unrelated content that doesn\u2019t contribute to the discussion.</li> <li>Posting excessive links to external sites, especially for commercial purposes without permission.</li> </ul> <p>Spam posts may be removed without warning. If spam posts are spam cleaned, your account may be soft deleted and banned, which can not be undone.</p>"},{"location":"rules/forum-rules/#no-vpnproxy-during-sign-up-or-login","title":"No VPN/Proxy During Sign-Up or Login","text":"<p>Members are prohibited from using VPNs or proxies while signing up for or logging into the forums.</p> <p>Using VPNs or proxies can hinder our ability to verify accounts and prevent abuse, including spam and malicious activity. This measure helps protect the community by ensuring that all members are identifiable and accountable.</p> <p>Accounts created or accessed using a VPN or proxy may be flagged, suspended, or banned.</p> <p>Users found attempting (with a very high hit rate) to log in with a VPN or proxy may be temporarily blocked until they log in from a verified IP address.</p>"},{"location":"rules/forum-rules/#necroposting","title":"Necroposting","text":"<p>Definition: Necroposting occurs when a user replies to a thread that has been inactive for an extended period (typically several months) without adding meaningful content to the discussion.</p> <p>Before posting in an older thread, consider whether your contribution is relevant and adds value to the discussion. If the topic is outdated or resolved, consider starting a new thread instead.</p>"},{"location":"rules/forum-rules/#use-descriptive-titles-and-clear-posts","title":"Use Descriptive Titles and Clear Posts","text":"<ul> <li>Make sure your thread titles are clear and descriptive so others can understand your topic at a glance.</li> <li>When asking for help or sharing work, provide detailed descriptions and relevant information. Vague or unclear posts are harder to respond to and my be considered spam.</li> </ul>"},{"location":"rules/forum-rules/#stay-on-topic","title":"Stay on Topic","text":"<p>Make sure your posts are relevant to the specific forum or thread you're contributing to.</p>"},{"location":"rules/forum-rules/#search-first-ask-after","title":"Search First, Ask After","text":"<p>Please search the forums before posting a new thread for a request or question. Often, you'll find that your question or problem has already been addressed, with answers readily available\u2014so you won\u2019t have to wait for a reply.</p>"},{"location":"rules/forum-rules/#singularity","title":"Singularity","text":"<ul> <li>You can only have one account per person. Users found making multiple accounts will have all of their accounts suspended.</li> <li>One topic per subject. Do not create multiple threads for the same subject.</li> </ul>"},{"location":"rules/forum-rules/#using-school-provided-emails","title":"Using School Provided Emails","text":"<p>Using a K-12 school-provided email address is prohibited. However, you are allowed to use email addresses from higher education institutions, such as colleges and universities. Please note that some of our emails may be filtered by your IT department as spam.</p>"},{"location":"rules/forum-rules/#keeps-the-forums-safe-and-family-friendly","title":"Keeps the Forums Safe and Family-Friendly","text":"<ul> <li>Do not post or link to any content that is inappropriate, illegal, or unsafe for all ages, including graphic violence, sexual content, or any illegal material.</li> <li>Refrain from using excessive profanity or offensive language. Keep the environment welcoming for everyone.</li> </ul>"},{"location":"rules/forum-rules/#report-rule-violations","title":"Report Rule Violations","text":"<ul> <li>If you see a post that violates these rules, report it to the forum moderators rather than engaging with it. </li> <li>Forum moderators are here to help maintain the community's standards, so don\u2019t hesitate to ask for help if something feels off.</li> </ul> How do I report someone on the forums? <p>At the bottom of every thread and post are several links. One of these links should look like:</p> <p></p> <p>It\u2019s important to speak up if you notice something unusual. Our forums include a built-in reporting feature that allows you to notify the site staff directly.</p> <p></p>"},{"location":"rules/multiplayer-rules-to-play-by/","title":"Multiplayer Rules to Play By","text":"<p>TL;DR</p> <p>Everything from our Community Guidelines apply here. Don't be a jerk when playing multiplayer. Everything you say and do is logged publicly and is associated with your IP address or your Rigs of Rods account (if signed in).</p>"},{"location":"rules/multiplayer-rules-to-play-by/#general-conduct","title":"General Conduct","text":"<ol> <li>Respect other players. Be courteous and avoid trolling, bullying, or harassing others.</li> <li>No excessive profanity. Keep the language appropriate for all ages.</li> <li>No griefing. Don't deliberately ruin other players' experiences (e.g., crashing into them without reason).</li> </ol>"},{"location":"rules/multiplayer-rules-to-play-by/#vehicle-usage","title":"Vehicle Usage","text":"<ol> <li>Avoid vehicle spamming. Don't spawn multiple vehicles unnecessarily, as it can lag the server.</li> <li>Use reasonable vehicles. Choose vehicles that don\u2019t cause extreme lag or performance issues for other players.</li> <li>No excessive resetting. Avoid resetting your vehicle constantly, as it disrupts gameplay.</li> </ol>"},{"location":"rules/multiplayer-rules-to-play-by/#server-etiquette","title":"Server Etiquette","text":"<ol> <li>Obey server rules and game moderators. Follow the server's instructions and listen to game moderators.</li> <li>No hacking or exploiting. Using hacks, cheats, or exploiting glitches to gain an unfair advantage is strictly forbidden.</li> <li>No advertising. Do not promote other servers or content unrelated to Rigs of Rods.</li> </ol>"},{"location":"rules/multiplayer-rules-to-play-by/#fair-play","title":"Fair Play","text":"<ol> <li>Avoid disruptive behavior. Don\u2019t intentionally ram, push, or interfere with other players\u2019 vehicles without their consent.</li> <li>Respect gameplay boundaries. Do not use features or vehicles that are banned on the server.</li> </ol>"},{"location":"rules/multiplayer-rules-to-play-by/#chat-rules","title":"Chat Rules","text":"<ol> <li>Respectful chat behavior. Don\u2019t spam the chat or flood it with unnecessary messages.</li> <li>Keep it relevant. Use chat for relevant communication, and don\u2019t use it to argue or escalate conflicts.</li> </ol>"},{"location":"rules/multiplayer-rules-to-play-by/#reporting","title":"Reporting","text":"<ol> <li>Use proper channels. If you encounter issues such as griefing, rule violations, or inappropriate behavior, use the server\u2019s reporting system.</li> <li>Provide details. If you report using our Help Desk, please collect as much evidence as possible.<ul> <li>Player's name or username</li> <li>Time of the incident</li> <li>Description of the incident</li> <li>Screenshots or video, if possible</li> </ul> </li> </ol> <p>If you see something say something, don't let others ruin your multiplayer experience.</p>"},{"location":"rules/multiplayer-rules-to-play-by/#sanctions","title":"Sanctions","text":"<p>Game moderators are responsible for ensuring that the multiplayer experience adhere to community standards, and violations will be address in a fair and consistent manner.</p> <p>Members can appeal disciplinary actions. If you feel that a warning, mute, or ban was applied unfairly, you may appeal the decision on our Help Desk. You may not contact any game moderator to appeal their decision. You may also not post in either the community forums or Discord server asking for the decision to be reversed.</p>"},{"location":"rules/privacy-policy/","title":"Privacy Policy","text":"<p>We are rigsofrods.org (\"we\", \"our\", \"us\"). We\u2019re committed to protecting and respecting your privacy. If you have questions about your personal information please reach out to us using our Help Desk or privacy@rigsofrods.org. We respect your data and right to privacy.</p>"},{"location":"rules/privacy-policy/#information-held","title":"Information Held","text":"<p>The type of data that we collect and process includes:</p> <ul> <li>Your name or username.</li> <li>Your email address.</li> <li>Your IP address.</li> </ul> <p>Further data may be collected if you choose to share it, such as if you fill out fields on your profile.</p> <p>We collect some or all of this information in the following cases:</p> <ul> <li>You register as a member on this site.</li> <li>You fill out our contact form.</li> <li>You browse the forum site. See Cookie Policy.</li> <li>You use in-game features such as multiplayer and repository.</li> <li>You fill out fields on your profile.</li> </ul>"},{"location":"rules/privacy-policy/#how-we-use-your-information","title":"How We Use Your Information","text":"<p>We may use your personal information in the following ways:</p> <ul> <li>For the purposes of making you a registered member of our site, in order for you to contribute content to this site.</li> <li>We may use your email address to inform you of activity on our site.</li> <li>Your IP address is recorded when you perform certain actions on our site. Your IP address is never publicly visible.</li> </ul>"},{"location":"rules/privacy-policy/#other-ways-we-use-your-information","title":"Other Ways We Use Your Information","text":"<p>In addition to notifying you of activity on our site which may be relevant to you, from time to time we may wish to communicate with all members any important information such as newsletters or announcements by email. You can opt-in to or opt-out of such emails in your profile.</p> <p>We may collect non-personally identifiable information about you in the course of your interaction with our site. This information may include technical information about the browser or type of device you're using. This information will be used purely for the purposes of analytics and tracking the number of visitors to our site.</p>"},{"location":"rules/privacy-policy/#your-data-is-secure","title":"Your Data Is Secure","text":"<p>We are committed to ensuring that any information you provide to us is secure. In order to prevent unauthorized access or disclosure, we have put in place suitable measures and procedures to safeguard and secure the information that we collect.</p>"},{"location":"rules/privacy-policy/#cookie-policy","title":"Cookie Policy","text":"<p>Cookies are small text files which are set by us on your computer which allow us to provide certain functionality on our site, such as being able to log in, or remembering certain preferences.</p> <p>We have a detailed cookie policy and more information about the cookies that we set as it is forum-specific.</p>"},{"location":"rules/privacy-policy/#your-rights","title":"Your Rights","text":"<p>You have a right to access the personal data we hold about you or obtain a copy of it. To do so please reach out to us on our Help Desk or privacy@rigsofrods.org. If you believe that the information we hold for you is incomplete or inaccurate, you may reach out to ask us to complete or correct that information.</p> <p>You also have the right to request the complete erasure of your personal data. Please reach out to us on our Help Desk or privacy@rigsofrods.org.</p>"},{"location":"rules/privacy-policy/#acceptance","title":"Acceptance","text":"<p>Continued use of our site signifies your acceptance of this policy. If you do not accept the policy then please do not use this site. When registering we will further request your explicit acceptance of the privacy policy.</p>"},{"location":"rules/privacy-policy/#changes","title":"Changes","text":"<p>We may make changes to this policy at any time. You may be asked to review and re-accept the information in this policy if it changes in the future.</p>"},{"location":"rules/project-governance/","title":"Project Governance","text":"<pre><code>graph TD\n    A[Project leader] --&gt; B[Project administrators]\n    A --&gt; C[Core maintainers]\n    C --&gt; INT[Translators]\n    C --&gt; CC[Code contributors]\n    C --&gt; IN[Insiders]\n    B --&gt; COMP[Project comptroller]\n    B --&gt; M[Moderators]\n    M --&gt; I[Inviteds]\n    I --&gt; GM[Game moderators]\n    M --&gt; RM[Repository maintainers]</code></pre>"},{"location":"rules/project-governance/#the-role-of-the-project-leader","title":"The Role of the Project Leader","text":"<p>The project leader holds ultimate responsibility for all significant decisions in the project. This includes long-term strategic direction, core feature sets, and conflict resolution. While community input and contributions are encouraged, the project leader has the final say.</p>"},{"location":"rules/project-governance/#project-administrators","title":"Project Administrators","text":"<p>Project administrators ensure smooth communication and operation within the project\u2019s community, moderating discussions, and managing community-related resources such as forums or user groups. While they do not have the final say in technical decisions, they play a vital role in maintaining a healthy, supportive environment for contributors and users alike.</p>"},{"location":"rules/project-governance/#core-maintainers","title":"Core Maintainers","text":"<p>Core maintainers, also known as developers, are integral to the success of the project, acting as the custodians of its codebase and ensuring the quality and integrity of contributions. They review and merge pull requests, enforce coding standards, and provide guidance to contributors, fostering a collaborative and innovative atmosphere. Core maintainers also work closely with the project leader to align on strategic goals and technical direction, serving as liaisons between the community and the leadership. Their expertise and commitment help drive the project forward while upholding its values and vision.</p>"},{"location":"rules/project-governance/#insiders-program","title":"Insiders Program","text":"<p>Insiders, also known as testers, play a crucial role in ensuring the quality and reliability of the project before public releases. By rigorously testing new features, identifying bugs, and providing detailed feedback, they help to uncover potential issues early in the development process. Their efforts contribute to the stability of the project and ensure that updates meet the highest standards of performance and usability. Insiders' valuable input allows core maintainers to address issues swiftly and refine the user experience, making them essential contributors to the project\u2019s ongoing success. Anyone can be an Insider for the project.</p>"},{"location":"rules/project-governance/#project-comptroller","title":"Project Comptroller","text":"<p>The project comptroller is responsible for overseeing the financial aspects of the project, ensuring that resources are allocated efficiently and transparently. They manage budgets, track expenditures, and report on financial performance to the project leadership and community. By maintaining financial accountability, the comptroller helps to ensure that the project operates sustainably and can continue to grow and innovate. They also play a key role in securing funding, whether through grants, sponsorships, or community contributions, thereby enabling the project to achieve its long-term goals while fostering trust and confidence among stakeholders.<sup>1</sup></p>"},{"location":"rules/project-governance/#project-moderators","title":"Project Moderators","text":"<p>Moderators and game moderators are essential to maintaining a positive and respectful community within the project. They monitor discussions, enforce community guidelines, and facilitate healthy interactions among members, ensuring that all voices are heard and valued. Game moderators, in particular, focus on overseeing gameplay experiences, addressing player concerns, and resolving conflicts to ensure fair play. By actively engaging with the community and providing support, both moderators and game moderators help create an inclusive environment that encourages participation, collaboration, and enjoyment for all users.</p>"},{"location":"rules/project-governance/#repository-maintainers","title":"Repository Maintainers","text":"<p>Repository maintainers play a crucial role in upholding the quality and integrity of user-generated content. They are responsible for reviewing submissions, ensuring they meet established guidelines and standards before being integrated into the repository. By providing constructive feedback and support to mod creators, repository maintainers foster a collaborative environment that encourages creativity and innovation.</p>"},{"location":"rules/project-governance/#inviteds","title":"Inviteds","text":"<p>A unique role for exceptional community members who possess moderator powers aimed at addressing user needs more efficiently.</p> <ol> <li> <p>This role is unfilled for the foreseeable future. Until then, we are not accepting any form of donations for the project.\u00a0\u21a9</p> </li> </ol>"},{"location":"rules/repository-submission-guidelines/","title":"Repository Submission Guidelines","text":"<p>To ensure consistency and quality, please follow these guidelines when creating and submitting to the repository.</p>"},{"location":"rules/repository-submission-guidelines/#general-requirements","title":"General Requirements","text":"<ol> <li>Any content you submit must be your own creation, or you must have permission from the original creator(s) to share or modify their work.</li> <li>You must ensure that the content you submit is compatible with the latest stable version of Rigs of Rods. Please test your mod to ensure it works correctly before submission.</li> <li>Ensure filenames and asset names are descriptive and unique to avoid conflicts with other mods.</li> <li>Any content you submit must not exceed 4GB in size. This limit is imposed to prevent abuse and helps us to save on valuable bandwidth.</li> <li>Content submitted to the Rigs of Rods repository must be available free of charge to the community. Selling mods or offering paid versions within the official repository is strictly prohibited. While mods must be free, you can accept donations to support your work. Feel free to include a link to your donation page (e.g., PayPal, Patreon, Ko-fi) in your mod\u2019s README or repository description.</li> </ol>"},{"location":"rules/repository-submission-guidelines/#licensing","title":"Licensing","text":"<p>When submitting, you must clearly specify the license under which your work is being distributed. This ensures transparency regarding how others can use, modify, and redistribute your work. You are not required to do this, as your work is protected regardless.<sup>1</sup></p> <p>We recommend using a well-known open-source license to make your intentions clear:</p> <ul> <li>GNU General Public License (GPL): Requires derivatives of your work to be distributed under the same license.<sup>2</sup></li> <li>MIT License: Allows users to do almost anything with your work, including commercial use, as long as they include your original copyright notice.<sup>3</sup></li> <li>Creative Commons License (CC): A flexible licensing option, which allows you to control commercial use, derivatives, and attribution requirements.</li> </ul> <p>If you choose to license your work, include a <code>LICENSE</code> file in the root of your mod folder. If you're using assets from other creators, be sure to comply with their license terms and credit them appropriately.</p>"},{"location":"rules/repository-submission-guidelines/#approval-flow","title":"Approval Flow","text":"<p>Expect a delay in the approval process</p> <p>The approval process is managed by repository maintainers, who are volunteers and can only dedicate so much of their time to testing and approving repository submissions. You can expect to wait a couple days to a couple of weeks depending who is available and how thorough the maintainer is.</p> <p>A repository maintainer may reach out to you directly if they detect an issue with your submission. The quicker you reply, the quicker your submission is approved.</p> <ul> <li>Once you've completed your submission, it will remain visible only to you and the staff. This means that between the time of submission and until a maintainer reviews it, you can still make changes, such as modifying the description or swapping out files.</li> <li>When a maintainer tests your submission, several factors are considered, including functionality and performance, compatibility, potential bugs and issues, and adherence to the General Requirements.</li> <li>If feedback is needed, the maintainer will reach out to you directly so you can address it.</li> <li>The decision to grant final approval is at the discretion of the maintainer. This can not be disputed.</li> </ul> <ol> <li> <p>While we highly encourage modders to include a license for clarity, it is not strictly required. However, mods without a license may cause ambiguity regarding usage rights, modifications, and redistribution by others.\u00a0\u21a9</p> </li> <li> <p>GNU General Public License (GPL) is a license written by Richard M. Stallman and published by the Free Software Foundation.\u00a0\u21a9</p> </li> <li> <p>MIT License is a permissive license originating from the Massachusetts Institute of Technology (MIT).\u00a0\u21a9</p> </li> </ol>"},{"location":"rules/terms-of-service/","title":"Terms of Service","text":"<p>rigsofrods.org (\"we\", \"us\", \"our\") of the service provided by this web site (\"Service\") are not responsible for any user-generated content and accounts. Content submitted express the views of their author only.</p>"},{"location":"rules/terms-of-service/#compliance-with-childrens-online-privacy-protection-rule-coppa","title":"Compliance With Children's Online Privacy Protection Rule (\"COPPA\")","text":"<p>This Service is only available to users who are at least 13 years old. If you are younger than this, please do not register for this Service. </p> <p>If you register for this Service and we have reasonable suspicion to suspect you are under 13 years old, then we reserve the right to demand proof of identity through a valid form of government issued I.D. such as a drivers license or passport. </p>"},{"location":"rules/terms-of-service/#content-review-and-privacy","title":"Content Review and Privacy","text":"<p>All content you submit, upload, or otherwise make available to the Service (\"Content\") may be reviewed by staff members. All Content you submit or upload may also be sent to third-party verification services (including, but not limited to, spam prevention services). Do not submit any Content that you consider private or confidential.</p>"},{"location":"rules/terms-of-service/#prohibited-use-of-the-service","title":"Prohibited Use of the Service","text":"<p>You agree not to use the Service to submit or link to any Content that is defamatory, abusive, hateful, threatening, spam or spam-like, offensive, contains adult or objectionable content, personal information of others, risks copyright infringement, encourages unlawful activity, or otherwise violates any laws. You are entirely responsible for the content of, and any harm resulting from, that Content or your conduct.</p>"},{"location":"rules/terms-of-service/#content-modification-and-termination-of-access","title":"Content Modification and Termination of Access","text":"<p>We may remove or modify any Content submitted at any time, with or without cause, with or without notice. Requests for Content to be removed or modified will be undertaken only at our discretion. We may terminate your access to all or any part of the Service at any time, with or without cause, with or without notice.</p>"},{"location":"rules/terms-of-service/#automated-access-restrictions","title":"Automated Access Restrictions","text":"<p>You may not access the Service through automated or programmatic means (such as through a content scraper) without prior permission from us.</p>"},{"location":"rules/terms-of-service/#license-to-use-content","title":"License to Use Content","text":"<p>By submitting Content, you are granting us a non-exclusive, permanent, irrevocable, unlimited license to use, publish, or re-publish your Content in connection with the Service. However, you retain copyright over the Content.</p>"},{"location":"rules/terms-of-service/#changes","title":"Changes","text":"<p>These terms may be changed at any time without notice.</p>"},{"location":"terrain-creation/building-rail-tracks/","title":"Building rail tracks","text":""},{"location":"terrain-creation/building-rail-tracks/#basic-principle","title":"Basic Principle","text":"<p>The tracks are simple meshes that are placed on the map.  They have a collision mesh on which all rail vehicles drive.  The track gauge is approximately 1435mm, which is the most common in the world.  In reality train wheels have flanges. In RoR wheels can\u0092t have such a geometry, so we use nodes with low friction  to keep everything on the rail (we call them guidance nodes).  Propulsed rail vehicles use standard wheels spanning the two rails.  The result is a quite long wheel what may be odd on the first sight,  but if you think about it real train wheels are basically the same.  This also helps to keep the nodecount down. </p> <p></p> <p>The wagons use low friction nodes instead of wheels.  Main reason is the nodecount, e.g. on a 4 axle wagon we can save approx.  120 nodes by doing this, what will give you a much better framerate. </p> <p></p>"},{"location":"terrain-creation/building-rail-tracks/#basic-node-and-beam-principles","title":"Basic node and beam principles","text":"<p>To make your rail vehicle working well, you need to obtain certain principles. </p> <ul> <li>First of all your bogie geometry needs to be exactly as shown in the picture       If you make a wagon without wheels, the low friction nodes running on the rail    need to be exactly where the wheel in the picture would touch the rail.</li> <li>Your guidance nodes (those running on the inner side of the rail) need to be contacters.    Give them a mass of 50 kilos. Give them low friction using <code>set_node_defaults</code>.    If you don't use a wheel, the nodes sliding on top of the rail also need low friction.</li> <li>Node 0 needs to be exactly in the middle of your vehicle and 0.5 meters below the rail.    Otherwise it won't spawn correctly in the train spawner.   Don't forget to flag it with \"c\": don't detect ground contact.</li> <li>Make your wheels very hard using the spring and damping options.</li> <li>Make the bogie node and beam very stiff using <code>set_beam_defaults</code>.</li> </ul>"},{"location":"terrain-creation/building-rail-tracks/#building-a-railway-line","title":"Building a railway line","text":"<p>When you want to create your track layout in a 3d modeling program (Blender, 3ds Max),  you need to make sure the coordinates in the 3d modeling program are the same as in RoR.  Open the terrain *.zip and search for a *.cfg file.  Read out the size of the terrain, switch to your 3d modeling program  and create a plane with the same size in the correct position: </p> <p>This will be our placement help.</p> <p>TODO: Fix link [http://www.rigsofrods.com/attachment.php?attachmentid=306258&amp;d=1333744539 Now load the tracks from the blender file]  and start assembling them to a nice railway track.  When finished, you need to attach all track pieces together, but DO NOT ATTACH THE SWITCHES!  We only placed them to read out the coordinates and we will place them on the map using the terrn file.  For that purpose, open the terrn file, click each switch in blender/3ds and copy the coordinates  (including rotational values) over to the terrn file. Then do   to place the node and beam. Annoying, I know ;-)  When done, it's time to export the track layout. It should look like   with gaps for the switches. Move the pivot point of the track to (0, 0, 0) and export the mesh. Now you just need to place it on (0, 0, 0) in the terrn file and probably get the angles right. Everything should be ingame then.</p>"},{"location":"terrain-creation/building-rail-tracks/#making-track-by-extracting-spline-from-heightmap","title":"Making track by extracting spline from heightmap","text":"<p>If you choose to place your track using a 3d modeling program, you can also  generate track from a spline</p>"},{"location":"terrain-creation/building-rail-tracks/#introduction","title":"Introduction","text":"<p>This tutorial is made in 3ds Max, but should also be valid for Blender.  It will show you how to extract a Spline from a heightmap and use it for placing roads or railway lines.</p>"},{"location":"terrain-creation/building-rail-tracks/#step-1","title":"Step 1","text":"<p>Convert heightmap raw to bmp with ImageMagick</p>"},{"location":"terrain-creation/building-rail-tracks/#step-2","title":"Step 2","text":"<p>Create a plane in 3ds Max, apply a 3d displacement modifier, load your converted heightmap  and assign the height found in the maps *.cfg there.  Subdivide your plane to the accuracy you want </p>"},{"location":"terrain-creation/building-rail-tracks/#step-3","title":"Step 3","text":"<p>Create a spine representing the longitudinal track layout </p>"},{"location":"terrain-creation/building-rail-tracks/#step-4","title":"Step 4","text":"<p>Convert the heightmap to a poly object</p>"},{"location":"terrain-creation/building-rail-tracks/#step-5","title":"Step 5","text":"<p>Extrude the spline to make it solid</p> <p></p>"},{"location":"terrain-creation/building-rail-tracks/#step-6","title":"Step 6","text":"<p>Choose the spline solid, add a ProBoolean modifier, check substract, choose the heightmap solid</p>"},{"location":"terrain-creation/building-rail-tracks/#step-7","title":"Step 7","text":"<p>Choose the outermost edge of the resulting body, right click, choose create contour -&gt;now you have your spline following the heightmap</p> <p> </p>"},{"location":"terrain-creation/building-rail-tracks/#step-8","title":"Step 8","text":"<p>Use the Lofting tool to create a road or train track. Correct your spline, twist the loft for banked curves, texture etc. You can also use the normalize spline modifier for better accuracy or smoothness.</p>"},{"location":"terrain-creation/building-rail-tracks/#see-also","title":"See also","text":"<p>If you have a question on the system, please post to  TODO: fix old forum link [http://www.rigsofrods.com/threads/88801-The-railroad-system-technical-discussion-and-mapbuilders-guideline]</p>"},{"location":"terrain-creation/collision-meshes/","title":"Collision meshes","text":"<p>A collision mesh is a \"substitute\" or \"replacement\" mesh for a given model. Except, this mesh does not replace the original model, it is transparent and simplifies your model. It does not simplify how it looks, but how it behaves as an object in Rigs of Rods. For example, if you want to model a log cabin with a detailed roof, drainpipes, and window frames, then the framerate/physic lag in Rigs of Rods would be a single digit. However, a collision mesh will make it behave like it is the most simple model out there. Now that you (hopefully) comprehend this concept, let's begin the tutorial.</p>"},{"location":"terrain-creation/collision-meshes/#how-to-make-a-collision-mesh","title":"How to make a collision mesh","text":""},{"location":"terrain-creation/collision-meshes/#getting-the-resources","title":"Getting the Resources","text":"<p>In order to success in this tutorial/guide, you must have a modeling program with an OGRE exporter. SketchUp will be used as an example.</p>"},{"location":"terrain-creation/collision-meshes/#modeling-the-complex-object","title":"Modeling the complex object","text":"<p>If you have a profession in SketchUp, you may know how to make some pretty nice stuff. For example, here is a complex house I made.</p> <p></p> <p>... and here it is in-game</p> <p></p> <p>As you may see, I get ~25 frames-per-second, while I normally get ~100 around a simpler object. A collision mesh will polish up the framerate and physic lag.</p>"},{"location":"terrain-creation/collision-meshes/#modeling-the-collision-mesh","title":"Modeling the collision mesh","text":"<p>You want to make the collision mesh be exactly around the model, or else it will be out of place. My best suggestion is to model over it, but snapping your model to the original model. So, here is my model:</p> <p></p> <p>... and here is the collision mesh I modeled.</p> <p></p> <p>As you may see, I left out the window detail, door detail, roof detail, the stairs, the fence, and the chimney. I did this because the car won't be interacting much with those aspects of the house in the first place, so why waste the framerate on them?</p> <p>Once you are done modeling it, make sure it is right around your model.</p>"},{"location":"terrain-creation/collision-meshes/#the-exporting-process","title":"The exporting process","text":"<p>Once it is put next to the model (make sure they are separate groups), select only ONE of them, and click the following...</p> <p></p> <p>Then name your object however you like. I will name it \"House\".</p> <p></p> <p>The reason why you want it separate is because one will be the house [appearance] and one will be the collision mesh [physical structure]. Then click \"OK\" and a series of windows come up.</p> <p></p> <p></p> <p></p> <p>Then, separately select the collision mesh, and repeat the process. For the name, add \"Collision\" or \"-Collision\" at the end so it is easier to identify. It can even be as simple as as adding a \"1\" or \"C\" to the end. I will use the \"-Collision\" extension for the example. </p> <p>Then the series of windows pop up.</p> <p></p> <p></p> <p></p> <p>You are done exporting!</p>"},{"location":"terrain-creation/collision-meshes/#editing-in-notepad","title":"Editing in notepad","text":"<p>As a standard procedure for SketchUp, go to the following directory:</p> <p></p> <p>Then, go to the .MATERIAL file.</p> <p></p> <p>Open it, and remove the section \"Material SketchUp Default\" or something along those lines.</p> <p></p> <p>Then, go to the .ODEF file.</p> <p></p> <p>Then, target the mesh line.</p> <p></p> <p>Then, replace it with the collision name of your mesh.</p> <p></p>"},{"location":"terrain-creation/collision-meshes/#using-the-files","title":"Using the files","text":"<p>For objects, the necessary files are the .ODEF, the .MESH, the .MATERIAL, and any textures left behind.</p> <p></p> <p>For the collision mesh, all you need is the .MESH of the collision mesh. Because it does not need a .MATERIAL file because it's invisible, and it does not need an .ODEF because it uses the .ODEF of the original house.</p> <p></p> <p>Then, add those to the index of the .ZIP of the terrain you will be adding the object to.</p> <p></p> <p>Once I placed the object, look how much better my framerate is compared to the one in Step II.</p> <p></p>"},{"location":"terrain-creation/collision-meshes/#collision-mesh-troubleshooting","title":"Collision Mesh Troubleshooting","text":"<p>So you just made an absolutely amazing [insert amazing, knock-your-socks-off object for RoR here] If you're like me, the reason you've been procrastinating so much on exporting is because you don't want to deal with the complicated and irritating task of getting collision meshes to work. They never seem to work the first time, and you can't identify the problem, resulting in gray hairs, chronic anxiety, and eventual cardiac failure if the problem persists. This guide will give you some helpful hints as to fixing the problems. Please note: By \"failures\" I mean the truck falls through the mesh and gets stuck.</p>"},{"location":"terrain-creation/collision-meshes/#fps-drop","title":"FPS drop","text":"<p>PROBLEM: Bounding box causes huge fps drop.</p> <p>SOLUTION: Make a simpler collision mesh.</p>"},{"location":"terrain-creation/collision-meshes/#random-collisions","title":"Random Collisions","text":"<p>PROBLEM: Seemingly random collisions into random invisible objects around the object in question/no collision with object or collision several meters below surface of object.</p> <p>SOLUTION: Your collision mesh is either centred wrong or badly scaled. Or both. If you're modelling in Blender, hit CTRL+A in object mode to apply scale and rotation to your object before exporting so that it exports at the size that you actually see. Try to get the centres of your collision mesh and object as close together as possible. If you're using SketchUp...then figure it out yourself; I can't help you. Get a real 3D modelling program. Or add helpful info here, remember that this is a Wiki.</p>"},{"location":"terrain-creation/collision-meshes/#location-based-collision-failures","title":"Location-based collision failures","text":"<p>PROBLEM: Failures of collision mesh based on location of object.</p> <p>SOLUTION: The collision mesh of the object is intersecting with that of another. Move the object. You could also fix the collision mesh so that it doesn't intersect.</p>"},{"location":"terrain-creation/collision-meshes/#general-collision-failures","title":"General collision failures","text":"<p>PROBLEM: Failures of collision mesh in general</p> <p>SOLUTION: There are one or more faces intersecting in your mesh. Rigs of Rods doesn't like bounding faces intersecting with each other. Make it one continuous surface rather than a collection of boxes. Or, at least, make the collision mesh like this.</p>"},{"location":"terrain-creation/collision-meshes/#vehicles-getting-sucked-in-to-a-collision-mesh","title":"Vehicles getting \"sucked in\" to a collision mesh","text":"<p>PROBLEM:\u00a0You're driving along, testing your new mesh... then instead of crashing into it, you get sucked in. And now you can't get out.</p> <p>SOLUTION: Your collision mesh's normals are flipped the wrong way. Flip them the right way out and you ought to be fine.</p>"},{"location":"terrain-creation/custom-texture-splatting/","title":"Custom texture splatting","text":""},{"location":"terrain-creation/custom-texture-splatting/#introduction","title":"Introduction","text":"<p>So, you want to make nice looking map with detailed textures? Here is the place\u00a0;-)</p> <p>Alpha-splatting is a technique that allows you to place detailed tiled textures on your terrain. Their implementation follows RGBA (Red-Green-Blue-Alpha) images. With the files that are suggested here you can also apply an overlay map which means that you can vary the color of each of your detailed textures by blending a big image over them (the textured you used before alpha-splatting for example).</p> <p>Note: this article doesn't refer to our terrain system. </p> <p>Techniques here are relevant for old Terrn subsystem or advanced users who want to create meshed terrains.</p> <p>Our terrain system currently doesn't allow making your own shaders, you need to use it's builtins.</p> <p>2 shaders are discussed here. Choose one of them:</p>"},{"location":"terrain-creation/custom-texture-splatting/#shader-1","title":"Shader 1","text":"<p>PROS</p> <ul> <li>Have an overlay texture</li> <li>Blend the textures nicely over each other</li> </ul> <p>CONS</p> <ul> <li>Need for a shader file (*.cg) and a program file (*.program)</li> <li>Limited to 8 textures</li> <li>Sizes of the tiles are all the same</li> <li>The overlay texture always darken the terrain and lowers the contrast of the detailed textures</li> </ul>"},{"location":"terrain-creation/custom-texture-splatting/#shader-2","title":"Shader 2","text":"<p>PROS</p> <ul> <li>Only consists of a material file (simpler)</li> <li>Unlimited (or supposed so) number of detailed textures</li> <li>Tile size can be set for each texture individually</li> <li>The contrast and luminosity of your textures remain unaltered</li> </ul> <p>CONS</p> <ul> <li>No overlay texture (if you want one)</li> <li>Slightly harsher transition between textures</li> </ul>"},{"location":"terrain-creation/custom-texture-splatting/#shader-1_1","title":"Shader 1","text":"<p>Before starting make sure you have the shader, program and material file from the following link: http://www.ogre3d.org/tikiwiki/Terrain+Alpha+Splatting.</p> <p>Let's keep the things simple. We'll begin with only 3 detailed textures.</p> <p>1.\u00a0\u00a0 Make a RGB image defining your zones (eg: red for grass, green for sand, blue for rocks). Do it just as you did for the groundmodel. If you used RGB colors for your ground-model you can re-use this file.</p> <p>!! DO NOT USE DDS TEXTURES FOR THOSE RGBA IMAGES\u00a0!! They compress the image and give some pixels the average colors of their neighbors. Then those pixels that are not exactly red, green or blue will look black on your terrain in RoR, ruining your work...  \u00a0\u00a0 2.\u00a0\u00a0 Prepare your detailed textures and save them as dds - Paint.net is free and embeds the DDS exporter. Keep the resolution not too high (512*512 is a good compromise today in 2010) otherwise your map will lag a lot.  \u00a0\u00a0 3.\u00a0\u00a0 Locate this line in the material file:</p> <pre><code>param_named pageSize float 1024\n</code></pre> <p>This parameter (1024) should correspond to your heightmap (the *raw) size - 1 (i.e. your heightmap is 513*513 then this parameter should be 512*512).</p> <p>4.\u00a0\u00a0 Locate this code in the material file:</p> <pre><code>fragment_program_ref AlphaSplatTerrain/FP \n                                     { \n                                              param_named alpha0Mask float4 1 1 1 0 \n                                              param_named alpha1Mask float4 0 0 0 0 \n                                      }\n</code></pre> <p>These settings are OK for our use but it is useful to understand their meaning: each 1 activates an alpha-splatting channel. In this example we will only use the three first channels of our first RGBA image (so we'll use Red, Green and Blue channel. Not alpha because the fourth parameter is set to 0). If you want to use more channels then you have to activate them here.</p> <p>5.\u00a0\u00a0\u00a0Go to the end of file and locate the following code:</p> <pre><code>material DemoSplatTerrainShader&amp;nbsp;: AlphaSplatTerrain\n    { \n        set_texture_alias AlphaMap1 alphamap1.png \n        set_texture_alias AlphaMap2 black.png \n        set_texture_alias Splat1 gras.jpg \n        set_texture_alias Splat2 moos2.jpg \n        set_texture_alias Splat3 schlamm_getrocknet1.jpg \n        set_texture_alias Splat4 gras.jpg \n        set_texture_alias Splat5 gras.jpg \n        set_texture_alias Splat6 moos2.jpg \n        set_texture_alias Splat7 schlamm_getrocknet1.jpg \n        set_texture_alias Splat8 gras.jpg \n        set_texture_alias Detail Detail3.jpg \n        set_texture_alias Fallback cooltex.jpg\n      }\n</code></pre> <p>Here you have to reference the images you prepared before. AlphaMap1 is your RGB image. AlphaMap2 isn't used as you didn't activate the corresponding channels. Fill Splat 1,2,3 with the name of your detailed textures.</p> <p>6.\u00a0\u00a0 You just have to tune the terrain CFG file by enabling the vertexnormals (that will automatically shade your map) and adding the name of the material to use for alpha-splatting (so replace \"DemoSplatTerrainShader\" by your material name):</p> <pre><code>## The name of the material you will define to shade the terrain \nCustomMaterialName=DemoSplatTerrainShader\n</code></pre> <p>Actually you just have to copy the one of the ogre example. The material name is defined just before referencing the images in the code (see the code above) and that's it!</p> <p>If you don't rename anything then you don't have to alter program and shader (*.cg) files at all.</p>"},{"location":"terrain-creation/custom-texture-splatting/#shader-2_1","title":"Shader 2","text":"<p>This shader was introduced in RoR first by Fat-Alfie. He kindly sent it to me as I needed an alpha-splat shader without the overlay texture.</p>"},{"location":"terrain-creation/custom-texture-splatting/#pre-requisites","title":"Pre-requisites","text":"<p>Take the code below and make a file containing it named\u00a0: yourmapname-alphasplat.material (of course replace yourmapname with what you want). Place this file into your map folder.</p> <p>The extension \"-alphasplat\" is not mandatory but why not setting a guideline here? That will make our RoR-life easier.</p> <pre><code>material RoRwiki-alpha\n{\n    receive_shadows on\n    technique\n    {\n        // base pass\n        pass\n        {\n            lighting off\n            texture_unit\n            {\n                // we use the gravel texture as the base, other textures are blended over it\n                texture gravel.dds\n                scale 0.007 0.007\n            }\n        }\n        // detail texture 1 pass\n        pass\n        {\n            lighting off\n            // blend with former pass\n            scene_blend alpha_blend\n            // only overwrite fragments with the same depth\n            depth_func equal\n            // alpha map for the grass\n            texture_unit\n            {\n                texture mapname_alpha_1.png\n                // use alpha from this texture\n                alpha_op_ex source1 src_texture src_texture\n                // and colour from last pass\n                colour_op_ex source2 src_texture src_texture\n            }\n            // detail texture\n            texture_unit\n            {\n                texture grass.dds\n                scale 0.007 0.007\n                // alpha blend colour with colour from last pass\n                colour_op_ex blend_diffuse_alpha src_texture src_current\n            }\n        }\n        // lighting pass\n        pass\n        {\n            ambient 1 1 1\n            diffuse 1 1 1 \n            depth_func equal\n            scene_blend zero src_colour\n        }\n    }\n}\n</code></pre>"},{"location":"terrain-creation/custom-texture-splatting/#lets-go","title":"Let's go","text":"<p>You can see in the shader that there 3 passes (base pass, detail texture 1 pass and lightning pass). Each pass correspond to a \"layer\" that Ogre (graphical engine) will add to your terrain. Each one is blended over the previous ones.</p>"},{"location":"terrain-creation/custom-texture-splatting/#giving-your-material-a-name","title":"Giving your material a name","text":"<p>First replace \"RoRwiki-alpha\" with your material name (choose one, containing no spaces)</p>"},{"location":"terrain-creation/custom-texture-splatting/#base-pass","title":"Base pass","text":"<p>This pass will tile a texture all over the map. All the other textures will be blended over it.</p> <ul> <li>You will need a detailed texture</li> <li>Reference your detailed texture (replace \"gravel.dds\" with the name of your detailed texture)</li> <li>Set its scale. Leave it as it is (0.007 0.007), you will judge if that's looks OK once you have this material in-game.</li> </ul>"},{"location":"terrain-creation/custom-texture-splatting/#detail-texture-1-pass","title":"Detail texture 1 pass","text":"<p>In this pass you will apply your first texture except the base one. You need to provide an \"alpha-map\" to indicate where the texture should show on your terrain (white parts)\u00a0and where it shouldn't (transparent parts). It is an image that should have the same size as your heightmap - 1 (e.g. heightmap is 513*513, alpha map should be 512*512). The most common format is PNG.</p> <p>Tip: you can derive those maps from your ground models</p> <p>!! DO NOT USE DDS TEXTURES FOR THOSE RGBA IMAGES\u00a0!! They compress the image and give some pixels the average colors of their neighbors. Then those pixels that are not exactly red, green or blue will look black on your terrain in RoR, ruining your work...</p> <ul> <li>You will need an alpha-map</li> <li>You will need a detailed texture</li> <li>Reference your alpha-map (replace \"mapname_alpha_1.png\" with your alpha-map name</li> <li>Reference your detailed texture (replace \"grass.dds\" with your detailed texture name)</li> <li>Set the scale (leave it as it is now, 0.007 0.007)</li> </ul>"},{"location":"terrain-creation/custom-texture-splatting/#adding-more-textures","title":"Adding more textures","text":"<p>For adding a new texture with its alpha map, simply copy the detail texture 1 pass and paste it before the lightning pass. Repeat the steps described before and add as many as you want!</p>"},{"location":"terrain-creation/custom-texture-splatting/#lightning-pass","title":"Lightning Pass","text":"<p>This defines how your terrain should be shaded. Leave this pass as it is for now.</p>"},{"location":"terrain-creation/custom-texture-splatting/#referencing-your-material-in-the-terrain-cfg-file","title":"Referencing your material in the terrain CFG file","text":"<p>You just have to tune the terrain CFG file by enabling the vertexnormals (that will automatically shade your map) and adding the name of the material to use for alpha-splatting (so replace \"DemoSplatTerrainShader\" by your material name):</p> <pre><code>## The name of the material you will define to shade the terrain\nCustomMaterialName=RoRwiki-alpha\n</code></pre>"},{"location":"terrain-creation/custom-texture-splatting/#done","title":"Done","text":"<p>Now include everything in your terrain ZIP file (alpha maps, detailed textures, material file, CFG), fire\u00a0up RoR\u00a0and cross your fingers!</p>"},{"location":"terrain-creation/custom-texture-splatting/#last-advice","title":"Last advice","text":"<p>And now it only begins!</p> <p>To have a nice looking and very personal ground, spend time making your different textures fit together. Try to split some of the layers too (i.e. generate 2-3 kind of rocks, 2-3 kind of grasses). Use L3DT ( http://www.bundysoft.com/L3DT/ )\u00a0to generate those images for you based on the curves and slopes of your terrain and make custom climates for controlling that all.</p> <p>And the most important: look at the real world\u00a0;-)</p> <p>-- DeGa (2010)</p>"},{"location":"terrain-creation/editing-terrain-objects/","title":"Adding/moving terrain objects","text":""},{"location":"terrain-creation/editing-terrain-objects/#introduction","title":"Introduction","text":"<p>As of Rigs of Rods 0.4.x, terrain objects are stored in <code>.tobj</code> files, they contain placements for all objects/trees/grass/etc on a terrain. This page will show you how to add/move terrain objects. There are multiple ways to do this, however this page will only explain the two easiest methods.</p>"},{"location":"terrain-creation/editing-terrain-objects/#adding-a-new-object","title":"Adding a new object","text":"<p>For this tutorial, I will be placing a Rig-A-Deal (truckshop) on Baja Track using Rigs of Rods version 0.4.7.0+. </p> <p>Open Rigs of Rods and select the map you want to add an object to. </p> <p>Go to where you want the object to be without being in a vehicle, for example here:  Now press the <code>h</code> key. The current position coordinates will be written to the <code>RoR.log</code> (Located in <code>Documents\\My Games\\Rigs of Rods\\logs</code> on Windows or <code>~/.rigsofrods/logs</code> on Linux. Open the <code>RoR.log</code> file in any text editor and scroll down to the end of the file. You should see a line similar to this:</p> <p><code>Position: 875.549, 67.6607, 1155.26, 0, 366.073, 0</code></p> <p>This is the coordinates for your new object. Now find and open the terrain zip (Example: <code>Bajatrack.zip</code>) and open the correct <code>.tobj</code> file (Example: <code>Bajatrack.tobj</code>) It should look similar to this:</p> <p></p> <p>Now take the numbers from the <code>RoR.log</code> line and add them to the end of the file, like so:</p> <p><pre><code>//Jump\n831.099426, 68.162605, 1071.317383, 0.000000, 97.500000, 3.500000, road\n829.796570, 68.773094, 1061.421387, 0.000000, 97.500000, 10.000000, road\n828.511108, 70.509575, 1051.657593, 0.000000, 97.500000, 21.500000, road\n827.296692, 74.174591, 1042.432983, 0.000000, 97.500000, 42.000000, road\n826.326721, 80.865898, 1035.065063, 0.000000, 97.500000, 60.500000, road\n825.683960, 89.569458, 1030.182983, 0.000000, 97.500000, 64.500000, road\n825.122009, 98.595306, 1025.914673, 0.000000, 97.500000, 0.000000, road\n823.816772, 98.595306, 1016.000244, 0.000000, 97.500000, 0.000000, road\n822.511536, 98.595306, 1006.085815, 0.000000, 97.500000, 0.000000, road\n821.206299, 98.595306, 996.171387, 0.000000, 97.500000, -20.000000, road\n819.979736, 95.175102, 986.854858, 0.000000, 97.500000, -20.000000, road\n818.753174, 91.754898, 977.538330, 0.000000, 97.500000, -20.000000, road\n817.526611, 88.334694, 968.221802, 0.000000, 97.500000, -10.000000, road\n816.241150, 86.598213, 958.457947, 0.000000, 97.500000, -2.000000, road\n814.936707, 86.249222, 948.549561, 0.000000, 97.500000, -2.000000, road\n813.632263, 85.900230, 938.641174, 0.000000, 97.500000, -2.000000, road\n//new object\n// x        y        z    rx  ry rz odefname (without .odef file extension)\n875.549, 67.6607, 1155.26, 0, 0, 0, truckshop\n</code></pre> I recommend leaving the rotation (last 3) values to 0 for now.</p> <p>Save the file and reopen Rigs of Rods. Your new object should appear roughly where you want it:</p> <p></p> <p>To precisely place your object, you can use the built-in \"terrain/object editor\" that is included with 0.4.7.0+. I'll explain how to use it below.</p>"},{"location":"terrain-creation/editing-terrain-objects/#moving-objects","title":"Moving objects","text":"<p>Note: The editor cannot move roads/Paged Geometry trees/grass.</p> <p>First, make sure you're running RoR version 0.4.7.0 or newer.</p> <p>Next, load the terrain you want to edit. While not in a vehicle, press <code>CTRL+Y</code>. A notification box should appear in the top right:</p> <p></p> <p>You should now be in \"terrain editing mode\". </p> <p>These are the controls for the editor: <pre><code>CTRL+Y - Activates the editor\nEnter - Selects nearest object based on free camera or RoRBot's position\nMiddle mouse click - Select object \nCTRL+[ and CTRL+] - Cycles through objects as listed in the `.tobj` file. If the terrain features a race, race checkpoints will appear first.\nWASD - Movement\nArrow keys - Rotation\nR - Change rotation axis\nI - Reset object rotation\nCTRL+Y - Exit editor and save changes \n</code></pre></p> <p>In this example I will rotate the truckshop. Move RoRBot near the object and press <code>Enter</code>. The object should now be selected:</p> <p></p> <p>Use the keys listed above to move/rotate. You may have to switch the rotation axis using the <code>R</code> key to correctly rotate the object.</p> <p>Once you have your object(s) placed where you want it press <code>CTRL+Y</code> again to exit the editor:</p> <p></p> <p></p> <p>The changes have been saved to the <code>editor_out.cfg</code> file in the <code>/config</code> folder. Open that file in a text editor. It should look similar to this:</p> <p></p> <p>And finally, copy the correct placement line to your map's <code>.tobj</code> file. Example:</p> <pre><code>//Jump\n831.099426, 68.162605, 1071.317383, 0.000000, 97.500000, 3.500000, road\n829.796570, 68.773094, 1061.421387, 0.000000, 97.500000, 10.000000, road\n828.511108, 70.509575, 1051.657593, 0.000000, 97.500000, 21.500000, road\n827.296692, 74.174591, 1042.432983, 0.000000, 97.500000, 42.000000, road\n826.326721, 80.865898, 1035.065063, 0.000000, 97.500000, 60.500000, road\n825.683960, 89.569458, 1030.182983, 0.000000, 97.500000, 64.500000, road\n825.122009, 98.595306, 1025.914673, 0.000000, 97.500000, 0.000000, road\n823.816772, 98.595306, 1016.000244, 0.000000, 97.500000, 0.000000, road\n822.511536, 98.595306, 1006.085815, 0.000000, 97.500000, 0.000000, road\n821.206299, 98.595306, 996.171387, 0.000000, 97.500000, -20.000000, road\n819.979736, 95.175102, 986.854858, 0.000000, 97.500000, -20.000000, road\n818.753174, 91.754898, 977.538330, 0.000000, 97.500000, -20.000000, road\n817.526611, 88.334694, 968.221802, 0.000000, 97.500000, -10.000000, road\n816.241150, 86.598213, 958.457947, 0.000000, 97.500000, -2.000000, road\n814.936707, 86.249222, 948.549561, 0.000000, 97.500000, -2.000000, road\n813.632263, 85.900230, 938.641174, 0.000000, 97.500000, -2.000000, road\n//new object\n// x        y        z    rx  ry rz meshname (without .mesh file extension)\n875.549, 67.7777, 1155.08, -0.232, 87.462, 0.706, truckshop\n</code></pre> <p>Open Rigs of Rods again and load your map, the object should be in the same place as when you moved it using the editor.</p> <p>Congratulations! You have learned how to easily add/move objects.</p>"},{"location":"terrain-creation/l3dt-map-making/","title":"L3DT Map Making","text":""},{"location":"terrain-creation/l3dt-map-making/#introduction","title":"Introduction","text":"<p>L3DT is a Windows application for generating terrain maps and textures.  It is intended to help game developers and digital artists create vast high-quality 3D worlds. </p> <p>About L3DT web page</p> <p>This page will teach you how to export an L3DT terrain into Rigs of Rods version 2020.01+.</p> <p>Please read everything carefully and do not skip any steps.</p>"},{"location":"terrain-creation/l3dt-map-making/#required-applications","title":"Required applications","text":"<p>Note</p> <p>L3DT is now freeware as of December 11<sup>th</sup>, 2018.  As the transition isn't complete yet, it is highly recommended you sign up for the 6-month \"free trial\" here. Doing so gives you access to the work-in-progress \"L3DT Unlimited\" version, which doesn't require a license.</p> <ul> <li>L3DT Standard or Professional</li> <li>GIMP 2.10.10 or higher</li> <li>Notepad++</li> <li>A brain, some basic computer knowledge, and some patience</li> </ul> <p>For this tutorial, I will assume you already have a ready-to-export terrain in L3DT.</p> <p> </p> <p>This is a simple 1024x1024 terrain generated by L3DT's \"Design Map\" feature.</p> <p>I've uploaded the project files here for reference. </p> <p>Note: You may only be able to open the project file in the Pro version due to it using 4096x4096 textures.</p>"},{"location":"terrain-creation/l3dt-map-making/#setting-up","title":"Setting up","text":"<p>Start by downloading a template terrain. For simplicity sake, choose the <code>template_04_raw.zip</code> version. </p> <p>Once downloaded, extract the zip into any folder.</p> <p></p> <p>Delete <code>template_04_raw.raw</code>, <code>simple2_asphalt_diffusespecular.dds</code>, and <code>simple2_asphalt_normalheight.dds</code> as you will not be needing them.</p> <p></p> <p>Rename the files to what you'd like your terrain to be named (for this tutorial I will just name it <code>l3dt_tutorial</code>).</p> <p></p> <p>Now open all the files in Notepad++ by selecting them then right click -&gt; <code>Edit with Notepad++</code></p> <p></p> <p></p> <p>Press <code>CTRL+F</code> to open the Find menu, then switch to the <code>Replace</code> tab.</p> <p>Set \"Find what\" to <code>template_04_raw</code> and \"Replace with\" with your terrain name, then click <code>Replace All in All Opened Documents</code>.</p> <p>If successful, you should see something similar to <code>Replace in Opened Files: 5 occurrences were replaced.</code></p> <p></p> <p>Now click <code>File</code> -&gt; <code>Save All</code> to save your current files.</p> <p>We're ready to export the heightmap now.</p>"},{"location":"terrain-creation/l3dt-map-making/#exporting-the-heightmap","title":"Exporting the heightmap","text":"<p>In L3DT, right click the <code>Heightfield</code> layer -&gt; <code>Export layer...</code></p> <p></p> <p>Set the \"File format\" to <code>RAW</code>.</p> <p>Click the <code>...</code> button to browse to where your terrain files are located. Name the file the same as you did previously (i.e. <code>l3dt_tutorial.raw</code>).</p> <p>Now check the <code>Re-size for export</code> box and set the Width and Height to the same values as you did when you generated the terrain (i.e. 1024x1024).</p> <p></p> <p>You should now have a <code>.raw</code> file in your working directory.</p> <p></p>"},{"location":"terrain-creation/l3dt-map-making/#the-otc-file","title":"The OTC file","text":"<p>Now go back to Notepad++ and open <code>l3dt_tutorial.otc</code>. The file will look similar to this:</p> <pre><code>Heightmap.0.0.raw.size=5\nHeightmap.0.0.raw.bpp=2\nHeightmap.0.0.flipX=0\n\nWorldSizeX=3000\nWorldSizeZ=3000\nWorldSizeY=0\n\n\ndisableCaching=1\n\nPageFileFormat=l3dt_tutorial-page-0-0.otc\n\nMaxPixelError=0\nLightmapEnabled=0\nSpecularMappingEnabled=1\nNormalMappingEnabled=1\n</code></pre> <p><code>Heightmap.0.0.raw.size=5</code></p> <p>Size of your heightmap. For this terrain, it is <code>1024</code>.</p> <p><code>Heightmap.0.0.raw.bpp=2</code></p> <p>Bytes per pixel (1 = 8bit, 2=16bit). Leave this at <code>2</code>.</p> <p><code>Heightmap.0.0.flipX=0</code></p> <p>If the terrain heightmap needs to be flipped. since L3DT doesn't export the heightmap upside down leave this at <code>0</code>.</p> <p><code>WorldSizeX=3000</code></p> <p><code>WorldSizeZ=3000</code></p> <p>Size of the terrain. Since this is a 1024x1024 terrain, set both to <code>1024</code>.</p> <p><code>WorldSizeY=0</code></p> <p>Maximum height of the terrain. To get this value, in L3DT go to <code>Operations</code> -&gt; <code>Heightfield</code> -&gt; <code>Change vertical range...</code>.</p> <p></p> <p></p> <p>Add the non-negative minimum value to the maximum value. </p> <p></p> <p>If you get a decimal, you should be safe to round it (i.e. <code>139</code>).</p> <p><code>disableCaching=1</code></p> <p>This prevents the game from caching the heightmap. For testing purposes, leave it at <code>1</code>.</p> <p><code>PageFileFormat=l3dt_tutorial-page-0-0.otc</code></p> <p>Name of the file that defines the terrain textures. Since we already renamed it earlier, there's no need to change this.</p> <pre><code>MaxPixelError=0\nLightmapEnabled=0\nSpecularMappingEnabled=1\nNormalMappingEnabled=1\n</code></pre> <p>Advanced heightmap/texture settings, it's best to leave these at their current values.</p> <p>The finished file:</p> <pre><code>Heightmap.0.0.raw.size=1024\nHeightmap.0.0.raw.bpp=2\nHeightmap.0.0.flipX=0\n\nWorldSizeX=1024\nWorldSizeZ=1024\nWorldSizeY=139\n\n\ndisableCaching=1\n\nPageFileFormat=l3dt_tutorial-page-0-0.otc\n\nMaxPixelError=0\nLightmapEnabled=0\nSpecularMappingEnabled=1\nNormalMappingEnabled=1\n</code></pre> <p>We're ready to export the textures now. </p>"},{"location":"terrain-creation/l3dt-map-making/#exporting-textures","title":"Exporting textures","text":""},{"location":"terrain-creation/l3dt-map-making/#texture-map","title":"Texture map","text":"<p>Right click <code>Texture map</code> -&gt; <code>Export layer...</code></p> <p></p> <p>Set the \"File format\" to <code>PNG</code>.</p> <p>Just as you did previously, browse to your terrain directory and set the file name (i.e. <code>l3dt_tutorial.png</code>).</p> <p>Check the <code>Re-size for export</code> box and set your texture size (in this case, <code>4096x4096</code>)</p> <p></p>"},{"location":"terrain-creation/l3dt-map-making/#normal-map","title":"Normal map","text":"<p>Now right click <code>Terrain normals</code> -&gt; <code>Export layer...</code> and repeat the same steps as last time.</p> <p></p> <p>You should now have two textures in your working directory.</p> <p></p>"},{"location":"terrain-creation/l3dt-map-making/#applying-alpha-mask","title":"Applying alpha mask","text":"<p>To prevent the terrain texture from being overly shiny in-game, you will have to apply an alpha mask to both the texture map and the normal map. To do this, open both textures in GIMP.</p> <p></p> <p>Go to <code>Layer</code> -&gt; <code>Mask</code> -&gt; <code>Add Layer Mask...</code></p> <p></p> <p>Select <code>Black (full transparency)</code> then click <code>Add</code>.</p> <p></p> <p></p> <p>Now go to <code>File</code> -&gt; <code>Export As...</code></p> <p></p> <p>Change the file extension to <code>.dds</code> then click <code>Export</code>.</p> <p></p> <p>If you installed the DDS plugin correctly, you should now have a <code>Save as DDS</code> dialog.</p> <p>Set the <code>Compression</code> to <code>BC3 / DXT5</code> then click <code>OK</code> to export.</p> <p></p> <p>Repeat the same steps for the normal map texture. </p> <p>Once you're done, you should have two new DDS files in your working directory.</p> <p></p> <p>You can now delete the two PNG textures we exported earlier as they're no longer needed.</p> <p></p>"},{"location":"terrain-creation/l3dt-map-making/#the-page-file","title":"The page file","text":"<p>Now open <code>l3dt_tutorial-page-0-0.otc</code>. The file will look similar to this:</p> <pre><code>l3dt_tutorial.raw\n1\n; worldSize, diffusespecular, normalheight, blendmap, blendmapmode, alpha\n4, simple2_asphalt_diffusespecular.dds, simple2_asphalt_diffusespecular.dds\n</code></pre> <p><code>l3dt_tutorial.raw</code></p> <p>The name of your heightmap RAW file. Since we already renamed it earlier, there's no need to change this.</p> <p><code>1</code></p> <p>The number of texture layers. Since we only have 1 layer, leave it at <code>1</code>.</p> <p><code>4, simple2_asphalt_diffusespecular.dds, simple2_asphalt_diffusespecular.dds</code></p> <p><code>4</code> </p> <p>The size of your terrain. It typically is the same as the <code>WorldSizeX/WorldSizeZ</code> values. So in this case, <code>1024</code>.</p> <p><code>simple2_asphalt_diffusespecular.dds, simple2_asphalt_diffusespecular.dds</code> </p> <p>The names of your texture map and normal map. For this terrain, they are named <code>l3dt_tutorial.dds</code> and <code>l3dt_tutorial_normal.dds</code>.</p> <p>The finished file:</p> <pre><code>l3dt_tutorial.raw\n1\n; worldSize, diffusespecular, normalheight, blendmap, blendmapmode, alpha\n1024, l3dt_tutorial.dds, l3dt_tutorial_normal.dds\n</code></pre>"},{"location":"terrain-creation/l3dt-map-making/#the-terrn2-file","title":"The Terrn2 file","text":"<p>The last file we need to edit is the <code>l3dt_tutorial.terrn2</code> file. It will look similar to this:</p> <pre><code>[General]\nName = Template 0.4 (RAW Heightmap) Terrain\nGeometryConfig = l3dt_tutorial.otc\nWater=0\n#WaterLine=1.0\nAmbientColor = 0.93, 0.86, 0.76\nStartPosition = 512, 1, 512\n#CaelumConfigFile =\nSandStormCubeMap = tracks/skyboxcol\nGravity = -9.81\nCategoryID = 129\nVersion = 1\nGUID = 995a989c-28a7-4836-b5fe-bc699b81b97b\n//TractionMap = l3dt_tutorial-landuse.cfg\n\n\n[Authors]\ntemplate = CuriousMike\n\n\n[Objects]\nl3dt_tutorial.tobj=\n\n[Scripts]\n</code></pre> <p><code>Name = Template 0.4 (RAW Heightmap) Terrain</code></p> <p>The name of your terrain. In this example, I will name it <code>L3DT Tutorial Terrain V2</code>.</p> <p><code>GeometryConfig = l3dt_tutorial.otc</code></p> <p>The filename of your terrain's main OTC file. Since we already renamed it earlier, there's no need to change this.</p> <p><code>Water=0</code></p> <p>If your map has water, set this to <code>1</code>. Otherwise, leave it at <code>0</code>.</p> <p><code>#WaterLine=1.0</code></p> <p>If your terrain doesn't have water, skip this step. Otherwise, remove the <code>#</code> from the beginning of the line. </p> <p>To get this value, go back to the <code>Change vertical range...</code> dialog you got the minimum/maximum height values from earlier.</p> <p></p> <p>The non-negative minimum value is your <code>WaterLine</code> value. For this terrain, it is <code>40</code>. </p> <p>Again, you should be safe to round it.</p> <pre><code>AmbientColor = 0.93, 0.86, 0.76\nStartPosition = 512, 1, 512\n#CaelumConfigFile =\nSandStormCubeMap = tracks/skyboxcol\nGravity = -9.81\nCategoryID = 129\nVersion = 1\n</code></pre> <p>These values can currently be left as is. </p> <p><code>GUID = 995a989c-28a7-4836-b5fe-bc699b81b97b</code></p> <p>The ID that uniquely identifies your terrain. You can generate one here.</p> <p><code>//TractionMap = l3dt_tutorial-landuse.cfg</code></p> <p>The file that defines the different ground types. Since we don't currently have one, leave it commented out.</p> <pre><code>[Authors]\ntemplate = CuriousMike\n</code></pre> <p>The authors of the terrain. Just set your username. For example <code>terrain = CuriousMike</code>.</p> <pre><code>[Objects]\nl3dt_tutorial.tobj=\n</code></pre> <p>The name of your objects file. Since we already renamed it earlier, there's no need to change this.</p> <p><code>[Scripts]</code></p> <p>The AngelScript filename. Since we don't have one, just ignore this. </p>"},{"location":"terrain-creation/l3dt-map-making/#in-game","title":"In-Game","text":"<p>And finally, zip all your files up and place them into your <code>packs</code>/<code>mods</code> folder.</p> <p>Now launch RoR and load your terrain!</p> <p>If everything went well, your terrain should look almost identical to how it does in L3DT's Sapphire:</p> <p></p> <p></p>"},{"location":"terrain-creation/l3dt-map-making/#changing-the-spawn-position","title":"Changing the spawn position","text":"<p>When you loaded the terrain, you most likely spawned in the water or on the side of a mountain. </p> <p>To fix this, move RoRBot to where you'd like to spawn at.</p> <p></p> <p>Then press the <code>h</code> key. This is will log the current position to <code>RoR.log</code>.</p> <p>Now browse to <code>C:\\Users\\%username%\\Documents\\Rigs of Rods 0.4\\logs</code> and open the <code>RoR.log</code> file.</p> <p></p> <p>Scroll to the bottom of the file. You should find a line similar to this:</p> <p><code>22:21:51: Position:  885.289,  113.769,  586.640,    0.0,    0.0,    0.0</code></p> <p>Now open your <code>.terrn2</code> file and find the <code>StartPosition</code> line.</p> <p><code>StartPosition = 512, 1, 512</code></p> <p>Copy the first 3 numbers from the position line, for example:</p> <p><code>StartPosition = 885.289,  113.769,  586.640</code></p> <p>Save the file and launch RoR. You should now spawn in the position you set. </p> <p>Congratulations! You have learned how to get your L3DT terrain in-game!</p> <p>Download the finished terrain here.</p>"},{"location":"terrain-creation/l3dt-map-making/#troubleshooting","title":"Troubleshooting","text":""},{"location":"terrain-creation/l3dt-map-making/#stream-size-does-not-match-calculated-image-size","title":"Stream size does not match calculated image size","text":"<p>Your <code>Heightmap.0.0.raw.size</code> value does not match the size of your exported raw file. Make sure the size you set in the export dialog is the same.</p>"},{"location":"terrain-creation/l3dt-map-making/#in-game-world-scale-doesnt-match-the-l3dt-terrain","title":"In-game world scale doesn't match the L3DT terrain","text":"<p>Make sure your <code>WorldSizeX</code>/<code>WorldSizeZ</code> matches the size in L3DT. Also check if you calculated the <code>WorldSizeY</code> value correctly.</p>"},{"location":"terrain-creation/l3dt-map-making/#terrain-texture-is-solid-black","title":"Terrain texture is solid black","text":"<p>Your texture names in your page file don't match the filename. </p>"},{"location":"terrain-creation/l3dt-map-making/#terrain-texture-is-shiny","title":"Terrain texture is shiny","text":"<p>You didn't apply the alpha mask in GIMP correctly.</p>"},{"location":"terrain-creation/l3dt-map-making/#ror-crashes-while-loading-the-terrain","title":"RoR crashes while loading the terrain","text":"<p>Check all your files and make sure you didn't make any syntax errors. You can also check your <code>RoR.log</code> to see where the crash occurs at.</p>"},{"location":"terrain-creation/l3dt-map-making/#more-help","title":"More help","text":"<p>If you have a different issue than the one listed here and you're sure you didn't do anything obviously wrong,  then please make a thread in the correct subforum or join our Discord server and ask your question in the <code>#modding</code> channel.</p>"},{"location":"terrain-creation/object-format/","title":"Object format (.odef)","text":""},{"location":"terrain-creation/object-format/#introduction","title":"Introduction","text":"<p>The <code>.odef</code> format specifies a static object that can be placed on a terrain.  These files are placed in the same zip as the object's mesh files. Rigs of Rods will not load the object if the file does not exist!     </p> <p>Basic example with a collision mesh:  <pre><code>Building.mesh\n1, 1, 1\n\nbeginmesh\nmesh BuildingCollision.mesh\nendmesh\n\nend\n</code></pre></p> <p>Advanced example file featuring event boxes:</p> <pre><code>hangar.mesh\n1, 1, 1\n\nbeginmesh\nmesh hangarcol.mesh\nendmesh\n\n\nbeginbox\nboxcoords -23.75, -21.75, -0.2, 2.1, -3.07, -0.19\nvirtual\nevent shopplane avatar\nreverb_preset EFX_REVERB_PRESET_WOODEN_ALCOVE\nendbox\n\nbeginbox\nboxcoords  -17, 17, 0, 4.5, -29, 4\nvirtual\nevent spawnzone\nreverb_preset EFX_REVERB_PRESET_FACTORY_HALL\ndirection 0, 90, 0\nendbox\n\nend\n</code></pre> <p>The format is described below: </p> <p>The first line specifies the visual mesh to use. Can be set to <code>none</code> to disable visuals, useful for event boxes. </p> <p>The second line specifies the scale of it (<code>x</code>, <code>y</code>, <code>z</code>)  Default: <code>1,1,1</code></p> <p>After that, several sections can follow (<code>beginbox</code>, <code>beginmesh</code>, <code>playanimation</code>) </p> <p>The <code>.odef</code> file must be always closed with <code>end</code></p> <p>If there are no Begin box nor Begin mesh sections, the object will have no collisions. </p>"},{"location":"terrain-creation/object-format/#commands","title":"Commands","text":"<p>These commands can be called outside or inside a <code>beginbox</code> or <code>beginmesh</code>:</p>"},{"location":"terrain-creation/object-format/#setmeshmaterial","title":"setMeshMaterial","text":"<p><code>setMeshMaterial tracks/bigsign/town</code> </p> <p>You can create different materials (red, blue, green skins) for your object and now, you only need to create 3 different <code>.odef</code> files, one for each color. </p> <p>For example you create a file called <code>myRedBuilding.odef</code> and inside you specify <code>setMeshMaterial myRedColor</code>, <code>myRedColor</code> is defined on any <code>.material</code> file you need to create.</p>"},{"location":"terrain-creation/object-format/#nocast","title":"nocast","text":"<p>Disables shadow casting for the object, useful for skyboxes.</p> <pre><code>Building.mesh\n1, 1, 1\n\nbeginmesh\nmesh BuildingCollision.mesh\nendmesh\n\nnocast\n\nend\n</code></pre>"},{"location":"terrain-creation/object-format/#begin-box","title":"Begin box","text":"<p>Specifies a box that can be used for collisions or events.</p> <p><code>boxcoords x, x1, y, y1, z, z1</code> where the upper near left vertex of the 3D box is (<code>x</code>, <code>y</code>, <code>z</code>) and the lower far right vertex of the box is (<code>x1</code>, <code>y1</code>, <code>z1</code>). If you are defining a collision box, you don't need any other optional commands, just <code>endbox</code>. </p> <p>optional: <code>virtual</code>: this makes the box to spawn an event. In this case you must also have an event line in this box: </p> <p>optional: <code>event eventname filterevent</code> </p> <p><code>eventname</code>: the name of the event it should generate. </p> <p>Some predefined values are <code>shopboat</code>, <code>shoptruck</code>, <code>shopplane</code>, <code>shoptrain</code> and <code>spawnzone</code> but you can define a non existing eventname if you want to use with Angelscript.</p> <p><code>filterevent</code>: on what it should trigger. valid values: <code>avatar</code>, <code>truck</code>, <code>truck_wheels</code>, <code>boat</code> and <code>airplane</code>. </p> <p>optional:<code>direction 0, 90, 0</code>: this determines the direction of objects spawned in this box </p> <p>optional:<code>camera x, y, z</code>: Coordinates to place the camera. </p> <p>optional:<code>forcecamera x, y, z</code>: Coordinates to place the camera, and force to change to this camera point of view when player enter at the box coords. </p> <p>optional:<code>reverb_preset preset_name</code>:  The OpenAL sound preset to be used when player vehicle enters the box.  Where <code>preset_name</code> is an <code>EFX_REVERB_PRESET_*</code> from here.</p> <p><code>endbox</code> must close the box</p> <pre><code>beginbox\nboxcoords -23.75, -21.75, -0.2, 2.1, -3.07, -0.19\nvirtual\nevent shopplane avatar\nendbox\n</code></pre> <p>Whenever the character (RoRbot) enters the box specifies by boxcoords, a trigger <code>shopplane</code> will be triggered, so the spawn menu will be shown.</p>"},{"location":"terrain-creation/object-format/#begin-mesh","title":"Begin mesh","text":"<p>You can use a existing mesh that RoR collision system will use. </p> <p><code>beginmesh</code>: this enables you to use meshes for collisions: </p> <p><code>mesh hangar.mesh</code>: this load the mesh hangar.mesh as a collision mesh. Important: Only use very low polygon meshes, or the simulation will be slowed down drastically! </p> <p><code>endmesh</code>: closes the actual mesh box</p>"},{"location":"terrain-creation/object-format/#friction","title":"Friction","text":"<p>Defined inside of a <code>beginbox</code> or <code>beginmesh</code>, this sets the friction of a collision mesh or box. If not defined the default groundmodel used will be <code>concrete</code>.</p> <p><code>frictionconfig name-groundmodel.cfg</code> </p> <p>Optional, loads a custom groundmodel config. Use this if you want to use a groundmodel not specified in ground_models.cfg.</p> <p><code>name-groundmodel.cfg</code> is the name of your groundmodel config file. </p> <p><code>stdfriction name</code>  or <code>usefriction name</code></p> <p>Where <code>name</code> is either <code>concrete</code>, <code>asphalt</code>,<code>gravel</code>, <code>rock</code>, <code>ice</code>, <code>snow</code>, <code>metal</code>, <code>grass</code> or <code>sand</code>: this will set the type of friction the collision mesh or box will do. The physical parameters of these standard friction materials are defined in the configuration file ground_models.cfg.</p> <p>For example, if you have made a road object and you want to give it an asphalt friction, give it an odef file like this one:</p> <pre><code>example_road.mesh\n1, 1, 1\n\nbeginmesh\nmesh example_road.mesh\nstdfriction asphalt\nendmesh\n\nend\n</code></pre> <p>A friction settings tool can be accessed in-game through the Tools tab of the Top Menubar. Use this to check if the friction is correctly applied to the object.</p>"},{"location":"terrain-creation/object-format/#animations","title":"Animations","text":"<p>If your object has an animation you can play it with this additional line: </p> <p><code>playanimation speedfactorMin speedfactorMax AnimationName</code></p> <p>Example from the terrain Fall Run:</p> <p><code>playanimation 0.5, 0.6, CAT_330c_diging</code></p> <p>Notes: These objects wont be collide-able, and the animation will loop forever </p>"},{"location":"terrain-creation/object-format/#particles","title":"Particles","text":"<p>You can add chimneys or other particle effects to your object using this:</p> <pre><code>;particleSystem scale, x, y, z, particleInstanceName particleScriptName\nparticleSystem 1, 1, 1, 1, myfire1 enhancedFire\n</code></pre>"},{"location":"terrain-creation/object-format/#ambient-light","title":"Ambient light","text":"<p>Allows for ambient light to be added to an object that can cast light onto other objects.  Works similarly to flares.</p> <p>Note</p> <p>Light casting currently only works with PSSM shadows disabled!</p>"},{"location":"terrain-creation/object-format/#pointlight","title":"Pointlight","text":"<pre><code>;pointlight x, y, z, dirx, diry, dirz, r, g, b, range\npointlight -13, 1, 6, -1, 0, -1, 10, 5, 0, 60\n</code></pre> <p>Parameters:</p> <ul> <li>X position: Light's X coordinate.</li> <li>Y position: Light's Y coordinate.</li> <li>Z position: Light's Z coordinate.</li> <li>DirX: Light direction on the X axis.</li> <li>DirY: Light direction on the Y axis.</li> <li>DirZ: Light direction on the Z axis.</li> <li>R, G, B: RGB 0-1 color values. Sets the color of the visual flare and light.</li> <li>Range: Distance the light will cast.</li> </ul>"},{"location":"terrain-creation/object-format/#spotlight","title":"Spotlight","text":"<pre><code>;spotlight x, y, z, dirx, diry, dirz, r, g, b, range, innerAngle, outerAngle \nspotlight  -13, 1, 6, -1, 0, -1, 10, 5, 0, 60,30,45\n</code></pre> <p>Parameters:</p> <ul> <li>X position: Light's X coordinate.</li> <li>Y position: Light's Y coordinate.</li> <li>Z position: Light's Z coordinate.</li> <li>DirX: Light direction on the X axis.</li> <li>DirY: Light direction on the Y axis.</li> <li>DirZ: Light direction on the Z axis.</li> <li>R, G, B: RGB 0-1 color values. Sets the color of the visual flare and light.</li> <li>Range: Distance the light will cast.</li> <li>Inner / Outer Angle: The angles that determine where the light fades from bright in the middle to dimmer on the outside edges.</li> </ul>"},{"location":"terrain-creation/old-terrn-subsystem/","title":"Old Terrain System (pre 0.4)","text":"<p>This subsystem is obsolete since RoR version 0.4.0. It was based upon Ogre engine's TerrainManager component, which was obsoleted, and thus we couldn't rely on it anymore.</p>"},{"location":"terrain-creation/old-terrn-subsystem/#file-type-overview","title":"File type overview","text":"<ul> <li>.terrn - You define terrain name, associated .cfg name, spawn point position, ambient colour and various object positions.</li> <li>.cfg - You define Terrain Texture, RAW Heightmap file, World Sizes and Height, Tiles the map get divided into, Terrain LOD and additional stuff.</li> <li>.RAW - A greyscale image which is the heightmap of the terrain. It is a RAW 8/16 bit DEM (digital elevation map).      Its dimensions MUST BE squared sized and with size (2^n) + 1, in example 1025x1025.     As a consequence, the total file size must be 2,101,250 bytes (2x1025x1025).     Other elevation sized maps could be: 129x129, 513x513, 2049x2049 </li> <li>.os - Caelum Config</li> <li>.png/./jpg/.dds - Terrain Texture, typically a large bitmap (for example a 1024x1024 BMP) that is projected onto the terrain.     This texture must include shading and shadowing (the terrain is not shaded by RoR).     The light source (the sun) heading is -60 degree and altitude of 25 degree.</li> <li>.png/./jpg/.dds - A miniature map: a 256x256 image (that can be the reduction of the texture file) used as a map in RoR.</li> </ul>"},{"location":"terrain-creation/old-terrn-subsystem/#the-terrn-format","title":"The .terrn format","text":""},{"location":"terrain-creation/old-terrn-subsystem/#basics","title":"Basics","text":"<p>The .terrn file is a text file containing the following information, in this precise order:</p> <ol> <li>Name of the terrain: it must be the first line of the file!</li> <li>Name of the .cfg file associated to the terrain (must be the second)</li> <li>(optional) If you want water in the terrain, put the character 'w' followed by the water height relative to the lowest point of your terrain. For example:</li> <li>(optional) For Caelum lighted terrains, add a line here with the text \"Caelum\". A Caelum-lighted terrain is a terrain that has 12 extra textures to have the mountain shadows match with the sun position.</li> <li>Sky color: red, green, blue components (between 0 and 1)</li> <li> <p>Spawning positions: a set of two or three X,Y,Z coordinates.</p> <ol> <li>The first coordinate is the truck spawn position (when buying a new truck)</li> <li>The second is the initial camera spawn position</li> <li>(optional) The third is the initial character spawn position.</li> </ol> </li> <li> <p>(optional) <code>sandstormcubemap Sky/EarlyMorning</code> cube map used on this terrain. Example at 0.36 version in aspen.</p> </li> <li> <p>A set of lines, each line positioning an object or a truck on the terrain. At this stage, you can put comments by starting the line with \"//\".</p> <ol> <li> <p>The content of the line is: <code>X, Y, Z, RX, RY, RZ, object_name</code></p> <ol> <li>The values X,Y,Z are the position of the object</li> <li>RX,RY,RZ the rotation of the object</li> <li>The object_name is the name of an .odef file, but without its file extension</li> </ol> </li> <li> <p>You can add more optional parameters to add labels to the map:</p> <ol> <li>The first extra parameter is a qualifier (village, hotel, observatory, etc.)</li> <li>The second is the place name. If you want to put a truck or load in the map, use the keyword \"truck\" or \"load\" in place of the object_name, and put the truck or load name after (with the extension).</li> </ol> </li> </ol> </li> <li> <p>The keyword \"end\"</p> </li> </ol> <p>NOTE: If you add truckshop, hangar, marina or any building you can buy vehicles, the section 8-2 is required!</p> <p>Examples: A terrn file in its simplest form:</p> <pre><code>Angle\nangle.cfg\n0.93, 0.86, 0.76\n509,6,680,  509,6,680\nend\n</code></pre> <p>A more complex terrn file, with water and a few objects (using 8-2 section):</p> <pre><code>North St Helens\nnhelens.cfg\nw 33\n0.93, 0.86, 0.76\n1169.0,35,948.75,  1220,36,980, 1165.5, 35, 942\n//a truck\n1190, 35, 930, 0, 0, 0, truck   wrecker.truck\n//a load\n1130, 35, 910, 0, 0, 0, load    acontainer.load\n//an object\n1180, 34.15, 950, 0, 20, 0, truckshop shop Rig-a-Deal\n1220, 34.15, 980, 0, 20, 0, truckshop shop Rig-a-Deal-2\n1280, 34.15, 960, 0, 20, 0, load-spawner sale spawn_Zone_1\n1310, 34.15, 950, 0, 20, 0, load-spawner sale spawn_Zone_2\n1390, 34.15, 950, 0, 20, 0, myhangar2 repair Repair_Zone_1\nend\n</code></pre>"},{"location":"terrain-creation/old-terrn-subsystem/#author-information","title":"Author information","text":"<p>Append something like this inside your file:</p> <pre><code>//author terrain 4 pricorde\n//author objects 4 pricorde\n</code></pre> <p>Do not forget the '//'\u00a0!</p>"},{"location":"terrain-creation/old-terrn-subsystem/#grass","title":"Grass","text":"<p>This enables you to add grass to the terrain. The arguments are (all on one line!):</p> Keyword Description Recommended Values grass Must precede other grass-related keywords Grass Range Determines grass visibility range in meters 80 Sway Speed The rate at which the grass sways in simulated wind 0.5 Sway Length Length of sway displacement 0.05 Sway Distribution How much of the wind wave is distributed 10 Density Density of grass distribution. Maximum of 3.5 0.3 MinX/Y MaxX/Y Determine size of grass:  Fade Type Adjusts method of transition (via distance):0 - FADETECH_GROW = Grass will grow out of the ground, looks good with grass that has ground color1 - FADETECH_ALPHAGROW = Like 0, but with alpha blending2 - FADETECH_ALPHA = Alpha blends in/out 0 Min-YMax-Y Minimum/maximum appearance level. 0 for no minimum/maximum.Example: <code>0, 10</code> for seagrass under the water level 10 or <code>10, 0</code> for grass above the sea level (if the sea level is 10) Material Material file for grass appearance Listed in <code>/data/paged/grass.material</code> Color Map Determines grass color. Grass image must be gray scale! Use none to disable Use terrain texture to match ground color Density Map A gray scale image that determines density. Darker shades refer to less grass, while white refers to most grass. None to disable. <p>For example 7 grass types plus sea grass (water level is 10):</p> <pre><code>// format: grass range, SwaySpeed, SwayLength, SwayDistribution, Density, minx, miny, maxx, maxy, fadetype, minY, maxY, material colormap densitymap \ngrass 200, 0.5, 0.05, 10, 0.1, 0.2, 0.2, 1, 1, 1, 0, 9, seaweed none none\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass1 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass2 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass3 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass4 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass5 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass6 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 3.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass7 aspen.jpg aspen_grass_density.png\n</code></pre>"},{"location":"terrain-creation/old-terrn-subsystem/#trees","title":"Trees","text":"<pre><code>//trees yawFrom, yawTo, scaleFrom, scaleTo, highDensity, distance1, distance2, meshName colormap densitymap \ntrees 0, 360, 0.1, 0.12, 2, 60, 3000, fir05_30.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 1, 3, 1, 60, 3000, tree.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 1, 2, 1, 60, 3000, tree2.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 0.1, 0.13, 1, 60, 3000, fir06_30.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 0.1, 0.13, 1, 60, 3000, fir14_25.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 0.1, 0.2, 3, 60, 3000, plant1.mesh aspen-test.dds aspen_grass_density.png \ntrees 0, 360, 0.1, 0.2, 3, 60, 3000, plant2.mesh aspen-test.dds aspen_grass_density2.png\n</code></pre> <p>arguments:</p> <ul> <li>yawFrom-yawTo: that is the range which the game will choose to randomly rotate the trees</li> <li>scaleFrom-scaleTo: scaling range that the game uses randomly. 0=0%, 1=100%</li> <li>highDensity\u00a0: density factor: 0=0, 1=not much, 2=more, etc</li> <li>distance1: distance to which the game should use the mesh instead of the billboard. This is performance critical, use low values if possible!</li> <li>distance2: distance to which the billboard should be drawn (max sight range)</li> <li>meshName\u00a0: the mesh to use</li> <li>colorMap\u00a0: used to colorize the mesh. if your mesh is too dark check the colormap! Can be set to none to disable it.</li> <li>densityMap: texture that determines where and how much trees are used. white = 100%, black = 0%</li> </ul> <p>since 0.38.62 it has two more arguments:</p> <ul> <li>grid spacing (0=default):<ul> <li>negative number: set the detail level of the used grid</li> <li>positive number: use new tree distribution scheme: one tree in the center of a grid cell</li> </ul> </li> <li>collision mesh: .mesh that will be used for the collision engine</li> </ul> <p> //trees yawFrom, yawTo, scaleFrom, scaleTo, highDensity, distance1, distance2, meshName colormap densitymap gridspacing collmesh trees 0, 360, 0.1, 0.2, 3, 60, 3000, plant1.mesh aspen-test.dds aspen_grass_density.png 0 plant1-col.mesh trees 0, 360, 0.1, 0.2, 3, 60, 3000, plant2.mesh aspen-test.dds aspen_grass_density2.png 0 plant2-col.mesh </p>"},{"location":"terrain-creation/old-terrn-subsystem/#races","title":"Races","text":"<p>It's no longer possible to add races to your terrain using the terrn file. You'll need a separate script file. More information can be found here: Race script generator</p>"},{"location":"terrain-creation/old-terrn-subsystem/#procedural-roads","title":"Procedural Roads","text":"<pre><code>begin_procedural_roads\n//position x,y,z rotation rx,ry,rz, width, border width, border height, type\n           0,0,0,         0,0,0,    10.0,  0,            0,             flat\n           0,0,0,         0,0,0,    10.0,  0.25,         1.0,           both\nend_procedural_roads\n</code></pre> <p>valid types:</p> <ul> <li>flat</li> <li>left - Only left border</li> <li>right - Only right border</li> <li>both - Both borders</li> <li>bridge</li> <li> <p>bridge_no_pillars</p> </li> <li> <p>monorail (0.35+)</p> </li> <li>monorail2 (0.35+)</li> </ul> <p>You can view some examples of various settings</p>"},{"location":"terrain-creation/old-terrn-subsystem/#mpspawn","title":"Mpspawn","text":"<p>Mpspawn is used for spawning boats and airplanes on multiplayer. The syntax is</p> <p><code>mpspawn\u00a0airplane\u00a02192.29\u00a016.3357\u00a01963.89\u00a00\u00a0260\u00a00</code> <code>mpspawn\u00a0boat\u00a01741.8\u00a05.58322\u00a02291.23\u00a00\u00a068,091\u00a00</code></p> <p>The line starts with \"mpspawn airplane\" (for airplanes) or \"mpspawn boat\" (for boats)</p> <p>The first three numbers are the X, Y and Z coordinates of the spawning point. The next three numbers are X rotation, Y rotation and Z rotation.</p> <p>If these lines do not exist in the terrn code, the game will eventually crash or the vehicle will spawn at the standard spawning position</p>"},{"location":"terrain-creation/old-terrn-subsystem/#caelum-sky","title":"Caelum Sky","text":"<p>you can select which sky to use by adding a one-liner:</p> <pre><code>caelumconfig some_sky\n</code></pre> <p>the default is \"ror_default_sky\".</p> <p>the sky must be defined in a .os file.</p> <p>for example to use some_sky create a file \"my_terrain_sky.os\" and put beside your other terrain files and put the following into it:</p> <pre><code>caelum_sky_system some_sky\n{\n    // J2000\n    julian_day 2451545.0\n    time_scale 1\n\n    point_starfield {\n        magnitude_scale 2.51189\n        mag0_pixel_size 16\n        min_pixel_size 4\n        max_pixel_size 6\n    }\n\n    manage_ambient_light true\n    minimum_ambient_light 0.1 0.1 0.3\n\n    manage_scene_fog yes\n    ground_fog_density_multiplier 0.0015\n    scene_fog_density_multiplier 0.0015\n\n    sun {\n        ambient_multiplier 1 0.5 0.5\n        diffuse_multiplier 3 3 2.7\n        specular_multiplier 5 5 5\n\n        auto_disable_threshold 0.05\n        auto_disable true\n    }\n\n    moon {\n        ambient_multiplier 1 0.2 0.2\n        diffuse_multiplier 1 1 .9\n        specular_multiplier 1 1 1\n\n        auto_disable_threshold 0.05\n        auto_disable true\n    }\n\n    // Off by default\n    /*\n    depth_composer {\n        debug_depth_render on\n        haze_enabled no\n        ground_fog_enabled no\n        ground_fog_vertical_decay 0.06\n        ground_fog_base_level 0\n    }\n    */\n\n\n    sky_dome {\n        haze_enabled yes\n        sky_gradients_image EarthClearSky2.png\n        atmosphere_depth_image AtmosphereDepth.png\n    }\n\n    cloud_system\n    {\n        cloud_layer\n        {\n            height 3000\n            coverage 0.9\n        }\n    }\n\n}\n</code></pre>"},{"location":"terrain-creation/old-terrn-subsystem/#gravity","title":"Gravity","text":"<p>You can change the gravity in your map by adding :</p> <pre><code>gravity -1.622\n</code></pre> <p>It will set the gravity of your map to the Moon one. 0 means no gravity (weightlessness). Positive value will repulse(push) you from the ground.</p> <p>Some values :</p> <ol> <li>Earth gravity : -9.81 (default value if not precised)</li> <li>Moon gravity : -1.622</li> <li>Mars gravity : -3.711</li> <li>Pluto gravity : -0.665</li> </ol>"},{"location":"terrain-creation/old-terrn-subsystem/#collision-limits","title":"Collision limits","text":"<p>if you have lots of objects, you might want to increase the collision buffer size so everything stays contractible. The default is 100000.</p> <pre><code>collision-tris 100000\n</code></pre> <p>Caution: use this before loading any objects (in the top of the file) Caution2: the more you specify here, the more memory will be required to run your map, which can be a reason why it stops working for some users.</p>"},{"location":"terrain-creation/race-generator/","title":"Race script generator","text":"General General Settings Show chp info? [Current setting: If the user drives through a (not start line) checkpoint of a race that isn't running, nothing will happen.] Script filename: [optional, the extension of this file should be .as.] General abort points (advanced) The race abort points defined here, will abort whichever race is running at that moment. General abort points: [Note: Leave the object or message field empty to use the default. You can change the defaults below.] Default abort object: [optional, the object that should be used for race abort points if no object (or [default]) is specified above.] Default abort message: [optional, the message that should be shown when a race is aborted and the [default] message is used above.] Add more races or generate the script [Start here. You can have multiple races on 1 terrain.] [Generate the scripting file when you're finished adding all the races.] Error log Resulting script file Race {RACE_NUMBER} remove this race General race info Race name: Amount of laps: No laps (the first checkpoint will be the start line and the last checkpoint                     will be the finish line)                  1 lap (the first                     checkpoint will be both the start and finish line)                  2 laps 3 laps 4 laps 5 laps 6 laps 7 laps 8 laps 9 laps Never ending race (unlimited amount of                     laps)                  other... Race version: [optional] Race options (advanced) Finishing obligatory? [Current  setting: If you drive through the start checkpoint of a race while already in another race, the current race will be aborted and the other race will start.] Show time difference? [Current setting: Show + or - [best time minus current time] when passing a checkpoint.] Show best lap time? [Current setting: If a race is started or a new best lap is set, the best lap will be shown.] Show best race time? [Current setting: If a race is started or a new best race time is set, the best race time will be shown.] Submit best time? [Current setting: If the user has a new best lap time or new best race time, then this time is submitted to the master server.] Silent mode? [Current setting: The user will be informed about running races.] Allow race restart? [Current setting: The race will be restarted when you pass the start line of the same race.] Checkpoint locations and checkpoint objects Checkpoint coordinates: [Note: Leave the object field empty to use the default. You can change the defaults below.] Default start object: [optional, the start line object that should be used if it wasn't specified with in the checkpointlist above.] Default chp object: [optional, the checkpoint object that should be used for all checkpoints that do not have an object specified in the checkpointlist above.] Default finish object: [optional, the finish line object that should be used if it wasn't specified with in the checkpointlist above.] Preview: Unsupported                 browser!              Race abort points (advanced) Race abort points: [Note: Leave the object or message field empty to use the default. You can change the defaults below.] Default abort object: [optional, the object that should be used for race abort points if no object (or [default] object) is specified above.] Default abort message: [optional, the message that should be shown when a race is aborted and the [default] message is used above.] Race penalty events (advanced)             The settings in this box only apply if a 'race_penalty' box was triggered.             You can define 'race_penalty' points in the odef file of your checkpoint. Penalty seconds: [the amount of seconds that should be added to the lap time when the penalty event is triggered.] Message: [optional, the message that should be shown when a penalty event is triggered.]"},{"location":"terrain-creation/race-generator/#what-is-this","title":"What is this?","text":"<p>This is a generator for creating functional races (or timers) for terrains in Rigs of Rods, created by Neorej16 and ported to docs.rigsofrods.org by CuriousMike.</p>"},{"location":"terrain-creation/race-generator/#instructions","title":"Instructions","text":"<p>Start by clicking \"Add race\".  You can have multiple races on one terrain. </p>"},{"location":"terrain-creation/race-generator/#general-race-info","title":"General race info","text":""},{"location":"terrain-creation/race-generator/#race-name","title":"Race name","text":"<p>The name of your race, shown in the  top left corner. </p>"},{"location":"terrain-creation/race-generator/#amount-of-laps","title":"Amount of laps","text":"<p>The amount of laps your race will have. For point-to-point races, set \"No laps\".</p>"},{"location":"terrain-creation/race-generator/#race-version","title":"Race version","text":"<p>The version number of your race. (e.g. <code>authorName-1.0</code>).</p>"},{"location":"terrain-creation/race-generator/#race-options","title":"Race options","text":""},{"location":"terrain-creation/race-generator/#finishing-obligatory","title":"Finishing obligatory?","text":"<p>Disabled (Default): If you drive through the start checkpoint of a race while already in another race, the current race will be aborted and the other race will start.</p> <p>Enabled: If you drive through the start checkpoint of a race while already in another race, the current race will continue and the other race start line will be ignored.</p>"},{"location":"terrain-creation/race-generator/#show-time-difference","title":"Show time difference?","text":"<p>Enabled (Default): Show + or - [best time minus current time] when passing a checkpoint.</p> <p>Disabled: Only show the current time when you pass a checkpoint.</p>"},{"location":"terrain-creation/race-generator/#show-best-lap-time","title":"Show best lap time?","text":"<p>Enabled (Default): If a race is started or a new best lap is set, the best lap will be shown.</p> <p>Disabled: Best lap times won't be shown to the user.</p>"},{"location":"terrain-creation/race-generator/#show-best-race-time","title":"Show best race time?","text":"<p>Enabled (Default): If a race is started or a new best race time is set, the best race time will be shown.</p> <p>Disabled: Best lap times won't be shown to the user.</p>"},{"location":"terrain-creation/race-generator/#submit-best-time","title":"Submit best time?","text":"<p>Enabled (Default): If the user has a new best lap time or new best race time, then this time is submitted to the master server.</p> <p>Disabled: Race and lap times won't be sent to the master server.</p>"},{"location":"terrain-creation/race-generator/#silent-mode","title":"Silent mode?","text":"<p>Disabled (Default): The user will be informed about running races.</p> <p>Enabled: No info will be shown to the user, except for the timer.</p>"},{"location":"terrain-creation/race-generator/#allow-race-restart","title":"Allow race restart?","text":"<p>Enabled (Default): The race will be restarted when you pass the start line of the same race.</p> <p>Disabled: The race will continue to run without resetting the time when you pass the start line of the same race.</p>"},{"location":"terrain-creation/race-generator/#checkpoint-locations-and-objects","title":"Checkpoint locations and objects","text":"<p>This section defines the locations of the checkpoints and what objects to use for the checkpoints.</p>"},{"location":"terrain-creation/race-generator/#retrieving-checkpoint-coordinates","title":"Retrieving checkpoint coordinates","text":"<p>To easily get the checkpoint coordinates, do the following:</p> <ul> <li> <p>Open RoR and select your terrain </p> </li> <li> <p>While not in a vehicle, walk to where you want your checkpoint to be, then press the <code>H</code> key. Repeat for all checkpoints you want to add. </p> </li> <li> <p>When finished, exit RoR and open the <code>RoR.log</code> file, located at <code>Documents\\My Games\\Rigs of Rods\\logs</code>.</p> </li> <li> <p>Scroll to the end of the file, you should see position lines like the following:</p> </li> </ul> <pre><code>00:58:49: Position:  486.504,    0.000,  512.000,    0.0,  360.0,    0.0\n00:58:58: Position:  457.481,    0.000,  500.993,    0.0,  396.3,    0.0\n00:59:05: Position:  470.764,    0.000,  464.283,    0.0,  484.1,    0.0\n00:59:14: Position:  526.697,    0.000,  482.188,    0.0,  573.8,    0.0\n00:59:20: Position:  564.749,    0.000,  465.543,    0.0,  512.7,    0.0\n00:59:26: Position:  584.245,    0.000,  496.841,    0.0,  613.8,    0.0\n00:59:32: Position:  550.343,    0.000,  511.211,    0.0,  716.8,    0.0\n</code></pre> <p>These are your checkpoint's position coordinates. Copy the lines to a new file as you'll need to edit it later.</p>"},{"location":"terrain-creation/race-generator/#adding-coordinates","title":"Adding coordinates","text":"<p>To add the coordinates you retrieved from the log file, edit the lines to match the format below:</p> <pre><code>486.504,    0.000,  512.000,    0.0,  360.0,    0.0, [default]\n457.481,    0.000,  500.993,    0.0,  396.3,    0.0, [default]\n470.764,    0.000,  464.283,    0.0,  484.1,    0.0, [default]\n526.697,    0.000,  482.188,    0.0,  573.8,    0.0, [default]\n564.749,    0.000,  465.543,    0.0,  512.7,    0.0, [default]\n584.245,    0.000,  496.841,    0.0,  613.8,    0.0, [default]\n550.343,    0.000,  511.211,    0.0,  716.8,    0.0, [default]\n</code></pre> <p>Then paste the lines into the \"Checkpoint coordinates\" box. Example:</p> <p></p> <p>A preview of the checkpoint layout will be shown.</p>"},{"location":"terrain-creation/race-generator/#checkpoint-objects","title":"Checkpoint objects","text":"<p>At the end of each coordinate line is the name of the checkpoint object. This defines the checkpoint visuals.</p> <p>Each line can have a different checkpoint object. However, for simplicity's sake, you can set the default object names in the <code>Default start / checkpoint / finish object</code> sections. These objects will be used if you specify a checkpoint name in the coordinates list as <code>[default]</code>.</p> <p>By default, RoR includes these checkpoint models:</p> <p></p> <p>The names for these objects are <code>chp-start</code> and <code>chp-checkpoint</code>.</p> <p>You can also use a custom object. Here are a few checkpoints you can use, just extract the contents into your terrain's zip file:</p>"},{"location":"terrain-creation/race-generator/#f1-test-track-checkpoint","title":"F1 Test Track Checkpoint","text":"<p>These are the checkpoints from F1 Test Track, updated with fixed normals and new textures.</p> <p>Object names: <code>new-checkpoint-start</code> and <code>new-checkpoint</code>.</p> <p>Download: f1_checkpoint.zip</p>"},{"location":"terrain-creation/race-generator/#empty-checkpoint","title":"Empty Checkpoint","text":"<p>This checkpoint has no visuals. Useful for meshed terrains which have a clearly defined layout (such as tracks) or multiple races which share checkpoint locations. </p> <p>Object name: <code>empty-checkpoint</code>.</p> <p>Download: empty_checkpoint.zip</p>"},{"location":"terrain-creation/race-generator/#race-abort-points","title":"Race abort points","text":"<p>Optional, defines points which will abort the current race. Use the same coordinate format as above. </p>"},{"location":"terrain-creation/race-generator/#race-penalty-events","title":"Race penalty events","text":"<p>Not used by any of the included checkpoints. Defines settings for the <code>race_penalty</code> box. </p> <p>To add a <code>race_penalty</code> box, edit the odef file of your checkpoint. (See begin box section)</p>"},{"location":"terrain-creation/race-generator/#general-settings","title":"General settings","text":""},{"location":"terrain-creation/race-generator/#show-checkpoint-info","title":"Show checkpoint info?","text":"<p>Disabled (Default): If the user drives through a (not start line) checkpoint of a race that isn't running, nothing will happen.</p> <p>Enabled: If the user drives through a checkpoint of a race that isn't running, a message will be shown, saying \"this is checkpoint X of race myRaceName\".</p>"},{"location":"terrain-creation/race-generator/#script-filename","title":"Script filename","text":"<p>The file name of your race script with the <code>.as</code> file extension. Example: <code>myTerrain.as</code></p>"},{"location":"terrain-creation/race-generator/#general-abort-points","title":"General abort points","text":"<p>Optional, defines points which will abort any current race. Use the same coordinate format as above. </p>"},{"location":"terrain-creation/race-generator/#generating-completed-script","title":"Generating completed script","text":"<p>Once you're finally done setting up your race(s), click <code>Generate script file!</code> to generate the finished script. </p> <p>Example completed script of a basic 2 lap race on Simple Test Terrain:</p> <pre><code>// Filename: TestRace.as\n// This file was generated using the docs.rigsofrods.org race script generator.\n#include \"base.as\";\n#include \"races.as\";\n\nracesManager races();\n\n\n// GENERAL SECTION 0 START\nint race_0_Simple_Test_Race_ID;\n// GENERAL SECTION 0 END\n\n\n// GENERAL SECTION GENERAL START\n\n// GENERAL SECTION GENERAL END\n\n\nvoid main()\n{\n    races.setCallback('RaceStart', on_RaceStart_event);\n    races.setCallback('PenaltyEvent', on_PenaltyEvent_event);\n    races.showCheckPointInfoWhenNotInRace = true;\n\n    // MAIN SECTION 0 START\n    race_0_Simple_Test_Race_ID = races.addNewEmptyRace();\n    races.setRaceName(race_0_Simple_Test_Race_ID, \"Simple Test Race\");\n    races.setLaps(race_0_Simple_Test_Race_ID, 2);\n    array&lt;array&lt;double&gt;&gt; race_0_coords = {\n        {486.504, 0.0, 512.0, 0.0, 360.0, 0.0},\n        {457.481, 0.0, 500.993, 0.0, 396.3, 0.0},\n        {470.764, 0.0, 464.283, 0.0, 484.1, 0.0},\n        {526.697, 0.0, 482.188, 0.0, 573.8, 0.0},\n        {564.749, 0.0, 465.543, 0.0, 512.7, 0.0},\n        {584.245, 0.0, 496.841, 0.0, 613.8, 0.0},\n        {550.343, 0.0, 511.211, 0.0, 716.8, 0.0}\n    };\n    races.addCheckpoint(race_0_Simple_Test_Race_ID, 0, \"chp-start\", race_0_coords[0]);\n    races.addCheckpoint(race_0_Simple_Test_Race_ID, 1, \"chp-checkpoint\", race_0_coords[1]);\n    races.addCheckpoint(race_0_Simple_Test_Race_ID, 2, \"chp-checkpoint\", race_0_coords[2]);\n    races.addCheckpoint(race_0_Simple_Test_Race_ID, 3, \"chp-checkpoint\", race_0_coords[3]);\n    races.addCheckpoint(race_0_Simple_Test_Race_ID, 4, \"chp-checkpoint\", race_0_coords[4]);\n    races.addCheckpoint(race_0_Simple_Test_Race_ID, 5, \"chp-checkpoint\", race_0_coords[5]);\n    races.addCheckpoint(race_0_Simple_Test_Race_ID, 6, \"chp-checkpoint\", race_0_coords[6]);\n    races.setVersion(race_0_Simple_Test_Race_ID, \"CuriousMike-1.0\");\n    races.setPenaltyTime(race_0_Simple_Test_Race_ID, 10);\n    races.finalize(race_0_Simple_Test_Race_ID);\n    // MAIN SECTION 0 END\n\n\n}\n\nvoid on_RaceStart_event(dictionary@ event)\n{\n    int raceID;\n    event.get('raceID', raceID);\n\n\n    // RACESTART SECTION 0 START\n    if( raceID == race_0_Simple_Test_Race_ID )\n    {\n        races.obligatedFinish = false;\n        races.showTimeDiff = true;\n        races.showBestLap = true;\n        races.showBestRace = true;\n        races.submitScore = true;\n        races.silentMode = false;\n        races.restartRaceOnStart = true;\n    }\n    // RACESTART SECTION 0 END\n\n\n}\n\nvoid on_PenaltyEvent_event(dictionary@ event)\n{\n    int raceID;\n    event.get('raceID', raceID);\n\n\n    // PENALTYEVENT SECTION 0 START\n    // PENALTYEVENT SECTION 0 END\n\n\n}\n\nvoid eventCallback(int eventnum, int value)\n{\n    races.eventCallback(eventnum, value);\n}\n</code></pre>"},{"location":"terrain-creation/race-generator/#adding-script-to-terrain","title":"Adding script to terrain","text":"<p>To add your generated script to the terrain, copy the script (CTRL+A to select all) into a text editor such as Notepad or Notepad++.</p> <p>Save the file with the <code>.as</code> file extension: Make sure to set the file type to \"All files\"!</p> <p></p> <p>Place the file into your terrain's zip, then open the terrain's <code>.terrn2</code> file. </p> <p>At the end of the <code>terrn2</code>, add (or edit) the <code>[Scripts]</code> section:</p> <pre><code>[Scripts]\nTestRace.as=\n</code></pre> <p>Save your changes and place the edited <code>terrn2</code> back into the terrain zip if necessary.</p>"},{"location":"terrain-creation/race-generator/#in-game","title":"In-game","text":"<p>If everything went well, you should now have your race in RoR!</p> <p></p>"},{"location":"terrain-creation/race-generator/#fine-tuning-checkpoint-locations","title":"Fine tuning checkpoint locations","text":"<p>When testing your race, your checkpoints may not be in the correct location or rotated correctly. </p> <p>To adjust your checkpoint positions, use the in-game object editor.</p> <p>Checkpoints are spawned first, so use <code>CTRL+[</code> and <code>CTRL+]</code> keys to scroll through each one.</p> <p></p> <p>Once you're done moving your checkpoints. exit editor mode (<code>CTRL+Y</code>) then exit the game. </p> <p>In <code>editor_out.cfg</code>, the checkpoint locations will be at the top of the file:</p> <pre><code> 486.504,    0.000,  512.000,    0.0,   90.0,    0.0, chp-start\n 457.481,    0.000,  500.993,    0.0,  396.3,    0.0, chp-checkpoint\n 470.764,    0.000,  464.283,    0.0,  484.1,    0.0, chp-checkpoint\n 526.697,    0.000,  482.188,    0.0,  573.8,    0.0, chp-checkpoint\n 577.081,    0.000,  478.170,    0.0,  480.0,    0.0, chp-checkpoint\n 596.938,    0.000,  494.067,    0.0,  718.4,    0.0, chp-checkpoint\n 550.343,    0.000,  511.211,    0.0,   90.0,    0.0, chp-checkpoint\n</code></pre> <p>Edit the lines to match the following format:</p> <pre><code>{486.504,    0.000,  512.000,    0.0,   90.0,    0.0},\n{457.481,    0.000,  500.993,    0.0,  396.3,    0.0},\n{470.764,    0.000,  464.283,    0.0,  484.1,    0.0},\n{526.697,    0.000,  482.188,    0.0,  573.8,    0.0},\n{577.081,    0.000,  478.170,    0.0,  480.0,    0.0},\n{596.938,    0.000,  494.067,    0.0,  718.4,    0.0},\n{550.343,    0.000,  511.211,    0.0,   90.0,    0.0}\n</code></pre> <p>Paste the lines into your race script file, replacing the existing positions:</p> <pre><code>    array&lt;array&lt;double&gt;&gt; race_0_coords = {\n        {486.504,    0.000,  512.000,    0.0,   90.0,    0.0},\n        {457.481,    0.000,  500.993,    0.0,  396.3,    0.0},\n        {470.764,    0.000,  464.283,    0.0,  484.1,    0.0},\n        {526.697,    0.000,  482.188,    0.0,  573.8,    0.0},\n        {577.081,    0.000,  478.170,    0.0,  480.0,    0.0},\n        {596.938,    0.000,  494.067,    0.0,  718.4,    0.0},\n        {550.343,    0.000,  511.211,    0.0,   90.0,    0.0}\n    };\n</code></pre> <p>Save the script and try it in-game. Your checkpoints should now be in the correct place.</p>"},{"location":"terrain-creation/race-generator/#troubleshooting","title":"Troubleshooting","text":"<p>If your race doesn't appear in-game, check your terrain's <code>.terrn2</code> file to make sure the <code>[Scripts]</code> section is correct and that your script is in the terrain zip.</p> <p>Otherwise, your script may have a syntax error. Browse to <code>Documents\\My Games\\Rigs of Rods\\logs</code> and open <code>Angelscript.log</code> with Notepad. Script errors will be shown there. </p> <p>Look at the completed example script above for reference.</p>"},{"location":"terrain-creation/race-generator/#conclusion","title":"Conclusion","text":"<p>Congratulations, you now know the basics of adding races to Rigs of Rods using the race script generator!</p>"},{"location":"terrain-creation/raw-heightmaps/","title":"Heightmap RAW files","text":"<p>Outdated</p> <p>This tutorial is from 2007, written for Blender version 2.43. It remains here as it contains some useful information. </p> <p>A \"heightmap\", or \"elevation map\", is an image or binary file where every pixel/number represents world height at the given point. RoR supports 8-bit or 16-bit unsigned integer RAW heightmaps.</p>"},{"location":"terrain-creation/raw-heightmaps/#making-heightmaps-in-blender","title":"Making heightmaps in Blender","text":"<p>Blender is open source, cross platform, and free.  You can also use it to generate meshes, truck and load files,  someone who uses blender to make trucks is already familiar with the interface and can easily start making terrains.  Plus blender can go into great detail with the terrain surface and allow the user to move individual modes at will.  Blender can also export a 16bit grayscale image, which is required by RoR.</p>"},{"location":"terrain-creation/raw-heightmaps/#requirements","title":"Requirements","text":"<p>Blender with EXR support (v2.43+ maybe earlier) ImageMagick with EXR support (v6.3.4+)</p>"},{"location":"terrain-creation/raw-heightmaps/#setting-up-the-environment","title":"Setting up the Environment","text":"<ul> <li>Start up <code>blender</code>, in Linux use the <code>-w</code> switch to have blender use a managed window.</li> <li>Press the (key|a) key to select all objects (all objects turn pink when selected)</li> <li>Press the (key|x) key and a little dialog pops up under the cursor, click <code>Erase Selected Object(s)</code> to erase all the objects.</li> </ul>"},{"location":"terrain-creation/raw-heightmaps/#add-a-plane","title":"Add a Plane","text":"<ul> <li>Press the (key|numpad 7) key to look at the xy plane.</li> <li>Press the (key|spacebar) and in the menu that appears select <code>''Add''</code>-&gt;<code>''Mesh''</code>-&gt;<code>''Plane''</code></li> </ul> <p>At this point you have a 2x2 BU (blender units) plane centered at 0,0,0 (see above image).  What we want is a 3x3 BU plane centered at 1.5,1.5,0. this isn't needed but it sets up an easy conversion factor of 1BU = 1km.  So when you look at the width on an edge a 0.001BU = 1 meter.</p>"},{"location":"terrain-creation/raw-heightmaps/#scaling-and-moving-the-plane","title":"Scaling and moving the Plane","text":"<ul> <li>make sure you are in <code>Edit Mode</code>().</li> <li>Press the (key|s) key to scale the plane, and hold down the the (key|ctrl) to snap to the grid.</li> <li>In the lower left hand area of the panel you'll see the scale factor, move the cursor until the scale factor is 1.5000.  Holding down the (key|ctrl) key will snap the scale factor to 0.1 units at a time, making 1.5000 easy.</li> <li>Click the left mouse button ((key|lmb)) to make the scale change.</li> <li>Still holding (key|ctrl) click-and-drag the plane using the right mouse button ((key|rmb))  until the lower left hand corner of the plane is at the axis. This is where the red and green lines cross.</li> <li>Left click ((key|lmb)) to move the plane to it's new position.</li> </ul> This is how  you're plane should look at this point:"},{"location":"terrain-creation/raw-heightmaps/#making-the-height-gradient","title":"Making the height Gradient","text":"<p>ok, now it gets trickier.</p>"},{"location":"terrain-creation/raw-heightmaps/#add-a-material","title":"Add a Material","text":"<ul> <li>Open the <code>Material</code> Panel, to do this: ** click on <code>shading</code> ** then the materials button</li> <li>click on the <code>Add New</code> Button to add a new material</li> <li>under the <code>material</code> tab click on <code>Shadeless</code> button</li> </ul>"},{"location":"terrain-creation/raw-heightmaps/#add-a-texture","title":"Add a Texture","text":""},{"location":"terrain-creation/raw-heightmaps/#texture-tab","title":"Texture Tab","text":"<ol><li>Open the <code>Texture</code> Panel <ol><li>click on <code>shading</code> </li><li>then the <code>texture</code> button </li></ol> </li><li>click on the <code>Add New</code> button to add a texture. <ul><li>to change the name of the texture click on <code>Tex.001</code> and type in a new name, in our case <code>height</code>would be appropriate </li></ul> </li><li>Next, select <code>Blend</code> from the <code>Texture Type</code> \"pulldown\" menu. </li></ol>"},{"location":"terrain-creation/raw-heightmaps/#colors-tab","title":"Colors Tab","text":"<ol><li>Go under the color tab and click on the <code>Colorband</code> button. </li><li>There is a Field labeled<code>A</code> with a value of <code>0.000</code>, change the value to <code>1.000</code> </li><li>Select the second color point by clicking on the white vertical band on the right of the colorband. </li><li>change the color of the second colorpoint to white by making the <code>R</code> value <code>1.000</code> </li></ol>"},{"location":"terrain-creation/raw-heightmaps/#mapping-the-texture","title":"Mapping the texture","text":"<ol><li>Now go back to the Materials </li><li>under the Texture Tab make sure there is a check next to the name of the texture you just added. </li><li>go into the <code>Map Input</code> tab </li><li>in the lower left of this tab you'll see the mappings, select Z for all of mappings </li></ol> <p> Cricky this is taking a long time to write!! but at least the texture is done now. </p> <p> </p>"},{"location":"terrain-creation/raw-heightmaps/#making-the-camera","title":"Making the Camera","text":"<ol><li>Go back into <code>Object Mode</code> () </li><li>Under the View menu select <code>View</code> select <code>View Properties</code> </li><li>Under <code>3D Cursor</code> change the <code>x</code>, <code>y</code>, <code>z</code> values to <code>1.50</code>, <code>1.50</code>, <code>5.00</code>. </li><li>press <code>spacebar</code> and select <code>Add</code> -&gt; <code>Camera</code> </li><li>hit (key|f9) or click the <code>editing</code> button to and you'll see a camera tab. </li><li>click the <code>Orthographic</code> button </li><li>change the value of scale to 3.00 </li></ol>"},{"location":"terrain-creation/raw-heightmaps/#setting-up-the-rendering","title":"Setting up the rendering","text":"<ol><li>press <code>f10</code> to enter the scene panel </li><li>below the format tab change <code>SizeX</code>, and <code>SizeY</code> to <code>1025</code> </li><li>under that, there is a menu for the formats, it defaults <code>Jpeg</code>. click on this pulldown and select <code>OpenEXR</code> </li><li>select the <code>BW</code> button below that </li></ol> <p>Phew!! good news is that at this point everything is basically set up! Save this file so you can use it as a starting point for future terrains. </p> <p>For the lazy that just want to skip to this point here is a blender file saved at this point. Media:terntemplate.blend </p>"},{"location":"terrain-creation/raw-heightmaps/#test-render","title":"Test Render","text":"<p>since everything is set up at this point lets do a test render. simply press <code>f12</code> if a window pops up with some stats int he top with a gray image in the middle everything is working as it should.</p>"},{"location":"terrain-creation/raw-heightmaps/#making-terrain","title":"Making Terrain","text":"<ol><li>Make sure you're in <code>Object Mode</code> () </li><li>Right click on the plane you've created to select it </li><li>Switch to <code>Edit Mode</code> () </li><li> Press the <code>w</code> key and select <code>Subdivide Multi</code> from the menu </li><li>The value entered in this box determined how many subdivisions each side is cut up into. 5 is good for demo purposes. you should now have a plane that looks like this: </li><li>rotate you're view by holding down the middle mouse button (<code>mmb</code>) and moving the mouse. move the view to a point where you can easily distinguish all 3 axis. <ul><li>Alternatively, you can rotate the view using the keypad numbers <code>numpad 4</code>, <code>numpad 8</code>, <code>numpad 3</code>, and <code>numpad 2</code> </li></ul> </li><li>Right click on a vertex (these are the pink dots) to select it. </li><li>Then click-and-drag the blue array pointing, this is you're z axis and by doing this you move the selected nodes along that one axis. </li><li>You should end up with a picture similar to this: </li></ol> <p>You now have a (Very) basic hill. </p>"},{"location":"terrain-creation/raw-heightmaps/#generating-the-heightmap","title":"Generating the heightmap","text":""},{"location":"terrain-creation/raw-heightmaps/#render-the-scene","title":"Render the scene","text":"<ol><li>Press <code>f12</code> to bring up the render window: </li><li>Now press <code>f3</code> to bring up the save dialog, save this to a file with the extension of <code>.exr</code>. I saved it to <code>mymap.exr</code> for this tutorial. </li></ol> <p> Instead of saving the image as .exr save it as .jpeg </p>"},{"location":"terrain-creation/raw-heightmaps/#convert-to-raw-format","title":"Convert to raw format","text":"<p>Note: this process can vary depending on the platform. </p> <ol><li>open a command line and navigate to where the saved <code>.exr</code> file is saved. </li><li>execute the following:<pre>convert mymap.exr -depth 16 -size 1025x1025 -endian LSB gray:mymap.raw</pre> </li><li>Setup the <code>.tern</code> and <code>.cfg</code> as described in Terrain Formats. </li></ol> <p>whola! the resulting file is a usable heightmap for RoR. </p> <p>This is the resulting image for the heightmap, your's should look somewhat similar: </p> <p>You don't have to do this if you saved the image as a .jpeg </p><p>you can import this in L3DT as a heightmap and export it as .raw </p><p>Refer to the L3DT tutorial for details on how to size and export </p>"},{"location":"terrain-creation/raw-heightmaps/#where-to-go-from-here","title":"Where to go from here","text":"<p>Well there are all kinds of guides on making terrains, some tools for it too. </p> <p>These are the resources I used to make this tutorial. Creating a Heightmap from a Plane Mountains Out Of Molehills Making Landscapes with heightmaps InnerWorld terrain generator </p> <p>In particular if you want to learn more general blender I highly suggest reading the Blender 3D: Noob to Pro book on wikibook. </p>"},{"location":"terrain-creation/raw-heightmaps/#troubleshooting","title":"Troubleshooting","text":"<p>Heightmap isn't the proper size</p> <p>Make sure the X and Y size of the render is <code>1025x1025</code>.</p>"},{"location":"terrain-creation/scripting/","title":"Terrain Scripting","text":""},{"location":"terrain-creation/scripting/#event-box","title":"Event box","text":"<p>this simple example will create an oil depot that reacts on trucks that drive into it.</p>"},{"location":"terrain-creation/scripting/#prerequisites","title":"Prerequisites","text":"<ul> <li>move nhelens.zip to the  <code>Documents/My Games/Rigs of Rods/mods</code> folder and unpack all its files to a new directory \"nhelens\"</li> <li>remove the old nhelens.zip to prevent collisions</li> <li>Enable \"Debug Collisions\" in your RoR settings ('Settings'&gt;'Diagnostic'&gt;'Debug Collisions') to be able to see the debug visualization for events</li> <li>get an oil-well mesh and a fitting .odef file: http://forumold.rigsofrods.com/index.php?topic=28551.msg355869#msg355869 (Needs a new link)</li> </ul>"},{"location":"terrain-creation/scripting/#defining-the-event-box","title":"Defining the event box","text":"<p>Specified using following keywords:</p> <ul> <li>boxcoords: Size and position of the box, relatively to the position of the object.</li> <li>virtual: specifies that this box is an event box</li> <li>event [event_name] [event_type]:</li> <li>event_name: the name of the box that the script will get when being notified.</li> <li>event_type: valid eventTypes that trigger this: avatar, truck, airplane, delete.</li> </ul> <p>Example:</p> <pre><code>beginbox\nboxcoords 0.0, 20.0, 0.0, 5.0, -4.5, -0.5\nvirtual\nevent trigger truck\nendbox\n</code></pre>"},{"location":"terrain-creation/scripting/#programming-the-angelscript-file","title":"Programming the AngelScript file","text":"<ul> <li>create a file named .terrn.as, so in our case the file should be called <code>a1da0UID-nhelens.terrn.as</code> when the terrain we use is called <code>a1da0UID-nhelens.terrn</code> <pre><code>// Always include the base.as file!\n#include \"base.as\"\n\nstring calledLast=\"\";\n\nvoid main()\n{\n    // spawn an oil-well\n    game.spawnObject(\"oil-well\", \"my-oil-well-1\", vector3(1119.44f, 33.933f, 924.982f), vector3(0, 0, 0), \"myCallBack\", false);\n}\n\nvoid myCallBack(int trigger_type, string inst, string box, int nodeid)\n{\n    if(calledLast == inst) return; // already triggered, discard\n\n    // we log a message to the logfile\n    log(inst + \" event triggered\");\n\n    // We show a message ingame\n    game.flashMessage(inst + \" event triggered\", 3, -1);\n\n    calledLast = inst;\n}\n</code></pre>"},{"location":"terrain-creation/scripting/#test-run","title":"Test-Run","text":"<p>you should see something like this:</p> <p> </p> <p>note: We're only interested in the pink boxes here, as they represent event boxes. Light pink boxes do not call back an AngelScript function, while dark pink boxes do call back an AngelScript function when triggered (~when you drive into them).</p> <p>if you do not see an oil loader, check the AngelScript.log file for errors. With no errors the log could read like this:</p> <pre><code> ScriptEngine initialized\n ScriptEngine (SE) initializing ...\n Type registrations done. If you see no error above everything should be working\n ScriptEngine running\n saving script bytecode to file script_a1da0UID-nhelens.terrn.asc\n Executing main()\n The script finished successfully.\n</code></pre>"},{"location":"terrain-creation/scripting/#result","title":"Result","text":"<p>What happens if you drive a truck into the pink event box: </p> <p></p> <p>look at your AngelScript.log (on Windows, it's located under Documents\\My Games\\Rigs of Rods\\logs):</p> <pre><code>02:55:05: SE| my-oil-well-1 event triggered\n</code></pre>"},{"location":"terrain-creation/scripting/#whats-next","title":"Whats next","text":"<p>you could:</p> <ul> <li>check if the correct oil tanker trailer is in the spawn box</li> <li>direct the user to the oil unloading station after \"loading the oil\" (sleeping) for some time</li> <li>increase the node weight of a certain node inside of the tanker trailer to simulate the loaded oil.</li> </ul>"},{"location":"terrain-creation/scripting/#advanced-examples","title":"Advanced Examples","text":"<p>for example this script will create two oil rigs and will redirect the user to collect and drop oil between them:</p> <pre><code>#include \"base.as\"\n\nfloat timer = 0;\nint timerSet = 0;\n\nint state = 0;\n\nvector3 pos_oil1(1099, 33.933, 924.982);\nvector3 pos_oil2(1030, 33.4509, 1125.37);\n\nvoid main()\n{\n    // spawn some oil-wells\n    game.spawnObject(\"oil-well\", \"my-oil-well-1\", pos_oil1, vector3(0, 0, 0), \"callBackOilWellOne\", false);\n    game.spawnObject(\"oil-well\", \"my-oil-well-2\", pos_oil2, vector3(0, 0, 0), \"callBackOilWellTwo\", false);\n}\n\nvoid frameStep(float dt)\n{\n    // count down the timer\n    if(timer &gt; 0)\n        timer -= dt;\n}\n\nvoid callBackOilWellOne(int trigger_type, string inst, string box, int nodeid)\n{\n    //if(trigger_type != 1)  return; // we only want to trigger on events where the full truck is in the event box (doesn't work at the moment)\n    if(state != 0) return; // only process this if state is valid\n\n    if(timerSet == 0)\n    {\n        // set timer\n        timerSet = 1;\n        timer = 5;\n        game.flashMessage(\"Loading oil ...\", timer, -1);\n        return;\n    }\n\n    if(timerSet == 1 &amp;&amp; timer &lt; 0)\n    {\n        // timer ran out, do something\n        game.setDirectionArrow(\"unload oil\", pos_oil2);\n        state = 1;\n        timerSet=0;\n    }\n}\n\nvoid callBackOilWellTwo(int trigger_type, string inst, string box, int nodeid)\n{\n    //if(trigger_type != 1)  return; // we only want to trigger on events where the full truck is in the event box (doesn't work at the moment)\n    if(state != 1) return; // only process this if state is valid\n\n    if(timerSet == 0)\n    {\n        // set timer\n        timerSet = 1;\n        timer = 5;\n        game.flashMessage(\"Unloading oil ...\", timer, -1);\n        return;\n    }\n\n    if(timerSet == 1 &amp;&amp; timer &lt; 0)\n    {\n        // timer ran out, do something\n        game.setDirectionArrow(\"load some new oil\", pos_oil1);\n        state = 0;\n        timerSet=0;\n    }\n}\n</code></pre>"},{"location":"terrain-creation/scripting/#adding-a-race-to-a-terrain","title":"Adding a race to a terrain","text":"<p>In this tutorial, we will add a race to our terrain.</p>"},{"location":"terrain-creation/scripting/#how-do-races-work","title":"How do races work?","text":"<p>In Rigs of Rods, races are added using a script file. The race that we will create in this tutorial will exist out of multiple checkpoints. The objective of the race is to get from the first till the last checkpoint as fast as possible.</p> <p>We will discuss 2 methods to add a race to your terrain:</p> <ol> <li>Using a race script generator (fast method);</li> <li>Manually creating the script (advanced method).</li> </ol>"},{"location":"terrain-creation/scripting/#adding-a-race-fast-method","title":"Adding a race (fast method)","text":"<p>You can find a race script generator here.</p> <p>The checkpoints can be added by specifying the position (x,y,z), rotation (x,y,z) and an object for every checkpoint. This is similar to the old .terrn file syntax, but be aware: do NOT add the checkpoint objects to the terrain using the old .terrn file. The objects will already be spawned by the script.</p> <p>A checkpoint object is like every other object, but has beside a visible mesh also a virtual event box. The checkpoint will be marked as passed as soon as you drive through the virtual event box.</p> <p>If you wish, you can also use the default objects, which are available by default in every Rigs of Rods installation. To use these, use objectname \"chp-start\" for the start and finish line and \"chp-checkpoint\" for the normal checkpoints. The race script generator will use these objects if you don't specify other objects.</p> <p>After generating your race, you'll need to copy the script and put it in a new file in your terrain archive. The name of this file should be <code>terrainFileName.terrn.as</code>. For example, for North Saint Helens, this would become: <code>a1da0UID-nhelens.terrn.as</code> because the terrain file name of North Saint Helens is <code>a1da0UID-nhelens.terrn</code>, and we just need to add <code>.as</code> to that.</p>"},{"location":"terrain-creation/scripting/#adding-a-race-advanced-method","title":"Adding a race (advanced method)","text":"<p>The easiest way to explain this method is by looking at some examples.</p>"},{"location":"terrain-creation/scripting/#north-saint-helens","title":"North Saint Helens","text":"<p>This example script is usable to add a race to the North Saint Helens terrain (a1da0UID-nhelens.terrn).</p> <p>Every line that starts with '//' is information that explains the line(s) beneath it.</p> <p>File: a1da0UID-nhelens.terrn.as</p> <pre><code>// The following line is required in every script, in order to ensure that\n// the spawnpoints keep working. It includes the script inside the file \"base.as\" here.\n\n#include \"base.as\"\n\n// We want to add a race, so we will need the race script.\n\n#include \"races.as\"\n\n// We need to initialize the race script.\n\nracesManager races();\n\n// Here we start the main function. \n// A function called 'main' will get called as soon as the terrain has completed loading. \n// So inside this function is a perfect spot to tell the game about our races. \n\nvoid main() {\n\n   // We change an option of the races script\n   //    Because of the scattered nature of this race, we want to make sure that\n   //    the user finds his way to the start line of the race.\n   //    So, by setting this option to 'true', we make sure that when the user\n   //    passes a checkpoint when not in a race, the user will still get a\n   //    message informing the user about the race.\n   races.showCheckPointInfoWhenNotInRace = true;\n\n   // For the game to recognize the race, it needs to know where the checkpoints are,\n   //    so we define them in an Array.\n   //    Every line with numbers defines a checkpoint.\n   //    The numbers on a line are from left to right: position X, Y, Z, rotation X, Y, Z\n   //    (with position in meters and rotation in degrees)\n   //    So they're coordinates to uniquely define the location and rotation of an\n   //    object in a three dimensional space.\n   array&lt;array&lt;double&gt;&gt; coordinates = \n       {\n           // { pos X  ,  pos Y   ,   pos Z     ,  rot X  ,   rot Y   ,  rot Z  }\n           {1145.762451, 43.409168,  1874.828247, 0.000000, -20.000000, 0.000000},\n           {1223.362061, 66.093338,  2128.568359, 0.000000, 30.000000,  0.000000},\n           {1493.947388, 90.977753,  2490.836426, 0.000000, 55.000000,  0.000000},\n           {1854.234497, 141.551270, 2732.894287, 0.000000, 65.000000,  0.000000},\n           {2157.161865, 130.438171, 2720.815430, 0.000000, 90.000000,  0.000000},\n           {2422.710693, 110.228294, 2523.404785, 0.000000, 140.000000, 0.000000},\n           {2607.359619, 107.782913, 2203.569824, 0.000000, 165.000000, 0.000000},\n           {2534.100342, 107.596176, 1938.718140, 0.000000, 205.000000, 0.000000},\n           {2269.411377, 134.870911, 1729.099121, 0.000000, 265.000000, 0.000000},\n           {1974.688110, 104.931290, 1732.083618, 0.000000, 245.000000, 0.000000},\n           {1865.982056, 101.138504, 1618.693237, 0.000000, 245.000000, 0.000000},\n           {1706.379395, 148.594437, 1533.436157, 0.000000, 255.000000, 0.000000},\n           {1470.152100, 120.901085, 1504.998291, 0.000000, 310.000000, 0.000000},\n           // Note: No comma after the last checkpoint.\n           {1238.410767, 47.336208,  1735.698242, 0.000000, 325.000000, 0.000000}\n       };\n\n   // Now we add the race with name 'Rigbreaker'.\n   // The last parameter is number of laps.\n   // * This race has 1 lap.\n   // * You can use 'races.LAPS_NoLaps' to have no laps \n   //       (~the race start point is not the same checkpoint as the race finish point).\n   // * You can also use 'races.LAPS_Unlimited' to have a never ending race (~unlimited amount of laps)\n   races.addRace(\"Rigbreaker\", coordinates, 1);\n\n} // end of the main function\n\n// The default RoR event callback\n// This procedure will get called by Rigs of Rods on certain occasions,\n// decided by the race script. \nvoid eventCallback(int eventnum, int value) {\n\n   // It's not obligated to add this, but it's a good habit.\n   races.eventCallback(eventnum, value);\n\n}\n\n// end of the script. \n</code></pre>"},{"location":"terrain-creation/scripting/#island","title":"Island","text":"<p>This example script is usable to add a race to the Island terrain (496aUID-island.terrn).</p> <p>File: 496aUID-island.terrn.as</p> <pre><code>#include \"base.as\"\n#include \"races.as\"\n\nracesManager races();\n\n// The default RoR main function \nvoid main() {\n\n   array&lt;array&lt;double&gt;&gt; coordinates = {\n       {791.551, 87.6567, 1558.25, 0.0,  35.3333, 0.0},\n       {970.905, 119.2  , 1421.01, 0.0, -93.6470, 0.0},\n       {1350.28, 157.644, 1375.19, 0.0, -44.4060, 0.0},\n       {1506.18, 180.185, 1309.12, 0.0,  29.4644, 0.0},\n       {1306.9 , 209.358, 1250.37, 0.0,  70.3679, 0.0},\n       {940.346, 236.788, 926.603, 0.0,  16.9539, 0.0}\n   };\n   races.addRace(\"To The Top\", coordinates, races.LAPS_NoLaps);\n}\n\n// The default RoR event callback\nvoid eventCallback(int eventnum, int value) {\n\n   races.eventCallback(eventnum, value);\n\n}\n</code></pre>"},{"location":"terrain-creation/scripting/#bajarama","title":"Bajarama","text":"<p>This example script shows a race with an unlimited amount of laps (a never ending race). It is usable with the Bajarama terrain (8c07UID-bajarama.terrn).</p> <p>File: 8c07UID-bajarama.terrn.as </p> <pre><code>#include \"base.as\"\n#include \"races.as\"\n\nracesManager races();\n\nvoid main() {\n\n   array&lt;array&lt;double&gt;&gt; coords1 = {\n       {179.088196,     1.351834,   203.319107,    -0.000006,    75.500044,    -0.849956},\n       {56.070511,      1.247547,   119.811401,     0.000001,   109.500097,     1.700087},\n       {88.742783,      2.674362,   332.812042,     0.000071,   127.500016,    -7.299959},\n       {157.537796,     1.121414,   478.227203,     0.595164,   -29.497634,    -0.456070},\n       {202.784286,     1.830205,   240.792023,     0.446688,   -87.490632,    -2.408985},\n       {326.742004,     1.115725,   436.851685,     0.000000,     0.000003,    -0.200001},\n       {360.338379,     1.100020,   102.170441,     0.000033,  -140.500010,    -0.700087},\n       {482.216766,     1.089854,   430.449249,     0.000000,     0.000000,    -0.500001},\n       {478.902618,     1.325789,    90.371094,     0.000000,    -0.000014,     0.000000},\n       {92.562027,      1.122820,    86.679283,     0.000002,   -91.000017,     0.000002},\n       {264.193359,     1.481601,   121.791405,     0.000000,  -179.999991,    -0.700000}\n   };\n   //                           race name coordinates   #laps          checkpoint object     startline object\n   int raceID = races.addRace(\"Bajarama\", coords1, races.LAPS_Unlimited, \"new-checkpoint\", \"new-checkpoint-start\");\n\n}\n\n// The default RoR event callback\nvoid eventCallback(int eventnum, int value) {\n\n   races.eventCallback(eventnum, value);\n\n}\n</code></pre>"},{"location":"terrain-creation/scripting/#flat-map-v101","title":"Flat Map (v10.1)","text":"<p>This example script illustrates how to add multiple races to one terrain and is usable for the Flat Map terrain (f4afUID-flat_map_full32xa.terrn).</p> <p>File: f4afUID-flat_map_full32xa.terrn.as</p> <pre><code>#include \"base.as\"\n\n#include \"races.as\"\n\nracesManager races();\n\nvoid main() {\n\n    // We add 4 races to the map\n    // RACE 1: Dirt drag race - right side\n    array`&lt;array&lt;double&gt;`&gt; coords1 = {\n        {2293.272705, 0.0, 2035.251465, 0.0, 0.0, 0.0},\n        {2293.272705, 0.0, 1484.145752, 0.0, 0.0, 0.0}\n    };\n    //                              race name           coordinates   #laps\n    int raceID = races.addRace(\"Dirt DragRace - Right Side\", coords1, races.LAPS_NoLaps);\n    // race 1 added and working\n\n    // RACE 2: Dirt drag race - left side\n    array`&lt;array&lt;double&gt;`&gt; coords2 = {\n        {2268.944580, 0.0, 2035.251465, 0.0, 0.0, 0.0},\n        {2268.944580, 0.0, 1484.145752, 0.0, 0.0, 0.0}\n    };\n    //                              race name           coordinates   #laps\n    int raceID = races.addRace(\"Dirt DragRace - Left Side\", coords2, races.LAPS_NoLaps);\n    // race 2 added and working\n\n    // RACE 3: Runway drag race - left side\n    array`&lt;array&lt;double&gt;`&gt; coords3 = {\n        {2327.494141, 1.0, 1388.388794, 0.0, 0.0, 0.0},\n        {2327.494141, 1.0, 932.558044 , 0.0, 0.0, 0.0}\n    };\n    //                              race name           coordinates   #laps\n    int raceID = races.addRace(\"Runway DragRace - Left Side\", coords3, races.LAPS_NoLaps);\n    // race 3 added and working\n\n    // RACE 4: Runway drag race - right side\n    array`&lt;array&lt;double&gt;`&gt; coords4 = {\n        {2343.309814, 1.0, 1388.388794, 0.0, 0.0, 0.0},\n        {2343.309814, 1.0, 932.558044 , 0.0, 0.0, 0.0}\n    };\n    //                              race name           coordinates   #laps\n    int raceID = races.addRace(\"Runway DragRace - Right Side\", coords4, races.LAPS_NoLaps);\n    // race 4 added and working\n\n}\n\n// The default RoR event callback \n\nvoid eventCallback(int eventnum, int value) {\n\n    races.eventCallback(eventnum, value);\n\n}\n</code></pre>"},{"location":"terrain-creation/scripting/#f1-test-track","title":"F1 Test Track","text":"<p>This example script illustrates how to use custom checkpoint objects and multiple races on one terrain. The script can be used with the F1 Test Track terrain (2af11UID-f1_testtrack.terrn).</p> <p>File: 2af11UID-f1_testtrack.terrn.as </p> <pre><code>#include \"base.as\"\n\n#include \"races.as\"\n\nracesManager races();\n\n// The default RoR main function \nvoid main() {\n\n    // We add 5 races to the map\n\n    // RACE 1\n    array&lt;array&lt;double&gt;&gt; coords1 = {\n            { 882.132996,    0.120613,  1324.317139,    0.0,    90.0,    0.0},\n            { 658.905884,    0.076029,  1324.323730,    0.0,    90.0,    0.0},\n            { 575.903259,    0.062041,  1231.623169,    0.0,     0.0,    0.0},\n            { 565.184814,    0.063519,  1037.515503,    0.0,    22.0,    0.0},\n            { 313.121979,    0.079952,   822.904663,    0.0,     5.0,    0.0},\n            { 385.599213,    0.071390,   722.493469,    0.0,   -90.0,    0.0},\n            { 770.934998,    0.012638,   761.321411,    0.0,   -90.5,    0.0},\n            {1055.889404,    0.078151,   664.507324,    0.0,   -89.0,    0.0},\n            {1388.452026,    0.030632,   663.976257,    0.0,    92.0,    0.0},\n            {1457.364014,    0.041678,   783.509460,    0.0,   168.0,    0.0},\n            {1493.774048,    0.104160,  1309.505859,    0.0,    18.5,    0.0},\n            {1348.787964,    0.099335,  1324.566406,    0.0,    90.0,    0.0},\n            { 909.298462,    0.044833,  1324.610596,    0.0,    88.5,    0.0}\n        };\n    //                              race name    coordinates   #laps         checkpoint object     startline object        finishline object\n    int raceID = races.addRace(\"Grand Prix long\", coords1, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\");\n    // race 1 added and working\n\n    // RACE 2\n    array&lt;array&lt;double&gt;&gt; coords2 = \n        {\n            {1176.429688,    0.063195,  1254.195313,    -0.0,    90.0,    0.0},\n            { 693.874573,    0.090642,  1251.470825,    -0.0,    90.0,    0.0},\n            { 693.383728,    0.071324,  1182.933594,    -0.0,   -90.0,    0.0},\n            { 844.552612,    0.095163,  1168.225586,    -0.0,   -90.0,    0.0},\n            { 941.776978,    0.052285,  1183.067139,    -0.0,   -90.0,    0.0},\n            {1079.778198,    0.096842,  1183.057373,    -0.0,   -90.0,    0.0},\n            {1177.627563,    0.067999,  1125.772461,    -0.0,   -40.0,    0.0},\n            {1282.897095,    0.938393,  1045.571899,     0.0,   -90.0,    0.0},\n            {1395.055054,    0.107390,  1148.677734,    -0.0,     0.0,    0.0},\n            {1290.430908,    0.098327,  1254.477905,     0.0,    90.0,    0.0}\n        };\n    //                          race name    coordinates   #laps         checkpoint object     startline object        finishline object\n    raceID = races.addRace(\"Grand Prix short\", coords2, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\");\n    // race 2 added and working\n\n    // RACE 3\n    array&lt;array&lt;double&gt;&gt; coords3 =\n        {\n            {1117.230103,     0.067576,   700.704956,    0.0,   -90.0,    0.0},\n            {1136.480469,     0.072812,  1030.468628,    0.0,    90.0,    0.0},\n            {1101.686768,     0.032589,   701.005127,    0.0,   -90.0,    0.0}\n        };\n    //                       race name    coordinates   #laps         checkpoint object     startline object        finishline object\n    raceID = races.addRace(\"oval race\", coords3, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\");\n    // race 3 added and working\n\n    // RACE 4\n    array&lt;array&lt;double&gt;&gt; coords4 = \n        {\n            {1187.875977,     0.0,       1220.567383,    0.0,    90.0,    0.0},\n            { 784.379578,     0.0,       1221.171143,    0.0,   -90.0,    0.0}\n        };\n    //             race name    coordinates   #laps         checkpoint object     startline object        finishline object       race version\n    raceID = races.addRace(\"drag race\", coords4, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\");\n    // race 4 added and working\n\n    // RACE 5\n    double[][] coords5 = \n        {\n            //   x        z          y      3d rot    rot     3d rot\n            { 807.868, 5.09987,   1114.47,    0.0,   -90.0,    0.0},\n            { 724.386, 0.0994606, 1084.16,    0.0,     0.0,    0.0},\n            { 718.647, 0.0998037, 1038.22,    0.0,    45.0,    0.0},\n            { 696.235, 0.0989883,  992.215,   0.0,   -25.0,    0.0},\n            { 754.302, 0.098882,   999.441,   0.0,     0.0,    0.0},\n            { 763.464, 0.0987995, 1049.56,    0.0,    45.0,    0.0},\n            { 831.675, 5.01375,   1058.26,    0.0,    90.0,    0.0},\n            { 919.557, 0.0995347, 1083.47,    0.0,     0.0,    0.0},\n            { 884.884, 0.0987005, 1121.12,    0.0,   -90.0,    0.0}\n        };\n    //                   race name   coordinates   #laps (no checkpoint objects are specified here, so the default RoR ones will be used)\n    raceID = races.addRace(\"mud race\", coords5, 3);\n    // race 5 added and working\n\n}\n\n// The default RoR event callback \nvoid eventCallback(int eventnum, int value) {\n\n    races.eventCallback(eventnum, value);\n\n}\n</code></pre>"},{"location":"terrain-creation/scripting/#f1-test-track-with-penalty-events","title":"F1 Test Track (with penalty events)","text":"<p>We can also penalty events if the player hits a specific part of the checkpoint.</p> <p>For this race, we've edited the 2af11UID-new-checkpoint.odef file  from f1track_improved.zip  to have penalty event boxes: </p> <p><pre><code>2af11UID-new-checkpoint.mesh 1, 1, 1\n\nbeginbox boxcoords -7.5, 6.95, -4.0, 5.2, -0.5, 0.5 virtual event checkpoint truck endbox\n\nbeginbox boxcoords -8.6, -7.65, 0.0, 0.55, -0.65, 0.0 virtual event race_penalty truck endbox\n\nbeginbox boxcoords 8.05, 7.1, 0.0, 0.55, -0.65, 0.0 virtual event race_penalty truck endbox\n\nend\n</code></pre> So the checkpoint looks like this (in debug mode): [image to be added here]</p> <p>As you can see, there are 2 small event boxes that will trigger the penalty event. The penalty event will, when triggered, add an amount of seconds to the lap time. How many seconds can be configured using the races.setPenaltyTime(int raceID, int seconds) method or you can just change it using the PenaltyEvent callback function.</p> <p>We'll also need this PenaltyEvent callback function when we want to show a message if a penalty event was triggered. For this we'll need to:</p> <ol> <li>Define the callback function ('on_penaltyEvent' in the script below)</li> <li>Tell the races script about this callback function ('races.setCallback(\"PenaltyEvent\", on_penaltyEvent);')</li> </ol> <p>This is all done in the following script. Pay attention to every difference with the script above.</p> <pre><code>#include \"base.as\"\n#include \"races.as\"\n\nracesManager races();\n\n// The default RoR main function \n\nvoid main() {\n\n    // the penalty event shows no message by default, so we'll have to show a message ourself. \n    races.setCallback(\"PenaltyEvent\", on_penaltyEvent); \n\n    // We add 5 races to the map \n    // RACE 1 \n    array &lt;array&lt;double&gt; &gt; coords1 = { \n            { 882.132996,    0.120613,  1324.317139,    0.0,    90.0,    0.0}, \n            { 658.905884,    0.076029,  1324.323730,    0.0,    90.0,    0.0}, \n            { 575.903259,    0.062041,  1231.623169,    0.0,     0.0,    0.0}, \n            { 565.184814,    0.063519,  1037.515503,    0.0,    22.0,    0.0}, \n            { 313.121979,    0.079952,   822.904663,    0.0,     5.0,    0.0}, \n            { 385.599213,    0.071390,   722.493469,    0.0,   -90.0,    0.0}, \n            { 770.934998,    0.012638,   761.321411,    0.0,   -90.5,    0.0}, \n            {1055.889404,    0.078151,   664.507324,    0.0,   -89.0,    0.0}, \n            {1388.452026,    0.030632,   663.976257,    0.0,    92.0,    0.0}, \n            {1457.364014,    0.041678,   783.509460,    0.0,   168.0,    0.0}, \n            {1493.774048,    0.104160,  1309.505859,    0.0,    18.5,    0.0}, \n            {1348.787964,    0.099335,  1324.566406,    0.0,    90.0,    0.0}, \n            { 909.298462,    0.044833,  1324.610596,    0.0,    88.5,    0.0} \n        }; \n    //                              race name    coordinates   #laps         checkpoint object     startline object        finishline object \n    int raceID = races.addRace(\"Grand Prix long\", coords1, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\"); \n    races.setPenaltyTime(raceID, 10); //  &lt;- this sets the default penalty time (in seconds) for this race when a race_penalty event occurs.\n    // race 1 added and working\n\n\n    // RACE 2\n    array&lt;array&lt;double&gt; &gt; coords2 =  \n        { \n            {1176.429688,    0.063195,  1254.195313,    -0.0,    90.0,    0.0}, \n            { 693.874573,    0.090642,  1251.470825,    -0.0,    90.0,    0.0}, \n            { 693.383728,    0.071324,  1182.933594,    -0.0,   -90.0,    0.0}, \n            { 844.552612,    0.095163,  1168.225586,    -0.0,   -90.0,    0.0}, \n            { 941.776978,    0.052285,  1183.067139,    -0.0,   -90.0,    0.0}, \n            {1079.778198,    0.096842,  1183.057373,    -0.0,   -90.0,    0.0}, \n            {1177.627563,    0.067999,  1125.772461,    -0.0,   -40.0,    0.0}, \n            {1282.897095,    0.938393,  1045.571899,     0.0,   -90.0,    0.0}, \n            {1395.055054,    0.107390,  1148.677734,    -0.0,     0.0,    0.0}, \n            {1290.430908,    0.098327,  1254.477905,     0.0,    90.0,    0.0} \n        }; \n    //                          race name    coordinates   #laps         checkpoint object     startline object        finishline object \n    raceID = races.addRace(\"Grand Prix short\", coords2, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\"); \n    races.setPenaltyTime(raceID, 10); //  &lt;- this sets the default penalty time (in seconds) for this race when a race_penalty event occurs.\n    // race 2 added and working\n\n\n    // RACE 3\n    array&lt;array&lt;double&gt; &gt; coords3 =  \n        { \n            {1117.230103,     0.067576,   700.704956,    0.0,   -90.0,    0.0}, \n            {1136.480469,     0.072812,  1030.468628,    0.0,    90.0,    0.0}, \n            {1101.686768,     0.032589,   701.005127,    0.0,   -90.0,    0.0} \n        }; \n    //                       race name    coordinates   #laps         checkpoint object     startline object        finishline object \n    raceID = races.addRace(\"oval race\", coords3, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\"); \n    races.setPenaltyTime(raceID, 10); //  &lt;- this sets the default penalty time (in seconds) for this race when a race_penalty event occurs.\n    // race 3 added and working\n\n\n    // RACE 4\n    array&lt;array&lt;double&gt; &gt; coords4 =  \n        { \n            {1187.875977,     0.0,       1220.567383,    0.0,    90.0,    0.0}, \n            { 784.379578,     0.0,       1221.171143,    0.0,   -90.0,    0.0} \n        }; \n    //             race name    coordinates   #laps         checkpoint object     startline object        finishline object       race version \n    raceID = races.addRace(\"drag race\", coords4, races.LAPS_NoLaps, \"new-checkpoint\", \"new-checkpoint-start\", \"new-checkpoint-start\"); \n    races.setPenaltyTime(raceID, 10); //  &lt;- this sets the default penalty time (in seconds) for this race when a race_penalty event occurs.\n    // race 4 added and working\n\n\n    // RACE 5\n    double[][] coords5 = \n        {\n            //   x        z          y      3d rot    rot     3d rot\n            { 807.868, 5.09987,   1114.47,    0.0,   -90.0,    0.0},\n            { 724.386, 0.0994606, 1084.16,    0.0,     0.0,    0.0},\n            { 718.647, 0.0998037, 1038.22,    0.0,    45.0,    0.0},\n            { 696.235, 0.0989883,  992.215,   0.0,   -25.0,    0.0},\n            { 754.302, 0.098882,   999.441,   0.0,     0.0,    0.0},\n            { 763.464, 0.0987995, 1049.56,    0.0,    45.0,    0.0},\n            { 831.675, 5.01375,   1058.26,    0.0,    90.0,    0.0},\n            { 919.557, 0.0995347, 1083.47,    0.0,     0.0,    0.0},\n            { 884.884, 0.0987005, 1121.12,    0.0,   -90.0,    0.0}\n        };\n    //                   race name   coordinates   #laps (no checkpoint objects are specified here, so the default RoR ones will be used)\n    raceID = races.addRace(\"mud race\", coords5, 3);\n    // race 5 added and working\n}\n\n// The default RoR event callback\nvoid eventCallback(int eventnum, int value)\n{\n    races.eventCallback(eventnum, value);\n}\n\nvoid on_penaltyEvent(dictionary@ info)\n{\n    // this method gets called every time a race_penalty event occurs.\n\n    // We can also change the penalty time here:\n    info.set(\"penaltyTime\", 10);\n    // But the penalty time was already set to 10 seconds, because we had set it to 10 in the main() function.\n    // So now we've set it twice to 10 seconds, which is quite pointless...\n\n    // Just show a message to inform the user about the penalty\n    races.message(\"PENALTY\", \"lightning.png\");\n}\n</code></pre> <p>Notes:</p> <ol> <li>We've only used the 'race_penalty' event here, but you can also use the 'race_abort' event, which will abort the race when the event box is triggered.</li> <li>Another way to add penalty seconds is using the races.addPenaltySeconds(int seconds) method.</li> <li>You can also register callback functions for other events: https://developer.rigsofrods.org/d9/dce/class_script2_script_1_1races_manager.html</li> </ol>"},{"location":"terrain-creation/scripting/#more-advanced-functionality","title":"More Advanced Functionality","text":""},{"location":"terrain-creation/scripting/#documentation-and-questions","title":"Documentation and questions","text":"<p>See reference manual. Studying the script files of other terrains may also greatly help you.</p> <p>In case of questions/suggestions/complains, get in touch in the forums.</p>"},{"location":"terrain-creation/scripting/#example-extending-racesmanager","title":"Example: Extending RacesManager","text":"<p>Here's an example where we inherit from the racesManager class and add functionality. (In this case, we limit the allowed vehicles, so the race won't start if certain vehicles aren't used). You can test this script by adding it to the North Saint Helens terrain.</p> <pre><code>#include \"base.as\";\n#include \"races.as\";\n\nracesManagerWithVehicleLimit races();\n\nvoid main() {\n\n    // Add the race like usual  \n    array &lt; array&lt;double&gt;  &gt; coords1 = {  \n        {1140.259644, 34.136135, 920.070313, 0.0, 0.0, 0.0},  \n        {1140.259644, 34.136135, 950.070313, 0.0, 0.0, 0.0}  \n    };  \n    int raceID_testRace = races.addRace(\"testRace\", coords1, races.LAPS_NoLaps);  \n\n    // Add some vehicles (when you don't add any vehicles, then all vehicles will be allowed)  \n    races.addVehicle(raceID_testRace, \"Bus RVI agora S\");  \n    races.addVehicle(raceID_testRace, \"Bus RVI agora L\");  \n\n}\n\n// Other stuff (No race specific stuff under this line)\n\nclass racesManagerWithVehicleLimit : racesManager {\n\n    dictionary vehicleData;  \n    double lastMessageTime;  \n\n    racesManagerWithVehicleLimit()  \n    {  \n        super();  \n        lastMessageTime = 0.0;  \n    }  \n\n    // extend this method  \n    void startRace(int raceID) /*override*/  \n    {  \n        bool allow = true;  \n\n        // Do we have vehicle data for this race?  \n        array &lt;string&gt; @ vehicles = null;  \n        if(vehicleData.get(\"race_\"+raceID, @vehicles))  \n        {  \n            // Get the name of the current truck  \n            string truckName = \"avatar\";  \n            BeamClass@ truck = game.getCurrentTruck();  \n            if(truck !is null)  \n                truckName = truck.getTruckName();  \n\n            if(vehicles.find(truckName) &lt;0) \n                allow = false; \n        } \n\n        if(allow) \n            racesManager::startRace(raceID); \n        else  \n        { \n            // Avoid message spam (in exceptional cases) \n            if((game.getTime()-this.lastMessageTime)&gt; 5.0)  \n            {  \n                this.lastMessageTime = game.getTime();  \n\n                this.message(\"Race \"+this.raceList[raceID].raceName+\" can only be started with one of the following vehicles:\", \"information.png\");  \n                this.message(arrayToString(vehicles), \"information.png\");  \n            }  \n        }  \n    }  \n\n    void addVehicle(int raceID, string vehicleName)  \n    {  \n        array &lt;string&gt; @ vehicles = null;  \n        if(!vehicleData.get(\"race_\"+raceID, @vehicles))  \n        {  \n            array &lt;string&gt;  vehicles2 = {};  \n            @vehicles = @vehicles2;  \n            vehicleData.set(\"race_\"+raceID, @vehicles);  \n        }  \n\n        vehicles.insertLast(vehicleName);  \n    }  \n\n}\n\nstring arrayToString(array&lt;string&gt;@ arr) {\n\n    string result = \"\";  \n    if(arr !is null) for(uint i=0; i&lt;arr.length(); ++i)  \n    {  \n        result += arr[i];  \n        if(i!=arr.length()-1) result += \", \";  \n    }  \n    return result;  \n\n}\n</code></pre>"},{"location":"terrain-creation/scripting/#troubleshooting","title":"Troubleshooting","text":"<p>If your race doesn't work, feel free to post your terrain file in this forum, and we may have a look at it. https://forum.rigsofrods.org/forums/content-support.10/</p>"},{"location":"terrain-creation/shadows/","title":"Shadows","text":"<p>As of version 0.4.5.0, Rigs of Rods uses the PSSM (Parallel-split Shadow Maps) shadows technique. </p> <p>Shadow textures are split into 3 different textures with different resolutions and sizes. </p> <p>The closest one to the camera is the smallest and has the biggest resolution.  The second and the thirds are sometimes equal in resolution but not in size. </p> <p>Shadow details progressively degrade as soon as you get into the 2<sup>nd</sup> and 3<sup>rd</sup> split.</p>"},{"location":"terrain-creation/shadows/#how-to-make-your-models-receive-shadows","title":"How to make your models receive shadows","text":""},{"location":"terrain-creation/shadows/#objects","title":"Objects","text":"<p>On the 1<sup>st</sup> line of the material file, put this line of code: <pre><code>import * from \"managed_mats.material\"\n</code></pre></p> <p>If you want to go simple, you can do it this way: <pre><code>material material_name_here: RoR/Managed_Mats/Base\n{\n    set_texture_alias diffuse_tex texture_name_here.dds\n}\n</code></pre> Do not forget to add the <code>: RoR/Managed_Mats/Base</code> after the material's name.</p> <p>Or for more control over the material file, you can do it this way:</p> <p><pre><code>material material_name_here: RoR/Managed_Mats/Base\n{\n    technique BaseTechnique\n    {\n        pass BaseRender\n        {\n            //Ambient, diffuse, emissive stuff here\n\n            texture_unit Diffuse_Map\n            {\n                texture texture_name_here.dds\n            }\n        }\n    }\n}\n</code></pre> Notice here that in addition to the <code>: RoR/Managed_Mats/Base</code>, the technique has a defined name <code>BaseTechnique</code>, the pass has a defined name <code>BaseRender</code>, and the texture has a defined name <code>Diffuse_Map</code>.</p> <p>As soon as you put all these three, you will get working shadows with a detailed material file. You can still add as many techniques/passes as you want but do not use the same names again, you can simply not name them.</p>"},{"location":"terrain-creation/shadows/#vehicles","title":"Vehicles","text":"<p>Shadows no longer cast onto vehicles as of version 2022.12+  due to graphical glitches.</p>"},{"location":"terrain-creation/shadows/#misc","title":"Misc","text":"<p>Other than the <code>RoR/Managed_Mats/Base</code> inheritance, you can use all these for each type of texture/model used.</p> <pre><code>RoR/Managed_Mats/Base\nRoR/Managed_Mats/BaseNoShadows\nRoR/Managed_Mats/BaseSpecular\nRoR/Managed_Mats/Vegetation\nRoR/Managed_Mats/Transparent\n</code></pre> <p>You can take a look at <code>Rigs of Rods/resources/managed_materials/managed_mats.material</code> for more understanding of how it all works.</p>"},{"location":"terrain-creation/terrain-conversion-terrn2/","title":"Converting terrain to terrn2 format","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#basic-single-layer-03x-terrain-to-terrn2-conversion","title":"Basic (Single-layer) 0.3x terrain to terrn2 conversion","text":"<p>As of version 0.4.0, terrains now use the terrn2 file format.  This page will teach you how to convert a basic terrain to terrn2+.</p> <p>Programs needed:</p> <ul> <li>Any text editor (I recommend Notepad++ as I will use one of its features)</li> <li>Latest version of GIMP </li> </ul>"},{"location":"terrain-creation/terrain-conversion-terrn2/#what-defines-a-single-layer-terrain","title":"What defines a \"Single-layer\" terrain?","text":"<p>In the old .terrn format's .cfg file, you will find a line at the top in this format:</p> <pre><code>WorldTexture=texture.dds\n</code></pre> <p>This is the texture image for this single-layer. A majority of 0.3x terrains only use this layer for their terrain texture. Terrains that have more than one texture layer use Alpha Splatting which is not covered in this tutorial.</p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#getting-the-template","title":"Getting the template","text":"<p>I have made and uploaded a template terrain here with the right file structure which will be used throughout this tutorial.  Download the raw heightmap version, as 0.3x terrains use .raw heightmaps.</p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#choosing-your-terrain-to-convert","title":"Choosing your terrain to convert","text":"<p>Lots of terrains have already been converted, you can find them here, don't waste your time converting a terrain that has already been converted! In this tutorial I will be converting the Cliffdrop terrain.</p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#getting-started","title":"Getting started","text":"<p>Once you've downloaded the template terrain, extract it into a folder using any zipping program (Windows can extract files by default, but I use 7-Zip. It should look like this:</p> <p></p> <p>Extract the 0.3x terrain zip into that same folder. Now it should look like this: </p> <p>Rename the template_04 files to match your terrain's file name Delete the template_04.raw file first as you will get duplicate errors otherwise!:</p> <p></p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#transfering-terrain-information-to-terrn2-terrain-files","title":"Transfering terrain information to terrn2 terrain files","text":"<p>Now that you've got both the new terrn2 files and the old terrain files in the zip, I will start out by transfering the information from the .terrn file to the .terrn2 file. If you're using Notepad++, you can open both files and have them side-by-side for easy editing:  </p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#terrn-terrn2","title":".terrn -&gt; .terrn2","text":"<pre><code>[General]\n#Name of your terrain, defined at the top of the .terrn file.\nName = Cliff Drop Crash Test Map\n#File name of the heightmap configuration (0.3x's .cfg)\nGeometryConfig = Cliffdrop.otc\n#If your map doesn't have water, keep this value at the default (0) and delete the WaterLine=1.0 line. \nWater=0\n#Replace 1.0 with the value from your .terrn \n#WaterLine=1.0\n#Terrain/water color, best to leave it at the default.\nAmbientColor = 0.93, 0.86, 0.76\n#The position RoRBot spawns at when the terrain is loaded. Since terrn2 only has one position and 0.3x has three, copy *only* \n#one of the positions. If one of them spawns in the wrong place ingame, try another one.\n#1364.25, 121.028, 1272.22, 0, -86.6805, 0662842\n#The numbers do not have to be seperated by commas.\nStartPosition = 1364.25 121.028  1272.22\n#Where the map will be located in the terrain selector menu. leave it as the default. More about ID's here:\n#https://archives.rigsofrods.org/wiki/index.php/Truck_Categories\nCategoryID = 129\n#Version of the terrain. If no version number is listed by the author, leave it as the default.\nVersion = 1\n#Unique ID of the terrain. If none is listed in the .terrn, generate one at\n#https://guidgenerator.com\nGUID = 9b202f78-ba1c-4d58-9996-61066fa5d9fc\n\n#Extras\n\n#If your map has a groundmodel, define the landuse file in this format:\n#TractionMap = landuse.cfg\n\n#If your map has a custom Caelum sky file, define it in this format:\n#CaelumConfigFile =\n\n#If your map uses a custom Sandstorm sky file (ex. Aspen Grove), define it here. Otherwise, leave it as the default.\nSandStormCubeMap = tracks/skyboxcol\n\n#Authors of the terrain. If the .terrn file doesn't list who made the map, just put \"unknown\". You may list yourself for converting the terrain.\n[Authors]\nterrain = Box5Diesel\nconverting = CuriousMike\n\n#Filename for the object file. \n[Objects]\nCliffdrop.tobj=\n\n#If your map has a race script define it here in this format:\n#All 0.3x races use .terrn.as as the extension, include the .terrn also:\n[Scripts]\n#template_04.terrn.as=\n</code></pre>"},{"location":"terrain-creation/terrain-conversion-terrn2/#cfg-otc","title":".cfg -&gt; .otc","text":"<pre><code>;Heightmap values\n;size (horizontal/vertical)\nHeightmap.0.0.raw.size=1025\n;bytes per pixel (1 = 8bit, 2=16bit)\nHeightmap.0.0.raw.bpp=2\n;If the terrain heightmap needs to be flipped (eg. Terragen exports raw upside down)\nHeightmap.0.0.flipX=1\n\n;Terrain size values\n;size\nWorldSizeX=3000\nWorldSizeZ=3000\n;Terrain max height\nWorldSizeY=300\n\n;To disable game caching when working on a terrain. \ndisableCaching=1\n\n;Filename to define the textures.\nPageFileFormat=Cliffdrop-page-0-0.otc\n\n\n;If the .cfg has this defined, set it here. Otherwise, leave it as the default\nMaxPixelError=3\n\n;Advanced terrn2 texture values, best to leave them as the defaults.\nLightmapEnabled=0\nSpecularMappingEnabled=1\nNormalMappingEnabled=0     \n</code></pre>"},{"location":"terrain-creation/terrain-conversion-terrn2/#cfg-page-0-0otc","title":".cfg -&gt; *.-page-0-0.otc","text":"<p><pre><code>Cliffdrop.raw = Heightmap filename \n1 = Amount of layers\nworldSize = X/Z value in the .otc [Has to be the same]\nCliffdrop.dds = texture name\n</code></pre> <pre><code>Cliffdrop.raw\n1\n; worldSize, diffusespecular, normalheight, blendmap, blendmapmode, alpha\n3000     , Cliffdrop.dds     ,   Cliffdrop.dds\n</code></pre></p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#terrn-tobj","title":".terrn -&gt; .tobj","text":"<p>After the configuration lines in the .terrn (usually after line 4) Copy all trees, grass and object placement lines after it except \"end\".</p> <pre><code>1385.381592, 300.027374, 736.709045, 0.000000, 0.000000, 0.000000, truckshop\n\n1388.14, 300.974, 716.53, 0, 0, 0, truck wrecker.truck\n</code></pre> <p>We're done with the text editor now.</p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#removing-the-terrain-shininess","title":"Removing the terrain shininess","text":"<p>If you tried the terrain in-game right now, you'd see there is a bright white spot covering the terrain where the sun is.  Using latest version of GIMP, this can be fixed by applying a black layer mask. I recommend backing up your original texture image first.</p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#open-your-texture-in-gimp-in-this-case-cliffdropjpg","title":"Open your texture in GIMP (in this case, Cliffdrop.jpg)","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#go-to-layer-mask-add-layer-mask","title":"Go to Layer &gt; Mask &gt; Add Layer Mask...","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#select-black-full-transparency-and-click-add","title":"Select Black (full transparency) and click 'Add'","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#it-should-now-look-like-this","title":"It should now look like this:","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#go-to-file-export-as","title":"Go to File &gt; Export As...","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#set-the-file-format-to-dds","title":"Set the file format to .dds","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#set-the-compression-type-to-bc3-dxt5-and-click-ok","title":"Set the compression type to 'BC3 / DXT5' and click 'OK'","text":"<p>You can now close GIMP.</p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#trying-the-terrain-in-game","title":"Trying the terrain in-game","text":"<p>Now go ahead and zip all the files and place them in your <code>Documents\\My Games\\Rigs of Rods\\mods</code> folder.</p> <p>When you load the terrain in Rigs of Rods, You should now have a working terrn2 terrain!</p> <p></p>"},{"location":"terrain-creation/terrain-conversion-terrn2/#download-the-finished-terrain-here","title":"Download the finished terrain here.","text":""},{"location":"terrain-creation/terrain-conversion-terrn2/#removing-the-alpha-mask","title":"Removing the alpha mask","text":"<p>If you want to edit an existing terrain texture or don't have the original image anymore, you can follow these steps to remove the alpha mask:</p> <p>Install paint.net if you don't already have it.</p> <p>Since paint.net does not have this functionality by default, you also need to install dpy's Plugin Pack.</p> <p>To install the plugins, open the zip file and drag the <code>.dll</code> files inside the <code>dpyplugins8.1</code> folder into paint.net's Effects folder, usually located in <code>C:\\Program Files\\paint.net\\Effects</code>:</p> <p></p> <p>Click <code>Continue</code> when it asks for administrator permission.</p> <p>Now open your <code>.dds</code> file in paint.net and navigate to <code>Effects -&gt; Color -&gt; Alpha_to_255</code>.</p> <p></p> <p></p> <p>That's it! You can now edit the image and re-apply the alpha mask using the above steps once you're done.</p>"},{"location":"terrain-creation/terrn2-subsystem/","title":"Terrain subsystem (Terrn2)","text":"<p>This is a technical reference of the 'terrn2' terrain system in Rigs of Rods introduced in version 0.4.0. This page will cover the main file types used to create a terrain:</p> <ul> <li>.terrn2:  Entry point, defines basic details and names of the other file types.</li> <li>.otc: \"Ogre Terrain Config\". Configures the OGRE::Terrain subsystem which RoR uses for terrain display.</li> <li>-page-x-x.otc: Configures the terrain's ground textures. Most terrains only have 1 page, so this file is usually named <code>mapname-page-0-0.otc</code>.</li> <li>.tobj: Placements for static objects/trees/grass/roads. See the Terrain objects section for more info.</li> </ul> <p>Other optional file types used to enhance the terrain's visuals and functionality:</p> <ul> <li>.os: Caelum system (sky/weather) config. Visuals only. </li> <li>.skx: SkyX (sky/weather) config. Visuals only. </li> <li>.hdx: Hydrax config (0.4.5.0+). Water display.</li> <li>.as: Terrain script file, usually used for races. See this page for more info.</li> </ul>"},{"location":"terrain-creation/terrn2-subsystem/#terrain-2-terrn2","title":"Terrain 2 (.terrn2)","text":"<p>The entry point of a terrain. This is the only required file for a terrain to have.</p> <p>Note that, there is no editor which would create these files for you. You need to copy a template and work manually from there.</p> <p>Templates can be found here.</p> <pre><code>[General]\nName = YourMap\nGeometryConfig = YourMap.otc\nWater = 1\nWaterLine = 6\nWaterBottomLine = -150\nAmbientColor = 1,1,1\nCaelumConfigFile = YourMap.os\nSkyXConfigFile =  YourMap.skx\nHydraxConfigFile = YourMap.hdx\nStartPosition = 256, 10, 256\nStartRotation = 180\nSandStormCubeMap = tracks/skyboxcol\nGravity = -9.81\nCategoryID = 129\nVersion = 1\nGUID = YourID\nTractionMap = YourMap-landuse.cfg\n\n[Authors]\nterrain = YourName\ntrees&amp;grass = OtherName\nobjects = YetAnotherName\n\n[AssetPacks]\nindustrial-objects.assetpack=\nfancy-trees.assetpack=\n\n[Objects]\nYourMapobj.tobj=\nYourMapMoreobj.tobj=\n\n[Scripts]\nMyRaceScript.as=\n\n[AI Presets]\nYourMapWaypoints.json=\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#general-section","title":"General section","text":""},{"location":"terrain-creation/terrn2-subsystem/#name","title":"Name","text":"<p>(String)  Name of the map, displayed in terrain selector. </p>"},{"location":"terrain-creation/terrn2-subsystem/#geometryconfig","title":"GeometryConfig","text":"<p>(FileName) Name of the \"Ogre Terrain Config\" file used to define the terrain geometry. </p> <p>An <code>.otc</code> file is not required. You can remove the file if you are creating a meshed terrain and do not need a heightmap. </p>"},{"location":"terrain-creation/terrn2-subsystem/#water","title":"Water","text":"<p>(Boolean) Sets if the terrain should have water.  Set to <code>0</code> to disable. </p> <p>RoR implements water as a single body covering the whole map and penetrating all objects. It's specified as \"water height\" attribute of the map. All areas below the specified height will be flooded.</p>"},{"location":"terrain-creation/terrn2-subsystem/#waterline","title":"WaterLine","text":"<p>(Real) Sets the height of the water surface. Higher values = more terrain is flooded. Unused if water is disabled. </p> <p>You can change the water level in-game using the console command <code>waterlevel</code>. </p>"},{"location":"terrain-creation/terrn2-subsystem/#waterbottomline","title":"WaterBottomLine","text":"<p>(Real) Sets the height of the black ground plane at the bottom of the ocean. This value should be negative. </p>"},{"location":"terrain-creation/terrn2-subsystem/#ambientcolor","title":"AmbientColor","text":"<p>Note</p> <p>Unused as of RoR version 2022.04+</p> <p>(RGB, float notation) Sets the color of the ambient light using RGB values on a scale of 0 to 1. </p>"},{"location":"terrain-creation/terrn2-subsystem/#caelumconfigfile","title":"CaelumConfigFile","text":"<p>(FileName) Name of a custom Caelum config file, used for the sky/weather/sun . Remove this line to use the default sky config. </p> <p>Example <code>.os</code> file</p>"},{"location":"terrain-creation/terrn2-subsystem/#skyxconfigfile","title":"SkyXConfigFile","text":"<p>(FileName) Same as the Caelum sky config, except for the SkyX sky type. Remove this line to use the default sky config. </p> <p>Example <code>.skx</code> file</p>"},{"location":"terrain-creation/terrn2-subsystem/#hydraxconfigfile","title":"HydraxConfigFile","text":"<p>(FileName) Name of a custom Hydrax water config file. Remove this line to use the default Hydrax config. </p> <p>Example <code>.hdx</code> file</p>"},{"location":"terrain-creation/terrn2-subsystem/#startposition","title":"StartPosition","text":"<p>(XYZ position) Sets the spawn position of the player character. </p> <p>To get the position values:</p> <ul> <li>Open RoR and load your terrain. </li> <li>Move the character where you want to spawn.</li> <li>Press the <code>h</code> key. This will log the current position to <code>RoR.log</code>.</li> <li>Close RoR and browse to <code>Documents\\My Games\\Rigs of Rods\\logs</code> (or <code>~/.rigsofrods/logs</code> on Linux) and open the <code>RoR.log</code> file with a text editor. </li> <li>Scroll to the bottom of the file. You should find a line similar to this:</li> </ul> <p><code>Position: 885.289, 113.769, 586.640, 0.0, 0.0, 0.0</code></p> <ul> <li>Copy the first three position lines and paste them in the StartPosition line. Example:</li> </ul> <p><code>StartPosition = 885.289, 113.769, 586.640</code></p>"},{"location":"terrain-creation/terrn2-subsystem/#startrotation","title":"StartRotation","text":"<p>(degrees) Sets the spawn rotation of the player character. </p> <p>By default the spawn rotation is determined by the presence of a predefined vehicle. For example, NeoQueretaro features a predefined Scania Wrecker. If this vehicle is not installed the character spawns facing the gas station, otherwise it will spawn facing the opposite direction (towards the towing garage). </p>"},{"location":"terrain-creation/terrn2-subsystem/#sandstormcubemap","title":"SandStormCubeMap","text":"<p>(String) Name of cubemap used for the Sandstorm sky type. Leave this set to <code>tracks/skyboxcol</code> to use the default cubemap. </p>"},{"location":"terrain-creation/terrn2-subsystem/#gravity","title":"Gravity","text":"<p>(Real) Sets the terrain gravity. Earth gravity is <code>-9.81</code>. For moon gravity set to <code>-1.62</code>.</p> <p>You can change the gravity in-game using the console command <code>gravity</code>.</p>"},{"location":"terrain-creation/terrn2-subsystem/#categoryid","title":"CategoryID","text":"<p>(Integer) The category ID used in the terrain selector. Valid values:</p> <p>129 = Addon Terrains</p> <p>5000 = Official Terrains</p>"},{"location":"terrain-creation/terrn2-subsystem/#version","title":"Version","text":"<p>(Integer) The version number of the terrain. </p>"},{"location":"terrain-creation/terrn2-subsystem/#guid","title":"GUID","text":"<p>(GUID string) The GUID of the terrain. It is highly recommended you set a GUID. You can generate one here.</p>"},{"location":"terrain-creation/terrn2-subsystem/#tractionmap","title":"TractionMap","text":"<p>(FileName) Name of the traction config. Used on terrains with different ground types (mud, dirt, snow, etc). Remove this line if you don't have a landuse file. </p>"},{"location":"terrain-creation/terrn2-subsystem/#authors-section","title":"Authors section","text":"<p>(\"String = String\" pairs) Sets the names of the users who created the terrain, appears in the terrain selector. You can add multiple lines. </p>"},{"location":"terrain-creation/terrn2-subsystem/#assetpacks-section","title":"AssetPacks section","text":"<p>Sets the names of asset packs, ending with <code>=</code>. </p> <p>Asset packs are separately distributed zip files that can include meshes/textures/object files/etc to be used by terrains or vehicles.</p> <p>An asset pack zip file MUST include a text file with <code>.assetpack</code> extension containing file info:</p> <pre><code>assetpack_name \"Industrial objects\"\nassetpack_description \"Example asset pack\"\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#objects-section","title":"Objects section","text":"<p>Sets the names of teach terrain object (tobj) file, ending with <code>=</code>. You can have multiple object files (eg. separate file for trees/grass and another for buildings).</p>"},{"location":"terrain-creation/terrn2-subsystem/#scripts-section","title":"Scripts section","text":"<p>Sets the names of AngelScript files associated with the map,, ending with <code>=</code>. Mostly used for races, see the Race script generator page for more info.</p>"},{"location":"terrain-creation/terrn2-subsystem/#ai-presets-section","title":"AI Presets section","text":"<p>Sets the name of JSON files containing waypoints for use with the vehicle AI, ending with <code>=</code>.</p>"},{"location":"terrain-creation/terrn2-subsystem/#ogre-terrain-config-otc","title":"Ogre Terrain Config (.otc)","text":"<p>This file defines the terrain properties. Format is INI without sections, <code>Key=Value</code> pairs, NO SPACES AROUND <code>=</code>!</p> <p>Boolean values can be: 1, true, yes | 0, false, no</p> <p>RoR's primary mechanism for shaping a terrain are heightmaps.  8-bit or 16-bit unsigned integer RAW and PNG images are supported for the heightmap.</p> <p>To use the heightmap in a terrain, you must configure it in a <code>.otc</code> and <code>-page-x-x.otc</code> file.</p> <p>If you are interested in creating a heightmap, we recommend taking a look at L3DT.  See this page for a complete tutorial on getting a L3DT terrain into RoR.</p> <pre><code>PagesX=0\nPagesZ=0\n\nPageSize=1025\n\nPageFileFormat=YourMap-{X}-{Z}.otc\n\nHeightmap.0.0.raw.size=1025\nHeightmap.0.0.raw.bpp=2\nHeightmap.0.0.flipX=0\nHeightmap.0.0.flipY=0\n\nFlat=0\n\nWorldSizeX=1024\nWorldSizeZ=1024\nWorldSizeY=100\n\nLayerBlendMapSize=1024\n\ndisableCaching=1\n\n## =============\n## optimizations\n## =============\n\nminBatchSize=33\nmaxBatchSize=65\n\nLightmapEnabled=0\nSpecularMappingEnabled=1\nNormalMappingEnabled=1\n\nParallaxMappingEnabled=0\nGlobalColourMapEnabled=0\nReceiveDynamicShadowsDepth=0\n\nCompositeMapSize=1024\nCompositeMapDistance=4000\n\nSkirtSize=30\n\nLightMapSize=1024\n\nCastsDynamicShadows=false\n\nMaxPixelError=3\n\nDebugBlendMaps=false\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#pagesx-z","title":"PagesX-Z","text":"<p>(Integer)  The number of terrain pages in X and Z (logical Y) direction. Most terrains only have one page, so keep these set to <code>0</code>. </p>"},{"location":"terrain-creation/terrn2-subsystem/#pagesize","title":"PageSize","text":"<p>(Integer) The size of a page of tiles (in vertices). Must be (2^n)+1.</p>"},{"location":"terrain-creation/terrn2-subsystem/#pagefileformat","title":"PageFileFormat","text":"<p>(FileName) The name of the <code>-page-x-x.otc</code> file which defines the terrain textures. </p>"},{"location":"terrain-creation/terrn2-subsystem/#raw-heightmap-values","title":"RAW heightmap values","text":"<p>The following values are only used if the terrain is using a RAW heightmap image. These lines can be removed you're using a PNG image.</p>"},{"location":"terrain-creation/terrn2-subsystem/#heightmap00rawsize","title":"Heightmap.0.0.raw.size","text":"<p>(Integer) The size of the heightmap image. Must be correct or else RoR will crash! </p>"},{"location":"terrain-creation/terrn2-subsystem/#heightmap00rawbpp","title":"Heightmap.0.0.raw.bpp","text":"<p>(Integer) The bit depth of the RAW file. Most heightmaps are 16-bit, so set this to <code>2</code> (<code>1</code> = 8bit, <code>2</code>=16bit).</p>"},{"location":"terrain-creation/terrn2-subsystem/#heightmap00flip","title":"Heightmap.0.0.flip","text":"<p>(Integer) If the terrain heightmap needs to be flipped on the X or Y axis (eg. Terragen exports RAW upside down).</p>"},{"location":"terrain-creation/terrn2-subsystem/#flat","title":"Flat","text":"<p>(Boolean) If set to <code>1</code>, no heightmap will be loaded. </p>"},{"location":"terrain-creation/terrn2-subsystem/#worldsizex-z","title":"WorldSizeX-Z","text":"<p>(Integer) The world size of the terrain, in meters. As this setting is independent on heightmap resolution, you can use these values to scale the terrain.  For example, using a large heightmap with small world will yield in high-detail geometry.</p>"},{"location":"terrain-creation/terrn2-subsystem/#worldsizey","title":"WorldSizeY","text":"<p>(Integer) The maximum height of the terrain. Set to <code>0</code> to make the heightmap flat. </p>"},{"location":"terrain-creation/terrn2-subsystem/#layerblendmapsize","title":"LayerBlendMapSize","text":"<p>(Integer) Sets the default size of blend maps for a new terrain. This is the resolution of each blending layer for a new terrain.</p> <p>Recommended to keep this value at the default (<code>1024</code>). </p>"},{"location":"terrain-creation/terrn2-subsystem/#disablecaching","title":"disableCaching","text":"<p>(Boolean) By default, RoR will cache the terrain heightmap and textures to a <code>.mapbin</code> file inside the <code>cache</code> folder for faster loading times.</p> <p>When creating a terrain, this value should be set to <code>1</code> to stop the game from caching the data, which will prevent you from making changes.</p> <p>Note</p> <p>This does not cache the static objects on the terrain.</p>"},{"location":"terrain-creation/terrn2-subsystem/#optimizations","title":"Optimizations","text":"<p>The following values are advanced options to optimize your terrain heightmap. It is recommended to keep most of these values at the default.</p>"},{"location":"terrain-creation/terrn2-subsystem/#minbatchsize","title":"minBatchSize","text":"<p>(Integer)  Minimum and maximum batch sizes (along one edge) in vertices; must be 2^n+1.  The terrain will be divided into hierarchical tiles, and these are sizes of one tile in vertices (at any LOD).</p>"},{"location":"terrain-creation/terrn2-subsystem/#lightmapenabled","title":"LightmapEnabled","text":"<p>(Boolean) Whether to support a light map over the terrain in the shader, if it's present.</p> <p>Note</p> <p>While the terrain shader supports a lightmap, RoR currently does not. </p>"},{"location":"terrain-creation/terrn2-subsystem/#normalmappingenabled","title":"NormalMappingEnabled","text":"<p>(Boolean) Whether to support normal mapping per layer in the shader.</p>"},{"location":"terrain-creation/terrn2-subsystem/#specularmappingenabled","title":"SpecularMappingEnabled","text":"<p>(Boolean) Whether to support specular mapping per layer in the shader.</p> <p>Important</p> <p>Keep this enabled, otherwise  the specular map in the texture files won't be respected and your terrain will be ridiculously shiny.</p>"},{"location":"terrain-creation/terrn2-subsystem/#parallaxmappingenabled","title":"ParallaxMappingEnabled","text":"<p>(Boolean) Whether to support parallax mapping per layer in the shader.</p>"},{"location":"terrain-creation/terrn2-subsystem/#globalcolourmapenabled","title":"GlobalColourMapEnabled","text":"<p>(Boolean) Whether to support a global colour map over the terrain in the shader, if it's present.</p>"},{"location":"terrain-creation/terrn2-subsystem/#receivedynamicshadowsdepth","title":"ReceiveDynamicShadowsDepth","text":"<p>(Boolean) Whether to use depth shadows. Disabled by default. </p>"},{"location":"terrain-creation/terrn2-subsystem/#compositemapsize","title":"CompositeMapSize","text":"<p>(Integer) Sets the default size of composite maps for a new terrain.</p>"},{"location":"terrain-creation/terrn2-subsystem/#compositemapdistance","title":"CompositeMapDistance","text":"<p>(Integer) Sets the distance at which to start using a composite map if present.</p>"},{"location":"terrain-creation/terrn2-subsystem/#skirtsize","title":"SkirtSize","text":"<p>(Integer) The default size of 'skirts' used to hide terrain cracks.</p>"},{"location":"terrain-creation/terrn2-subsystem/#lightmapsize","title":"LightMapSize","text":"<p>(Integer) Sets the default size of lightmaps for a new terrain.</p>"},{"location":"terrain-creation/terrn2-subsystem/#castsdynamicshadows","title":"CastsDynamicShadows","text":"<p>(Boolean) Whether the terrain will be able to cast shadows.</p>"},{"location":"terrain-creation/terrn2-subsystem/#maxpixelerror","title":"MaxPixelError","text":"<p>(Integer)  Sets the maximum screen pixel error that should  be allowed when rendering.</p> <p>Note</p> <p>This may cause the terrain to not match the collision, see this GitHub issue for more info. </p>"},{"location":"terrain-creation/terrn2-subsystem/#debugblendmaps","title":"DebugBlendMaps","text":"<p>(Boolean) Dumps the blend maps to files named <code>blendmap_layer_X.png</code>.</p>"},{"location":"terrain-creation/terrn2-subsystem/#ogre-terrain-page-config-page-x-xotc","title":"Ogre Terrain Page Config (-page-x-x.otc)","text":"<p>The terrain consists of pages. Number of pages is defined by PagesX and PagesZ (described above). There must be at least 1 page.</p> <p>For each page, there must be an .otc file. File name format is set by PageFileFormat (described above). If there's just one page, it'll be named like <code>MyMap-page-0-0.otc</code></p> <p>The page-config file specifies a heightmap to use for the page and terrain texture layers.</p> <p>The system is designed for texturing by several tiling textures combined via built-in texture blending (aka texture splatting). Other built-in effects: normal mapping, specular mapping, parallax mapping.</p> <pre><code>31-heightmap.png\n6\n; Params: [worldSize], [diffusespecular], [normalheight], [blendmap], [blendmapmode], [alpha]\n; The ground layer; covers the entire terrain.\n3.3  , 31-gravel_diffusespecular.dds , 31-gravel_normalheight.dds\n; Other layers:\n6    , 31-rock_diffusespecular.dds   , 31-rock_normalheight.dds   , 31-surfaces2.png, B, 0.9\n5    , 31-sand_diffusespecular.dds   , 31-sand_normalheight.dds   , 31-surfaces2.png, G, 0.9\n4    , 31-grass_diffusespecular.dds  , 31-grass_normalheight.dds  , 31-surfaces1.png, G, 0.8\n3    , 31-asphalt_diffusespecular.dds, 31-asphalt_normalheight.dds, 31-surfaces1.png, R, 0.95\n1024 , 31-shadow_diffusespecular.dds , 31-shadow_normalheight.dds , 31-shadow.png   , R, 0.8\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#format-overview","title":"Format overview","text":"<ul> <li>Line1: Heightmap (file name). For example: my_heightmap.png</li> <li>Line2: Number of layers (integral number in range 1-6) The OgreTerrain component has a limit of 6 layers (5 blendmaps)</li> <li>Line3 and further: Layer definitions (see below)</li> </ul>"},{"location":"terrain-creation/terrn2-subsystem/#layer-definitions","title":"Layer definitions","text":"<ul> <li>Lines starting with semicolon ''' ' ; ' ''' are comments</li> <li>Layer definition line has these values, separated by ''' ' , ' ''' comma :<ul> <li>size (real number 1-2048) The target size of the texture on the terrain</li> <li>diffusespecular (file name) The filename of the texture with the following format: RGB=Diffuse Color, A=Specular map</li> <li>normalheight (file name) The filename of the texture with the following format: RGB=Normal map, A=Heightmap for parallax mapping</li> <li>blendmap (file name) Blendmap texture file name</li> <li>blendmapmode (One capital letter: R / G / B / A) Which color channel of the blendmap use for blending this layer.</li> <li>opacity (Real number 0-1) Setting to 0 makes layer invisible.</li> </ul> </li> </ul> <p>Layer at position #0 is a ground layer - it covers the entire page and thus needs no blendmap. It only accepts first 3 arguments: [size] [diffusespecular] [normalheight]</p> <p>Layers #1 - #5 only cover areas which have a corresponding color in the blendmap.</p>"},{"location":"terrain-creation/terrn2-subsystem/#terrain-objects-tobj","title":"Terrain Objects (.tobj)","text":"<p>Defines object or vehicle placement on terrain. </p>"},{"location":"terrain-creation/terrn2-subsystem/#static-objects","title":"Static objects","text":"<p>Static objects are referred to by its object definition (<code>.odef</code>) file name. This file contains names of the visual meshes  along with collision mesh and associated friction settings.</p> <p>Static objects may also trigger special events. A \"truck shop\" building will, when entered, will display a vehicle menu.  A \"load spawner\" deck will bring up a menu with trailers and loads. And so on.</p> <pre><code>// x        y        z    rx  ry rz odefname\n875.549, 67.6607, 1155.26, 0, 0, 0, truckshop\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#xyz-position","title":"XYZ position","text":"<p>The first three values is the XYZ position of the object. The easiest way to get these values is by using the built-in object editor, see this page for more info.</p>"},{"location":"terrain-creation/terrn2-subsystem/#rotation","title":"Rotation","text":"<p>The next 3 values is the object's rotation.  As the axises between modelling programs such as  Blender and RoR are different,  you may notice most terrain objects are rotated 90 degrees when displayed in a model viewer.</p> <p>In RoR x is front-back, y is up-down, z is side to side</p> <p>In Blender x is side to side, z is up-down, y is front-back</p>"},{"location":"terrain-creation/terrn2-subsystem/#odef-name","title":"Odef name","text":"<p>The name of the <code>.odef</code> file without the file extension. See the Object file format page for more info.</p>"},{"location":"terrain-creation/terrn2-subsystem/#special-objects","title":"Special objects","text":""},{"location":"terrain-creation/terrn2-subsystem/#overview-map-icons","title":"Overview map icons","text":"<p>Static objects can also have extra values after the odef name:</p> <pre><code>125.122070, 101.198730, 844.824219, 0.000000, 0.000000, 0.000000, a1da0UID-smallhouse hotel Elk\n</code></pre> <p>The <code>hotel Elk</code> line defines the icon and name of the object shown on the overview (TAB) map.</p> <p></p> <p><code>hotel</code> is the name of the structure, it also defines the icon type. Valid types:</p> <pre><code>station\nhotel\nvillage\nobservatory\nfarm\nship\n</code></pre> <p><code>Elk</code> is the name of the structure itself. </p> <p>Note</p> <p>The icon type and structure names are reversed in-game. <code>hotel Elk</code> appears as <code>Elk hotel</code> on the overview map. If no icons appear on the overview map, make sure \"declutter overview map\" is disabled under Settings -&gt; Graphics.</p>"},{"location":"terrain-creation/terrn2-subsystem/#grid","title":"Grid","text":"<p>Allows you to add a grid, as shown on the default Simple Terrain:</p> <p></p> <pre><code>// grid x y z \ngrid 512, 0.1, 512\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#vehicles-and-dynamic-objects","title":"Vehicles and dynamic objects","text":"<p>Node/Beam structures (actors) such as trucks, loads, trailers, and more can be placed on a terrain. These will only appear in single player, they will not spawn in multiplayer.</p> <pre><code>1191.162109, 35.034180, 930.908203, 0.000000, 0.000000, 0.000000, truck wrecker.truck\n1221.191406, 35.034180, 930.908203, 0.000000, 0.000000, 0.000000, load crate.load\n1185.191406, 35.034180, 827.042773, 0.000000, -144.000000, 0.000000, truck an-12.airplane\n332.380859, 33.032227, 1009.191406, 0.000000, 23.000000, 0.000000, boat smit.boat\n</code></pre> <p>You can also have stationary or semi-stationary objects like cranes, hall doors, bridges or wind turbines also made from dynamic physical model,  just like vehicles, except they're completely or partially fixed to the ground.</p> <pre><code>1892.0000, 79.0000, 2241.0000, 0, 200.0000, 0, truck2 c821aUID_MMWT92.fixed\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#type","title":"Type","text":"<p>After the position and rotation values is the vehicle type. Valid values:</p> <pre><code>truck\ntruck2 \nload \nboat\nmachine\n</code></pre> <p>The <code>truck</code> value does not take the height position (Y value) into account, the actor will always spawn at terrain height.  <code>truck2</code> does use the height value, this is done for backwards compatibility.</p>"},{"location":"terrain-creation/terrn2-subsystem/#file-name","title":"File name","text":"<p>The file name of the actor. This usually ends with <code>.truck</code>, but could also be <code>.load</code>, <code>.trailer</code>, <code>.fixed</code> etc as well.</p>"},{"location":"terrain-creation/terrn2-subsystem/#grass","title":"Grass","text":"<p>This enables you to add grass to the terrain. The arguments are (all on one line!):</p> Keyword Description Recommended Values grass Must precede other grass-related keywords Grass Range Determines grass visibility range in meters 80 Sway Speed The rate at which the grass sways in simulated wind 0.5 Sway Length Length of sway displacement 0.05 Sway Distribution How much of the wind wave is distributed 10 Density Density of grass distribution. Maximum of 3.5 0.3 MinX/Y MaxX/Y Determine size of grass:  Fade Type Adjusts method of transition (via distance):0 - FADETECH_GROW = Grass will grow out of the ground, looks good with grass that has ground color1 - FADETECH_ALPHAGROW = Like 0, but with alpha blending2 - FADETECH_ALPHA = Alpha blends in/out 0 Min-YMax-Y Minimum/maximum appearance level. 0 for no minimum/maximum.Example: <code>0, 10</code> for seagrass under the water level 10 or <code>10, 0</code> for grass above the sea level (if the sea level is 10) Material Material file for grass appearance Listed in <code>/data/paged/grass.material</code> Color Map Determines grass color. Grass image must be gray scale! Use none to disable Use terrain texture to match ground color Density Map A gray scale image that determines density. Darker shades refer to less grass, while white refers to most grass. None to disable. <p>For example 7 grass types plus sea grass (water level is 10):</p> <pre><code>// format: grass range, SwaySpeed, SwayLength, SwayDistribution, Density, minx, miny, maxx, maxy, fadetype, minY, maxY, material colormap densitymap \ngrass 200, 0.5, 0.05, 10, 0.1, 0.2, 0.2, 1, 1, 1, 0, 9, seaweed none none\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass1 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass2 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass3 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass4 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass5 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 0.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass6 aspen.jpg aspen_grass_density.png\ngrass 200, 0.5, 0.05, 10, 3.3, 0.2, 0.2, 1, 1, 1, 10, 0, grass7 aspen.jpg aspen_grass_density.png\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#trees","title":"Trees","text":"<pre><code>//trees yawFrom, yawTo, scaleFrom, scaleTo, highDensity, distance1, distance2, meshName colormap densitymap \ntrees 0, 360, 0.1, 0.12, 2, 60, 3000, fir05_30.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 1, 3, 1, 60, 3000, tree.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 1, 2, 1, 60, 3000, tree2.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 0.1, 0.13, 1, 60, 3000, fir06_30.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 0.1, 0.13, 1, 60, 3000, fir14_25.mesh aspen-test.dds aspen_grass_density2.png \ntrees 0, 360, 0.1, 0.2, 3, 60, 3000, plant1.mesh aspen-test.dds aspen_grass_density.png \ntrees 0, 360, 0.1, 0.2, 3, 60, 3000, plant2.mesh aspen-test.dds aspen_grass_density2.png\n</code></pre> <p>arguments:</p> <ul> <li>yawFrom-yawTo: that is the range which the game will choose to randomly rotate the trees</li> <li>scaleFrom-scaleTo: scaling range that the game uses randomly. 0=0%, 1=100%</li> <li>highDensity\u00a0: density factor: 0=0, 1=not much, 2=more, etc</li> <li>distance1: distance to which the game should use the mesh instead of the billboard. This is performance critical, use low values if possible!</li> <li>distance2: distance to which the billboard should be drawn (max sight range)</li> <li>meshName\u00a0: the mesh to use</li> <li>colorMap\u00a0: used to colorize the mesh. if your mesh is too dark check the colormap! Can be set to none to disable it.</li> <li>densityMap: texture that determines where and how much trees are used. white = 100%, black = 0%</li> </ul> <p>since 0.38.62 it has two more arguments:</p> <ul> <li>grid spacing (0=default):<ul> <li>negative number: set the detail level of the used grid</li> <li>positive number: use new tree distribution scheme: one tree in the center of a grid cell</li> </ul> </li> <li>collision mesh: .mesh that will be used for the collision engine</li> </ul>"},{"location":"terrain-creation/terrn2-subsystem/#procedural-roads","title":"Procedural Roads","text":"<p>There are two ways to add roads. One way is just by placing meshes like any other object:</p> <pre><code>1026.371338, 34.086056, 1007.492920, 0.000000, -144.000000, 0.000000, road\n1018.273438, 34.086056, 1013.378662, 0.000000, -144.000000, 0.000000, road\n</code></pre> <p>The roads will be joined together in-game. </p> <p>The other (preferred) method is to use procedural roads:</p> <pre><code>begin_procedural_roads\n//position x,y,z rotation rx,ry,rz, width, border width, border height, type\n           0,0,0,         0,0,0,    10.0,  0,            0,             flat\n           0,0,0,         0,0,0,    10.0,  0.25,         1.0,           both\nend_procedural_roads\n</code></pre>"},{"location":"terrain-creation/terrn2-subsystem/#road-editor","title":"Road editor","text":"<p>An interactive road editor was introduced in version 2022.12.  The 2022.12 release trailer features a demo of the initial version. </p> <p>In the current stable release (2022.12) the road editor is accessed by opening the console (Top Menubar -&gt; <code>Tools</code> -&gt; <code>Show console</code> or press the tilde key), type <code>loadscript road_editor.as</code> and press Enter.</p> <p>Starting with 2025.03 RC1, the road editor is now available as a gadget (a self-contained script).  Gadgets are loaded through the Top Menubar -&gt; <code>Tools</code> -&gt; <code>Browse gadgets...</code>,  from here the road editor can be selected.</p> <p></p>"},{"location":"terrain-creation/terrn2-subsystem/#road-types","title":"Road types","text":"<ul> <li><code>flat</code></li> <li><code>left</code> - Only left border</li> <li><code>right</code> - Only right border</li> <li><code>both</code> - Both borders</li> <li><code>bridge</code></li> <li><code>bridge_no_pillars</code></li> <li><code>monorail</code></li> <li><code>monorail2</code></li> </ul> <p>As of version 0.4.0.7 all roads are automatically converted into procedural roads. </p>"},{"location":"terrain-creation/terrn2-subsystem/#hints","title":"Hints","text":"<p>The format of procedural roads is: </p> <p><code>//position x,y,z rotation rx,ry,rz, width, border width, border height, type</code></p> <p>Playing with the \"border width\" and \"border height\" settings, you can make ie. sidewalks or sound barriers. </p> <p>You can adjust the width of the road by changing the \"width\" value. This allows you to make 4-lane motorways. Normal road width is <code>10.0</code>.</p> <p>If you're making a long straight road, you only need the first and the last object, example: <pre><code>1128.017578, 60.892349, 1728.071899, 0.000000, -136.000000, 2.000000,10.0,  0,            0,             flat\n1120.828613, 61.241344, 1735.014282, 0.000000, -136.000000, 2.000000,10.0,  0,            0,             flat -\n1113.639648, 61.590340, 1741.956665, 0.000000, -136.000000, 2.000000,10.0,  0,            0,             flat   \\\n1106.450684, 61.939335, 1748.899048, 0.000000, -136.000000, 2.000000,10.0,  0,            0,             flat    | you don't need these\n1099.261719, 62.288330, 1755.841431, 0.000000, -136.000000, 2.000000,10.0,  0,            0,             flat   /\n1092.072754, 62.637325, 1762.783813, 0.000000, -136.000000, 2.000000,10.0,  0,            0,             flat -\n1084.883789, 62.986320, 1769.726196, 0.000000, -136.000000, 2.000000,10.0,  0,            0,             flat\n</code></pre></p> <p>You need only the first and the last object, the rest of the road will be generated between these two objects.  This makes the terrain file smaller but you still get the same result.  Please note that the rotation of the road blocks must be the same, otherwise the loading times will be much longer.</p>"},{"location":"terrain-creation/terrn2-subsystem/#rot_yxz","title":"rot_yxz","text":"<p>A self-contained line that can be placed anywhere in the terrain object file. When used it changes how road roll angles are processed, making it possible to create correctly banked roads.</p> <p>Example usage from the Stunt Rally track pack (TestC1-Circle):</p> <p></p>"},{"location":"terrain-creation/terrn2-subsystem/#set_default_rendering_distance","title":"set_default_rendering_distance","text":"<p>This directive sets the rendering distance of all objects that are defined after it, useful for optimization.</p> <pre><code>; limit distance to 500 meters\nset_default_rendering_distance 500\n\n2490, 0.1, 2164, 0, 0, 0, truckshop sale Mainbase-Truck\n2490, 0.1, 2183, 0, 0, 0, myhangar2 repair Mainbase\n2490, -0.1, 2253, 0, -90, 0, hangar sale Mainbase-Aircraft\n2349, 0, 2105, 0, 0, 0, load-spawner sale Mainbase-Cargo\n2507, 0, 2162, 0, 90, 0, f4afUID-lab\n\n; reset to infinite distance\nset_default_rendering_distance 0\n</code></pre>"},{"location":"tools-tutorials/addons/","title":"Installing Addons (Manual)","text":""},{"location":"tools-tutorials/addons/#what-are-addons","title":"What are addons?","text":"<p>In the Repository, you will find a category for addon parts. These are ready-to-install modifications for existing vehicles.</p> <p>Some are designed for specific vehicles (e.g. bumpers/exhausts) while others can fit on any vehicle (e.g. wheels/tires). This page serves as a general guide on the basics of installing various types of parts. </p> <p>The only requirement is a plain text editor, such as Notepad. (Notepad++ is preferred)</p> <p>As always, read thoroughly and do not skip any steps. Most questions we get are simply caused by people not reading.</p>"},{"location":"tools-tutorials/addons/#readme-files","title":"ReadMe files","text":"<p>Inside most addon zips, you'll find a ReadMe text file. These contain info you need to know in order to install the part correctly, such as <code>managedmaterials</code> lines. </p> <p>However, not all ReadMe files are the same. Some will provide a detailed step-by-step tutorial, while others may just give the bare minimum <code>managedmaterials</code> lines, or may not include a ReadMe at all. </p>"},{"location":"tools-tutorials/addons/#vehicle-body-parts","title":"Vehicle body parts","text":"<p>Most parts on the Repository are designed to fit specific vehicles. This includes but not limited to bumpers, exhausts, extra lights, etc. </p> <p>In this example we will be installing the Heavy Bumper for the Chevy K3500.</p>"},{"location":"tools-tutorials/addons/#setting-up","title":"Setting up","text":"<p>To begin, download &amp; extract the part zip (in our case, <code>CHeavyBumper.zip</code>) into a new folder. The folder should contain the mesh, dds textures, PDN paintkit, and a readme text file:</p> <p></p> <p>Next, browse to <code>Documents\\My Games\\Rigs of Rods\\mods</code> and open <code>ChevyK3500.zip</code>:</p> <p></p> <p>Find the <code>.truck</code> file you want to edit. For this example I'll be editing the <code>Standard cab Single rear wheels (lift)</code> version (<code>1990K3500_STD_LIFT.truck</code>)</p> <p>Once you've figured out which truck you want the bumper on, drag the <code>.truck</code> file from the zip and into the folder containing the part you downloaded earlier:</p> <p></p>"},{"location":"tools-tutorials/addons/#the-truck-file","title":"The truck file","text":"<p>You will need to open two files, the truck file (<code>1990K3500_STD_LIFT.truck</code>) and the readme file (<code>ReadMe.txt</code>). The readme file contains the lines you need to copy into the truck file.</p>"},{"location":"tools-tutorials/addons/#managedmaterials","title":"Managedmaterials","text":"<p>Before we begin, some notes:</p> <ul> <li> <p>Some parts may include a <code>.material</code> file inside the zip. If this is the case then you don't need to specify anything in <code>managedmaterials</code>, just move the <code>.material</code> file into the vehicle's zip along with the other files.</p> </li> <li> <p>If you are unable to find the material name (ReadMe doesn't specify it), download OgreMeshy and open the <code>.mesh</code>  file. You should see a similar line in red:</p> </li> </ul> <p><code>Can't assign material 'ICD_AEZ_Forged' to SubEntity of 'MeshEntity' because this Material does not exist in group 'InternalMeshGroup'. Have you forgotten to define it in a .material script?</code></p> <p>In the above example, <code>ICD_AEZ_Forged</code> would be the material name you set in <code>managedmaterials</code>.</p> <p>With that said, in the truck file, scroll down until you find the <code>managedmaterials</code> section. It will look like this:</p> <pre><code>managedmaterials\nset_managedmaterials_options 1\nBK3500          mesh_standard       K3500-Tex.png       K3500_S.png\nK3500_Frame     mesh_standard       Chassis_Bake.png        Chassis_Bake_S.png\nGrille_Cheyenne     mesh_standard       Grille_Cheyenne.png     Grille_Cheyenne_S.png\nK3500_SteeringWheel mesh_standard       K3500_SteeringWheel.png     -\nK3500_Badge     mesh_standard       K3500_Badge.png     K3500_Badge.png\nK3500_Badge1        mesh_standard       K3500_Badge_GMC.png K3500_Badge_GMC.png\nMirror_3        mesh_standard       Mirror_3.png        Mirror_3.png\nEngine_Bay      mesh_standard       Engine_Bay.png      Engine_Bay_S.png\nEngine_454      mesh_standard       Engine_454.png      Engine_454_S.png\nGrille_WT       mesh_standard       Grille_WT.png       Grille_WT_S.png\nK3500_Exhaust       mesh_standard       Exhaust-Tex.png     Exhaust_S.png\nKodiak_Interior     mesh_standard       Kodiak_Interior.png\nKodiak_Windows      mesh_transparent     Kodiak_Windows.png Kodiak_Windows_s.png\nKodiak_Mirrors      mesh_standard       Mirrors-Tex.png     Mirrors-Tex.png\nTOYOOC          mesh_standard       Toyo-OC.png\nK3500_Wheel     mesh_standard       K3500_Wheel.png     K3500_Wheel_S.png\nBFGA            mesh_standard       BFGA.png        Black.png\nDWindow         mesh_standard       Dwindow.png     Dwindow_S.png\n</code></pre> <p>For this bumper, you have the choice between clean or rusted, as shown in the readme: </p> <pre><code>Black\n--------------------------------------------------------------------------------------------------------------------------\nCHeavyBumper        mesh_standard       HeavyBumper.dds     HeavyBumper_s.dds\n\nRusted\n--------------------------------------------------------------------------------------------------------------------------\nCHeavyBumper        mesh_standard       HeavyBumper_Rusted.dds      HeavyBumper_Rusted_s.dds\n</code></pre> <p>We will choose the clean version. Paste the line at the bottom of the <code>managedmaterials</code> section. Example:</p> <pre><code>managedmaterials\nset_managedmaterials_options 1\nBK3500          mesh_standard       K3500-Tex.png       K3500_S.png\nK3500_Frame     mesh_standard       Chassis_Bake.png        Chassis_Bake_S.png\nGrille_Cheyenne     mesh_standard       Grille_Cheyenne.png     Grille_Cheyenne_S.png\nK3500_SteeringWheel mesh_standard       K3500_SteeringWheel.png     -\nK3500_Badge     mesh_standard       K3500_Badge.png     K3500_Badge.png\nK3500_Badge1        mesh_standard       K3500_Badge_GMC.png K3500_Badge_GMC.png\nMirror_3        mesh_standard       Mirror_3.png        Mirror_3.png\nEngine_Bay      mesh_standard       Engine_Bay.png      Engine_Bay_S.png\nEngine_454      mesh_standard       Engine_454.png      Engine_454_S.png\nGrille_WT       mesh_standard       Grille_WT.png       Grille_WT_S.png\nK3500_Exhaust       mesh_standard       Exhaust-Tex.png     Exhaust_S.png\nKodiak_Interior     mesh_standard       Kodiak_Interior.png\nKodiak_Windows      mesh_transparent     Kodiak_Windows.png Kodiak_Windows_s.png\nKodiak_Mirrors      mesh_standard       Mirrors-Tex.png     Mirrors-Tex.png\nTOYOOC          mesh_standard       Toyo-OC.png\nK3500_Wheel     mesh_standard       K3500_Wheel.png     K3500_Wheel_S.png\nBFGA            mesh_standard       BFGA.png        Black.png\nDWindow         mesh_standard       Dwindow.png     Dwindow_S.png\nCHeavyBumper        mesh_standard       HeavyBumper.dds     HeavyBumper_s.dds\n</code></pre> <p>For more info on <code>managedmaterials</code>, see: Managedmaterials</p>"},{"location":"tools-tutorials/addons/#flexbodiesprops","title":"Flexbodies/props","text":"<p>Before we begin, a few notes:</p> <ul> <li> <p>If the placement line does not have a <code>forset</code> line, this means it is placed under the <code>props</code> section. Just search <code>props</code> instead. </p> </li> <li> <p>If the readme doesn't contain a placement line, it usually means the part uses the same placement as the vehicle's other parts.  In this case you would just copy one of the other placements and change the mesh name to the part. The readme will most likely specify this. </p> </li> <li> <p>Some parts (such as truck beds) may require you to edit the vehicle model (e.g. Bed is part of cab model) in order to install the part.  To do this, see: Blender mesh editing</p> </li> </ul> <p>With that out of the way, search (<code>CTRL+F</code>) for <code>flexbodies</code>. You will see this:</p> <pre><code>flexbodies\n39, 62, 34,    0.50,    0.32,     -0.5,   0,    180,    180, K3500_FBump.mesh\nforset 175-178, 76-79, 28-31\n\n39, 62, 34,    0.50,    0.32,     -0.5,   0,    180,    180, K3500_Badge.mesh\nforset 149-160\n</code></pre> <p>Since the vehicle obviously already has a bumper, you will have to remove or comment (<code>;</code>) the original bumper line. For example: </p> <pre><code>;39, 62, 34,    0.50,    0.32,     -0.5,   0,    180,    180, K3500_FBump.mesh\n;forset 175-178, 76-79, 28-31\n</code></pre> <p>Now copy the placement line from the readme and paste it below the original bumper line, like so:</p> <pre><code>flexbodies\n;39, 62, 34,    0.50,    0.32,     -0.5,   0,    180,    180, K3500_FBump.mesh\n;forset 175-178, 76-79, 28-31\n\n39, 62, 34,    0.50,    0.32,     -0.5,   0,    180,    180, CHeavyBumper.mesh\nforset 175-178, 76-79, 28-31\n\n39, 62, 34,    0.50,    0.32,     -0.5,   0,    180,    180, K3500_Badge.mesh\nforset 149-160\n</code></pre> <p>For more info on props and flexbodies, see: Props</p> <p>You can now save &amp; close the truck file. </p>"},{"location":"tools-tutorials/addons/#packaging","title":"Packaging","text":"<p>All that's left to do is to move the truck file, textures, and mesh back into the vehicle zip. </p> <p>If the part includes multiple textures, you can only copy the files required by the <code>managedmaterials</code> section, in this case <code>HeavyBumper.dds</code> and <code>HeavyBumper_s.dds</code>.</p>"},{"location":"tools-tutorials/addons/#in-game","title":"In-game","text":"<p>Now it's time to test your newly installed part in-game. If you followed this tutorial exactly, you should now have a custom bumper on your K3500! </p> <p></p>"},{"location":"tools-tutorials/addons/#wheels-and-tires","title":"Wheels and tires","text":"<p>Keeping with the K3500, in this example we will be installing the 5 Spoke Wheel.</p>"},{"location":"tools-tutorials/addons/#setting-up_1","title":"Setting up","text":"<p>To begin, download &amp; extract the part zip (in our case, <code>5SpokeRim.zip</code>) into a new folder. The folder should contain the mesh, dds textures, PDN paintkit, and a readme text file:</p> <p></p> <p>Next, browse to <code>Documents\\My Games\\Rigs of Rods\\mods</code> and open <code>ChevyK3500.zip</code>:</p> <p></p> <p>Find the <code>.truck</code> file you want to edit. For this example I'll be editing the <code>Standard cab Single rear wheels (lift)</code> version (<code>1990K3500_STD_LIFT.truck</code>)</p> <p>Once you've figured out which truck you want the wheels on, drag the <code>.truck</code> file from the zip and into the folder containing the part you downloaded earlier:</p> <p></p>"},{"location":"tools-tutorials/addons/#the-truck-file_1","title":"The truck file","text":"<p>You will need to open two files, the truck file (<code>1990K3500_STD_LIFT.truck</code>) and the readme file (<code>ReadMe.txt</code>). The readme file contains the lines you need to copy into the truck file.</p>"},{"location":"tools-tutorials/addons/#managedmaterials_1","title":"Managedmaterials","text":"<p>Before we begin, some notes:</p> <ul> <li> <p>Some parts may include a <code>.material</code> file inside the zip. If this is the case then you don't need to specify anything in <code>managedmaterials</code>, just move the <code>.material</code> file into the vehicle's zip along with the other files.</p> </li> <li> <p>If you are unable to find the material name (ReadMe doesn't specify it), download OgreMeshy and open the <code>.mesh</code>  file. You should see a similar line in red:</p> </li> </ul> <p><code>Can't assign material 'ICD_AEZ_Forged' to SubEntity of 'MeshEntity' because this Material does not exist in group 'InternalMeshGroup'. Have you forgotten to define it in a .material script?</code></p> <p>In the above example, <code>ICD_AEZ_Forged</code> would be the material name you set in <code>managedmaterials</code>.</p> <p>With that said, in the truck file, scroll down until you find the <code>managedmaterials</code> section. It will look like this:</p> <pre><code>managedmaterials\nset_managedmaterials_options 1\nBK3500          mesh_standard       K3500-Tex.png       K3500_S.png\nK3500_Frame     mesh_standard       Chassis_Bake.png        Chassis_Bake_S.png\nGrille_Cheyenne     mesh_standard       Grille_Cheyenne.png     Grille_Cheyenne_S.png\nK3500_SteeringWheel mesh_standard       K3500_SteeringWheel.png     -\nK3500_Badge     mesh_standard       K3500_Badge.png     K3500_Badge.png\nK3500_Badge1        mesh_standard       K3500_Badge_GMC.png K3500_Badge_GMC.png\nMirror_3        mesh_standard       Mirror_3.png        Mirror_3.png\nEngine_Bay      mesh_standard       Engine_Bay.png      Engine_Bay_S.png\nEngine_454      mesh_standard       Engine_454.png      Engine_454_S.png\nGrille_WT       mesh_standard       Grille_WT.png       Grille_WT_S.png\nK3500_Exhaust       mesh_standard       Exhaust-Tex.png     Exhaust_S.png\nKodiak_Interior     mesh_standard       Kodiak_Interior.png\nKodiak_Windows      mesh_transparent     Kodiak_Windows.png Kodiak_Windows_s.png\nKodiak_Mirrors      mesh_standard       Mirrors-Tex.png     Mirrors-Tex.png\nTOYOOC          mesh_standard       Toyo-OC.png\nK3500_Wheel     mesh_standard       K3500_Wheel.png     K3500_Wheel_S.png\nBFGA            mesh_standard       BFGA.png        Black.png\nDWindow         mesh_standard       Dwindow.png     Dwindow_S.png\n</code></pre> <p>The readme for this wheel contains the following <code>managedmaterials</code> lines:</p> <pre><code>5SpokeRim       mesh_standard       5SpokeRim.dds       5SpokeRim.dds\nMudTerrains         mesh_standard       MudTerrain.dds      MudTerrain_s.dds\nHub         mesh_standard       Hubed.dds       -\n</code></pre> <p>Paste the lines at the bottom of the <code>managedmaterials</code> section. Example:</p> <pre><code>managedmaterials\nset_managedmaterials_options 1\nBK3500          mesh_standard       K3500-Tex.png       K3500_S.png\nK3500_Frame     mesh_standard       Chassis_Bake.png        Chassis_Bake_S.png\nGrille_Cheyenne     mesh_standard       Grille_Cheyenne.png     Grille_Cheyenne_S.png\nK3500_SteeringWheel mesh_standard       K3500_SteeringWheel.png     -\nK3500_Badge     mesh_standard       K3500_Badge.png     K3500_Badge.png\nK3500_Badge1        mesh_standard       K3500_Badge_GMC.png K3500_Badge_GMC.png\nMirror_3        mesh_standard       Mirror_3.png        Mirror_3.png\nEngine_Bay      mesh_standard       Engine_Bay.png      Engine_Bay_S.png\nEngine_454      mesh_standard       Engine_454.png      Engine_454_S.png\nGrille_WT       mesh_standard       Grille_WT.png       Grille_WT_S.png\nK3500_Exhaust       mesh_standard       Exhaust-Tex.png     Exhaust_S.png\nKodiak_Interior     mesh_standard       Kodiak_Interior.png\nKodiak_Windows      mesh_transparent     Kodiak_Windows.png Kodiak_Windows_s.png\nKodiak_Mirrors      mesh_standard       Mirrors-Tex.png     Mirrors-Tex.png\nTOYOOC          mesh_standard       Toyo-OC.png\nK3500_Wheel     mesh_standard       K3500_Wheel.png     K3500_Wheel_S.png\nBFGA            mesh_standard       BFGA.png        Black.png\nDWindow         mesh_standard       Dwindow.png     Dwindow_S.png\n5SpokeRim       mesh_standard       5SpokeRim.dds       5SpokeRim.dds\nMudTerrains         mesh_standard       MudTerrain.dds      MudTerrain_s.dds\nHub         mesh_standard       Hubed.dds       -\n</code></pre> <p>For more info on <code>managedmaterials</code>, see: Managedmaterials</p>"},{"location":"tools-tutorials/addons/#meshwheels","title":"Meshwheels","text":"<p>Before we continue, a few notes:</p> <ul> <li> <p>Some wheels may include a tire with the wheel mesh, in this case you'll have to set the tire material to <code>tracks/trans</code>. The examples below already have it set. </p> </li> <li> <p>Some wheels may have the tire as a separate mesh, in this case see: Flexbody wheels</p> </li> <li> <p>If the wheel is inside out ingame, swap the <code>l</code> and <code>r</code> values before the mesh name. The second example below had to be swapped.</p> </li> </ul> <p>With that said, scroll down until you find the <code>meshwheels</code> section. You will see the following:</p> <pre><code>meshwheels\n;tire_radius, rim_radius, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass,   spring, damping, side,               meshname         material\n0.43,       0.2785,   0.5,      12,    84,    86,    9999,      1,         1,   6, 160.0, 190000.0,  1200.0,    r,   ToyoOC_Wheel.mesh tracks/trans\n0.43,       0.2785,   0.5,      12,    85,    87,    9999,      1,         1,   6, 160.0, 190000.0,  1200.0,    l,   ToyoOC_Wheel.mesh tracks/trans\n0.43,       0.2785,   0.5,      12,    95,    96,     9999,      1,         1,  6, 160.0, 190000.0,  1200.0,    r,   ToyoOC_Wheel.mesh tracks/trans\n0.43,       0.2785,   0.5,      12,    103,   105,    9999,      1,         1,  6, 160.0, 190000.0,  1200.0,    l,   ToyoOC_Wheel.mesh tracks/trans\n</code></pre> <p>Replace <code>ToyoOC_Wheel.mesh</code> with your wheel mesh, in this case <code>5SpokeRim.mesh</code>:</p> <pre><code>meshwheels\n;tire_radius, rim_radius, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass,   spring, damping, side,               meshname         material\n0.43,       0.2785,   0.5,      12,    84,    86,    9999,      1,         1,   6, 160.0, 190000.0,  1200.0,    l,   5SpokeRim.mesh tracks/trans\n0.43,       0.2785,   0.5,      12,    85,    87,    9999,      1,         1,   6, 160.0, 190000.0,  1200.0,    r,   5SpokeRim.mesh tracks/trans\n0.43,       0.2785,   0.5,      12,    95,    96,     9999,      1,         1,  6, 160.0, 190000.0,  1200.0,    l,   5SpokeRim.mesh tracks/trans\n0.43,       0.2785,   0.5,      12,    103,   105,    9999,      1,         1,  6, 160.0, 190000.0,  1200.0,    r,   5SpokeRim.mesh tracks/trans\n</code></pre> <p>For more info on meshwheels, see: Meshwheels</p> <p>You can now save &amp; close the truck file. </p>"},{"location":"tools-tutorials/addons/#packaging_1","title":"Packaging","text":"<p>All that's left to do is to move the truck file, textures, and mesh back into the vehicle zip. </p> <p>If the part includes multiple textures, you can only copy the files required by the <code>managedmaterials</code> section.</p>"},{"location":"tools-tutorials/addons/#in-game_1","title":"In-game","text":"<p>Now it's time to test your newly installed wheel in-game. If you followed this tutorial exactly, you should now have new wheels on your K3500! </p> <p></p>"},{"location":"tools-tutorials/addons/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tools-tutorials/addons/#part-doesnt-appear-ingame","title":"Part doesn't appear ingame","text":"<p>If the part doesn't appear ingame, make sure you saved and copied the correct files into the zip and did all <code>.truck</code> file edits correctly.</p> <p>Some parts may require you to adjust the prop/flexbody placement. Press <code>E</code> twice to make sure it's not under the map. </p>"},{"location":"tools-tutorials/addons/#whitepink-textures","title":"White/pink textures","text":"<p>If the part appears as white or pink ingame, you set the wrong <code>managedmaterials</code> lines or didn't copy the <code>.material</code> file. </p> <p>If you need help finding the material name, see the second note in Managedmaterials</p>"},{"location":"tools-tutorials/addons/#conclusion","title":"Conclusion","text":"<p>You should now know the basics of installing addon parts in Rigs of Rods. I hope this answers most questions people have. Please contact the staff if you'd like any more examples added.</p>"},{"location":"tools-tutorials/blender-mesh-editing/","title":"Blender (2.7) mesh editing","text":""},{"location":"tools-tutorials/blender-mesh-editing/#introduction","title":"Introduction","text":"<p>Rigs of Rods is a game that is very easy to modify. This tutorial will help you get started on editing meshes using Blender, from installing the add-ons to exporting.</p> <p>We assume you already have some basic knowledge on using Blender (navigating UI, basic object editing, etc). There are plenty of tutorials available on YouTube or many other websites.</p> <p>We'll also assume you are running Windows, however these instructions should mostly apply to Linux users.</p> <p>Please read everything carefully and do not skip any steps.</p> <p>Disclaimer</p> <p>This page's purpose is not to teach you how to make content from scratch, nor is it meant to discourage anyone from doing so. It is simply for those who are interested in editing existing models. Editing existing content is the easiest way to learn how RoR's content creation works, and this page is meant to help you get started. We currently do not have a tutorial on how to make a mod from scratch.</p>"},{"location":"tools-tutorials/blender-mesh-editing/#required-software","title":"Required software","text":"<ul> <li>Rigs of Rods</li> <li>Blender 2.79</li> <li>Ogre Import/Export add-ons</li> <li>Ogre Command Line Tools</li> <li>(Optional) Notepad++</li> <li>(Optional) OgreMeshy</li> <li>A brain, some basic computer knowledge, and some patience</li> </ul>"},{"location":"tools-tutorials/blender-mesh-editing/#blender-version-warning","title":"Blender version warning","text":"<p>This page was written for Blender 2.79 and has not yet been updated for newer versions. For 2.8+ you can use the blender2ogre plugin to import/export meshes.</p> <p>When downloading Blender from the above link, avoid the versions in the <code>latest</code> folder! They do not support the addons. If you're unsure, download <code>blender-2.79-windows64.msi</code>.</p>"},{"location":"tools-tutorials/blender-mesh-editing/#getting-started","title":"Getting started","text":"<p>If you're following this tutorial, chances are you probably already have a mesh you want to edit. In this tutorial I'll be editing Box5Diesel's Ram EXT. Open the <code>.zip</code> file for the vehicle, and extract the correct <code>.mesh</code> file(s) and the textures (<code>.dds</code>, <code>.png</code>, etc) into a folder you can easily access:</p> <p></p> <p>Next, download the Ogre Command Line Tools and extract the archive into a new folder. Inside you'll find <code>OgreXMLConverter.exe</code>.</p> <p>Now simply drag and drop the mesh onto <code>OgreXMLConverter.exe</code> to get a <code>.mesh.xml</code>:</p> <p></p> <p>You should now have a <code>.mesh.xml</code> file in the same folder:</p> <p></p> <p>We're ready to launch Blender now.</p>"},{"location":"tools-tutorials/blender-mesh-editing/#installing-blender-add-ons","title":"Installing Blender add-ons","text":"<p>First, download the latest Ogre Import/Export add-ons from GitHub (<code>RoR_ImportExport_*.zip</code>) and place it into any folder. Do not extract.</p> <p>Now open Blender. Click <code>File</code> -&gt; <code>User Preferences</code>:</p> <p></p> <p>Click <code>Add-ons</code> -&gt; <code>Install from File</code>:</p> <p></p> <p>Select the <code>RoR_ImportExport_*.zip</code> file you downloaded earlier.</p> <p>Type <code>rigs</code> into the search bar and both add-ons should appear:</p> <p></p> <p>Once both add-ons are enabled by clicking the checkbox, select <code>Save User Settings</code>:</p> <p></p> <p>You can now close the <code>User Preferences</code> window. </p>"},{"location":"tools-tutorials/blender-mesh-editing/#importing-the-mesh","title":"Importing the mesh","text":"<p>Select <code>File</code> -&gt; <code>Import</code> -&gt; <code>Ogre3D (.mesh.xml)</code>:</p> <p></p> <p>Find &amp; select the <code>.mesh</code> file.</p> <p></p> <p>You should now see something similar to this:</p> <p></p> <p>Press the <code>Z</code> key twice to get out of that shading mode. You should now see this:</p> <p></p> <p>Warning</p> <p>The importer will automatically separate meshes if the <code>.mesh.xml</code> contains multiple materials. The object names match the material name. If there's many objects with the same material name, you should be safe to join them by pressing <code>CTRL+J</code>:</p> <p></p> <p>It should look similar to this now:</p> <p></p>"},{"location":"tools-tutorials/blender-mesh-editing/#fixing-object-shading","title":"Fixing object shading","text":"<p>You'll probably notice that your mesh is very blocky and/or has lots of shading errors. To fix this:</p> <p>On the left menu (Press <code>T</code> if it's not already open) select <code>Smooth</code>. You need to be in Object Mode (<code>TAB</code> key) for this to appear:</p> <p></p> <p>Now press the <code>TAB</code> key again to go into Edit Mode:</p> <p></p> <p>Select <code>Remove Doubles</code> from the <code>T</code> menu:</p> <p></p> <p>Now head over to the tool menu on the right and find the blue wrench icon -&gt; <code>Add Modifier</code> -&gt; <code>Edge Split</code>:</p> <p></p> <p>The <code>Edge Split</code> Modifier should now be selected. The default <code>Split Angle</code> (30) should be fine in most cases. Do not apply the modifier. The exporter will do this for you.</p> <p></p> <p>Note</p> <p>For some models just applying edge split won't be enough, further work may be required (such as marking faces sharp).**</p>"},{"location":"tools-tutorials/blender-mesh-editing/#applying-the-texture","title":"Applying the texture","text":"<p>Now we can apply the texture. Press the <code>TAB</code> key to go into Edit Mode if you're not in it already and click the circle icon on the bottom left -&gt; <code>UV/Image Editor</code>:</p> <p></p> <p>The <code>UV/Image Editor</code> should now be open:</p> <p></p> <p>Select <code>Open</code> from the bottom bar:</p> <p></p> <p>Find &amp; select your texture file:</p> <p></p> <p>The texture file should now be open in the <code>UV/Image Editor</code>. </p> <p>Now go to the top right and find the little plus icon, or press <code>N</code> to open it:</p> <p></p> <p>Open the <code>Shading</code> menu and click <code>Textured Solid</code>:</p> <p></p> <p>It should now look similar to this:</p> <p></p>"},{"location":"tools-tutorials/blender-mesh-editing/#editing-the-mesh","title":"Editing the mesh","text":"<p>You're now ready to start editing the mesh. For this tutorial, I removed the exhaust stacks from the bed:</p> <p></p>"},{"location":"tools-tutorials/blender-mesh-editing/#setting-the-object-name","title":"Setting the object name","text":"<p>In the outliner (object list), double-click the object name to rename it. This will be the name of your mesh when exporting.</p> <p></p> <p>In this example, I'll name it <code>BoxDodgeCummins-NoStacks</code>.</p>"},{"location":"tools-tutorials/blender-mesh-editing/#adding-a-material","title":"Adding a material","text":"<p>Now select the circle icon next to the triangle icon and click <code>New</code>:</p> <p></p> <p>The easiest way to find the material name is by opening the <code>.mesh.xml</code> file in a text editor and search \"material\":</p> <p></p> <p></p>"},{"location":"tools-tutorials/blender-mesh-editing/#exporting","title":"Exporting","text":"<p>Before we export, if you moved the object while editing it you will need to apply <code>Location/Rotation/Scale</code> by pressing <code>CTRL+A</code> otherwise it will be placed incorrectly in-game:</p> <p></p> <p>Select your mesh then click <code>File</code> -&gt; <code>Export</code> -&gt; <code>Ogre3D (.scene and .mesh.xml)</code>:</p> <p></p> <p>Change your export settings to match the screenshot (all other settings can be left to their defaults):</p> <p></p> <p>You should now have a new <code>.mesh.xml</code> and <code>.mesh</code> file in your folder:</p> <p></p> <p>The exporter will automatically convert the <code>.mesh.xml</code> to <code>.mesh</code> as long RoR is installed to the default location.</p> <p>If you want to preview your exported model, you can use OgreMeshy to view it: (You can make a <code>.material</code> file if you want it to be textured in OgreMeshy)</p> <p></p>"},{"location":"tools-tutorials/blender-mesh-editing/#testing-in-game","title":"Testing in-game","text":"<p>Now just edit the vehicle's <code>.truck</code> file to match the name of your new mesh and drag the new mesh file back into the <code>.zip</code> and test in-game:</p> <pre><code>17,14,2, 0.73, 0.5, 0.07, 0, 0, 0, BoxDodgeCummins-NoStacks.mesh\nforset 7, 12, 40, 41, 44-66, 69-87, 111\n</code></pre> <p></p> <p>Congratulations!</p>"},{"location":"tools-tutorials/blender-mesh-editing/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tools-tutorials/blender-mesh-editing/#error-2-no-such-file-or-directory","title":"[Error 2] No such file or directory","text":"<p>You forgot to convert the <code>.mesh</code> to <code>.mesh.xml</code>, as described in the Getting started section.</p> <p>Warning</p> <p>On Linux there is currently a bug preventing <code>.mesh.xml</code> imports in uppercase paths (e.g. <code>/home/user/Downloads/rorimportfiles</code>. You will have to place the <code>.mesh</code> and <code>.mesh.xml</code> files into a different folder without uppercases (e.g. <code>/home/user/rorimportfiles</code>)</p>"},{"location":"tools-tutorials/blender-mesh-editing/#mesh-is-rotated-incorrectly","title":"Mesh is rotated incorrectly","text":"<p>Change the \"swap axis\" option in the export settings:</p> <p></p> <p>Rigs of Rods meshes require the axis to be swapped to <code>xz-y</code> due to differences in the axises between RoR and Blender:</p> <p>In RoR x is front-back, y is up-down, z is side to side</p> <p>In Blender x is side to side, z is up-down, y is front-back</p>"},{"location":"tools-tutorials/blender-mesh-editing/#mesh-appears-whiteblackpink","title":"Mesh appears white/black/pink","text":"<p>You did not assign the correct material or you named it incorrectly. Make sure it matches.</p> <p>White/pink means the game can't find the material, while black means the game found the material but not the texture.  You can search the mesh name in your RoR.log to find the error. </p>"},{"location":"tools-tutorials/blender-mesh-editing/#other-errors","title":"Other errors","text":"<p>If you're experiencing issues, you can create a thread on the content creation forum or join the RoR Discord and ask in the #modding channel.</p>"},{"location":"tools-tutorials/branding/","title":"Branding","text":""},{"location":"tools-tutorials/branding/#usage-guidelines","title":"Usage Guidelines","text":"<p>Rigs of Rods is a soft-body physics simulator aiming to be as realistic as possible. Everything we do is free and open source to the general public. That said, we take branding seriously and maintain a quality. Please do not edit, change, distort, recolor, or reconfigure the Rigs of Rods logo.</p> The Standard Logo The Logotype The Symbol .svg or .png .svg or .png .svg or .png Logotype reversed to White The Symbol with Background The Symbol with Typeface below The Symbol Alternate .svg or .png"},{"location":"tools-tutorials/branding/#typeface","title":"Typeface","text":"<p>We use Maven Pro as our typeface font.</p>"},{"location":"tools-tutorials/branding/#color-palette","title":"Color Palette","text":"RoR Blue RoR Red RoR Purple <code>#226699</code> <code>#882500</code> <code>#3d0155</code>"},{"location":"tools-tutorials/contributing-github/","title":"How to contribute to community projects using GitHub","text":""},{"location":"tools-tutorials/contributing-github/#preparation","title":"Preparation","text":"<p>This tutorial assumes you already have: * A registered GitHub Account * GitHub Desktop downloaded and installed * You are logged into GitHub</p>"},{"location":"tools-tutorials/contributing-github/#forking-the-repository","title":"Forking the repository","text":"<p>Go to the Rigs of Rods community website on GitHub. Click on the project you want to work on (<code>baker-ranch-v2</code> in this example). </p> <p></p> <p>You will now see the projects repository. The repository contains all assets bound to this project (e.g. terrain configuration files, textures and meshes for maps).</p> <p></p> <p>Click the <code>Fork</code> button at the top right</p> <p></p> <p>The repository should now fork to your profile. Once it's done, you should be redirected to your new fork:</p> <p></p> <p>Verify you are viewing your own repository (indicated by <code>your username</code>/<code>project name</code> with <code>forked from ...</code> subtitle)</p>"},{"location":"tools-tutorials/contributing-github/#cloning-your-local-repository","title":"Cloning your local repository","text":"<p>Click on <code>Clone or download</code> then <code>Open in Desktop</code>:</p> <p></p> <p>After you click on <code>Open in Desktop</code> a dialog will appear. This dialog will be different depending on the web browser you are using. </p> <p>Make sure <code>GitHubDesktop.exe</code> is highlighted and hit <code>Open link</code>.</p> <p>If you have no option here you need to install GitHub Desktop (see Preparation). </p> <p></p> <p>GitHub Desktop will open and ask you where it should put the files so you can work on them. </p> <p>Select the place where you'd like to have them (Desktop in this example). </p> <p></p> <p>Click <code>Clone</code> then wait for the download to finish. </p> <p></p> <p>After the download is finished, open the project's folder by clicking <code>Repository</code> -&gt; <code>Show in Explorer</code></p> <p></p>"},{"location":"tools-tutorials/contributing-github/#making-changes","title":"Making changes","text":"<p>In this folder you work on the project like you would usually do.</p>"},{"location":"tools-tutorials/contributing-github/#committing-to-your-local-repository","title":"Committing to your local repository","text":"<p>This step assumes you are done with your changes and made sure they work and are bugfree.</p> <p>So far all changes are offline on your computer. To contribute to the project you have to upload (commit) them.</p> <ol> <li> <p>Open GitHub Desktop. It will show the changes you have made. Check/uncheck the changed files you want to upload in one commit (it's good practice to do one commit per change. If you don't understand what this means yet don't worry, it will come with time).</p> </li> <li> <p>Enter a commit message explaining your change(s). If your changes are big or you want to add a comment use the description field for additional information. This is usually not necessary.</p> </li> <li> <p>Click on <code>Commit to master</code> </p> </li> </ol> <p></p> <p>Your changes are now saved into the git subsystem but they are still offline...</p> <p></p>"},{"location":"tools-tutorials/contributing-github/#uploading-to-github","title":"Uploading to GitHub","text":"<p>You'll see a confirmation that your commit has been saved. Notice your changes are now in the <code>History</code> tab.</p> <p>To upload your changes click on <code>Push origin</code>:</p> <p></p>"},{"location":"tools-tutorials/contributing-github/#creating-a-pull-request","title":"Creating a pull request","text":"<p>Now your changes are online but they are not in the central repository just yet. </p> <p>As of now they are only stored in your personal repository. </p> <p>To contribute to the project they have to be \"merged\" into the central repository.</p> <p>Open your personal repository on GitHub in your browser by clicking <code>Repository</code> -&gt; <code>View on GitHub</code>.</p> <p>Notice it's telling you your branch is <code>x commits ahead of y</code>. This means you have changes which are not in the central repository yet.</p> <ol> <li>Click on <code>New pull request</code></li> </ol> <p></p> <p>On the next page you can review your changes again and start a pull request. Click <code>Create pull request</code></p> <p></p> <ol> <li>Enter a description for your pull request</li> <li>Since pull request can contain multiple commits and changes you may want to deliver more information in the description section (optional) </li> <li>Click \"Create pull request\"</li> </ol> <p></p> <p>You just created a pull request. </p> <p>Your changes will be reviewed by the project's admins to ensure the overall quality of the project and to prevent trolls. You can review the status of your request at your pull request page. </p> <ul> <li>open (= pending)</li> <li>merged (= merged into central repository) </li> <li>closed (= not accepted)</li> </ul> <p>Often there will be a discussion about your changes. Admins will inform you about bugs, things they don't like etc. You should listen to them and adapt your changes accordingly.</p> <p>If someone replied to your pull request you will be notified by the GitHub interface. The GitHub icon at the top right of the page will have a blue dot to inform you about replies (similar to Facebook or Google+).</p>"},{"location":"tools-tutorials/contributing-github/#keeping-your-local-repository-updated","title":"Keeping your local repository updated","text":"<p>To keep your local repository updated with the main repository:</p> <p>First, you'll need to get the url for the main repository. </p> <p>To do this, go to the repository you forked from (In this example <code>RigsOfRods-Community/baker-ranch-v2</code>) then click <code>Clone or download</code>.</p> <p>The url that appears under <code>Clone with HTTPS</code> is the url. Save this as you'll need it later.</p> <p></p> <p>In GitHub Desktop, click <code>Repository</code> -&gt; <code>Open in Command Prompt</code></p> <p></p> <p>A Command Prompt window will open. </p> <p>Type these commands one at a time:</p> <pre><code>git remote add upstream url\n\ngit fetch upstream\n\ngit merge upstream/master --no-commit\n</code></pre> <p><code>url</code> being the url you found earlier. Example: <code>https://github.com/RigsOfRods-Community/baker-ranch-v2.git</code></p> <p>The <code>master</code> branch name might be different depending on the repository. For example the Community Map's default branch is <code>Default</code>.</p> <p>Then in GitHub Desktop click <code>Push to origin</code>. After it's done, when you check your repository on GitHub it should now say <code>This branch is even with RigsOfRods-Community:master.</code>:</p> <p></p>"},{"location":"tools-tutorials/docs-contributing-guide/","title":"Docs Contributing Guide","text":"<p>Thank you for your interest in contributing to the Rigs of Rods project documentation. This guide will walk you through the process of setting up your environment, making changes, and submitting your contributions. The documentation is built using MkDocs with the Material for MkDocs theme and deployed directly to GitHub Pages.</p> Make Quick Edits with the \"\" Icon <p>Every page has a \"\" icon in the top-right corner. Clicking this icon will take you directly to the source file on GitHub, where you can make edits and propose changes without needing to clone the repository locally. This comes in handy for small fixes like typos, broken links, or minor clarifications.</p>"},{"location":"tools-tutorials/docs-contributing-guide/#prerequisites","title":"Prerequisites","text":"<p>Before you start, ensure you have the following installed:</p> <ul> <li>git: To clone the repository and push your changes.</li> <li>Python 3.9+: MkDocs is a Python-based tool.</li> <li>pip: Python package manager, which is usually bundled with Python itself.</li> </ul> <p>You can alternatively use something like GitHub Desktop in place of using git itself.</p>"},{"location":"tools-tutorials/docs-contributing-guide/#setting-up-your-environment","title":"Setting Up Your Environment","text":"<ol> <li>Fork the Repository:<ul> <li>Fork the repository on GitHub to your own personal GitHub account.</li> </ul> </li> <li>Clone your Fork:     <pre><code>$ git clone https://github.com/&lt;YOUR_USERNAME&gt;/docs.rigsofrods.org ror-docs\n$ cd ror-docs\n</code></pre></li> <li>Set Up a Virtual Environment (optional, but recommended):     <pre><code>$ python -m venv venv\n$ source venv/bin/activate # On Windows, use `venv/Scripts/activate`\n</code></pre></li> <li>Install Dependencies:     <pre><code>pip install -r requirements.txt\n</code></pre></li> </ol>"},{"location":"tools-tutorials/docs-contributing-guide/#making-changes","title":"Making Changes","text":"<ol> <li>Create a New Branch:     <pre><code>$ git checkout -b my-cool-change\n</code></pre></li> <li>Make Your Changes:<ul> <li>The documentation is written in Markdown (<code>.md</code>) and located in the <code>source/</code> directory.</li> </ul> </li> <li>Update the Navigation:<ul> <li>Open <code>mkdocs.yml</code> at the root directory.</li> <li>Add the new page to the <code>nav:</code> section, for example: <pre><code>nav:\n    - My new page: tools-tutorials/my-new-page.md\n</code></pre></li> </ul> </li> </ol>"},{"location":"tools-tutorials/docs-contributing-guide/#previewing-your-changes","title":"Previewing Your Changes","text":"<ol> <li>Run the MkDocs Development Server:     <pre><code>$ mkdocs serve\n</code></pre><ul> <li>This will start a local server at <code>http://127.0.0.1:8000/</code> where you can preview your changes in real-time.</li> </ul> </li> <li>Check for Errors:<ul> <li>Ensure there are no build errors or broken links. MkDocs will display errors in the terminal if any exist.</li> </ul> </li> </ol>"},{"location":"tools-tutorials/docs-contributing-guide/#submitting-your-contributions","title":"Submitting Your Contributions","text":"<ol> <li>Commit Your Changes:     <pre><code>$ git add .\n$ git commit -m \"Your descriptive commit message\"\n</code></pre></li> <li>Push to Your Fork:     <pre><code>git push\n</code></pre></li> <li>Create a Pull Request (PR):<ul> <li>Go to your fork on GitHub and click \"Compare &amp; Pull Request.\"</li> <li>Write a clear title and description for your PR, explaining the changes you made.</li> <li>Submit the PR and wait for feedback from the maintainers.</li> </ul> </li> </ol>"},{"location":"tools-tutorials/docs-contributing-guide/#style-guide","title":"Style Guide","text":"<p>To maintain consistency across the documentation, please follow these guidelines:</p> <ol> <li>Markdown Formatting:<ul> <li>Use headings (<code>#</code>, <code>##</code>, <code>###</code>) to structure your content.</li> <li>Use fenced code blocks for code snippets: <pre><code>```python\nprint(\"Hello world\")\n</code></pre></li> </ul> </li> <li>Language and Tone<ul> <li>Use clear, concise, and friendly language.</li> <li>Write in an active voice whenever possible.</li> </ul> </li> <li>Admonitions:<ul> <li>Use Material for MkDocs admonitions to highlight important information: <pre><code>!!! note\n    This is a note.\n</code></pre></li> </ul> </li> <li>Links:<ul> <li>Use relative links for internal documentation pages.</li> <li>Use descriptive anchor text for external links.</li> </ul> </li> </ol>"},{"location":"tools-tutorials/docs-contributing-guide/#code-of-conduct","title":"Code of Conduct","text":"<p>By contributing, you agree to follow our Contributor Code of Conduct. Please be respectful and inclusive in all interactions.</p> <p>Finally, thank you for contributing to the Rigs of Rods project and community! Your efforts will help make the project better for everyone.</p>"},{"location":"tools-tutorials/editor-nodeSnap/","title":"nodeSnap","text":""},{"location":"tools-tutorials/editor-nodeSnap/#introduction","title":"Introduction","text":"<p>nodeSnap is a new open source truck editor heavily inspired by the old rorEditorizer.</p> <p>This tutorial will show you how to use and manipulate nodeSnap (version 0.1.1-beta)</p>"},{"location":"tools-tutorials/editor-nodeSnap/#get-started","title":"Get started","text":"<p>You can download nodeSnap from the repository following this link.</p> <p>The current version is a stand-alone app (which means, it doesn't require an installer) so you will find it in a zip format.</p> <p>You might ask: But why is it ~67MB while rorEditorizer is ~729KB?</p> <p>nodeSnap is built using new technologies, such as Electron and node.js. That might be overkill for this application, but that's how it became possible in the first place. Next versions will make that size worth it with much more features.</p> <p>After downloading the zip file, you can put it anywhere you want. I moved it to my desktop.</p> <p>Extract it to a folder (important)</p> <p>Then double click on \"nodeSnap\" to run it.</p>"},{"location":"tools-tutorials/editor-nodeSnap/#create-a-new-truck-file","title":"Create a new truck file","text":"<p>To create a new truck file, all you have to do is to click on \"New File\" under \"Actions\" and fill up the form, then click on \"Next\".</p>"},{"location":"tools-tutorials/editor-nodeSnap/#open-a-truck-file","title":"Open a truck file","text":"<p>To open a truck file, simply click on \"Open file\" under \"Actions\" and navigate to your desired truck file.</p> <p>Note: nodeSnap supports all of RoR's truck file extensions.</p>"},{"location":"tools-tutorials/editor-nodeSnap/#interface","title":"Interface","text":"<p>nodeSnap's UI looks like rorEditorizer. On the left side, we have a sidebar that shows you all the nodes and beams with their details and on the top, we have a toolbar that contains functions.</p> <p>In the middle, we have 4 views: Top, Side, Front, and 3D. The first three views are orthographic and the last one is a perspective view. In the middle of the views, you have a selector that you can drag to resize the views. On each view, you have a 'viewCube' (3ds max inspired) that can help you get to certain angles easily. (currently works only on the 3D view)</p> <p>On the sidebar, click on the \"Other\" tab, click on \"Settings\" button to access the current editor's settings. These settings allow you to change the grid size (it affects node snapping), to change a visual node's size and to toggle node names.</p> <p>Note: These settings are saved as preferences for each truck file you make/edit in a \".nodeSnap\" folder that you can find in the root truck file's directory.</p>"},{"location":"tools-tutorials/editor-nodeSnap/#controls","title":"Controls","text":"Camera: <ul> <li>Right click + mouse move =&gt; move camera around</li> <li>             Left click + mouse move (Only on perspective view aka 3D view)             =&gt; rotate on axis       </li> <li>Mouse wheel =&gt; Zoom</li> </ul> Editor: <ul> <li>CTRL + N =&gt; truck mode (default)</li> <li>CTRL + B =&gt; blueprint mode</li> <li>             Truck Mode:             <ul> <li>Mouse double left click =&gt; new node</li> <li>                   Mouse double left click + CTRL =&gt; new node snapped on                   grid                </li> <li>Mouse click on a node + drag =&gt; Move node around</li> <li>                   Mouse click on a node + drag + CTRL =&gt; Move node around                   with grid snapping to the preset value                </li> <li>                   CTRL + SHIFT + click node1 + click node2 =&gt; Creates a                   beam + shows a temporary blue line before you click on                   the second node                </li> </ul> </li> <li>             Blueprint Mode:             <ul> <li>Mouse + gizmo =&gt; transform</li> <li>Key \"S\" =&gt; scale mode</li> <li>Key \"R\" =&gt; rotate mode</li> <li>Key \"T\" =&gt; translate mode</li> </ul> </li> </ul>"},{"location":"tools-tutorials/editor-nodeSnap/#functions","title":"Functions","text":"<p>nodeSnap includes a few useful functions to make your editing experience easier.</p> <p>We will use this simple structure as an example.</p> <p>A structure is an N/B, either the whole N/B or an N/B inside of a group.</p> <p>You can right click on a node in one of the views for a menu</p>"},{"location":"tools-tutorials/editor-nodeSnap/#grouping","title":"Grouping","text":"<p>nodeSnap supports RoR's grouping and adds a few more functions to that. To add a new group, right click on a node, a window will ask you to name that group, and after clicking apply, nodeSnap will add that group affecting that node and all nodes after it.</p> <p>After you add a new group, nodeSnap will offer you a few functions when you right click on the group.</p> <p>The functions are self explanatory.</p>"},{"location":"tools-tutorials/editor-nodeSnap/#duplicate-a-group","title":"Duplicate a group","text":"<p>Instead of remaking the exact same structure somewhere else, nodeSnap offers a function to duplicate the current structure in a group and place it anywhere else you want.</p> <p>nodeSnap allows you to do an offset on the specified axis.</p> <p>All you have to do is to specify the offset (in RoR's one unit of distance) and how many times you want to duplicate the structure</p> <p>nodeSnap also allows you to do a mirror on the specified axis.</p> <p>Note: You do not have to care about overlapped nodes after duplication, because nodeSnap takes care of that automatically. Note 2: nodeSnap does not copy beams that are connected between any node inside the group and an other node outside the group, keep reading for the solution.</p>"},{"location":"tools-tutorials/editor-nodeSnap/#toolbar","title":"Toolbar","text":"<p>On the toolbar, we have two drop down menus: \"Edit\" and \"File\"</p>"},{"location":"tools-tutorials/editor-nodeSnap/#edit-menu","title":"Edit menu","text":"<p>The edit menu has a few interesting functions. The \"Scale\" function gives you the ability to scale the whole n/b. The \"Move\" functions moves the whole n/b by an offset on a specified axis. The \"Rotate\" function rotates the whole n/b on a specified axis with a given angle in degrees.</p> <p>The \"Duplicate Visible\" function solves one problem you have when duplicating groups. Instead of duplicating a specific group, all you have to do is to hide all the nodes/groups that you do not want to duplicate, and execute the function, just like duplicating a group.</p>"},{"location":"tools-tutorials/editor-nodeSnap/#file-menu","title":"File menu","text":"<p>The functions are pretty much self explanatory.</p> <p>Note: nodeSnap has an integrated file watcher. This means that whenever you edit your truck file using a text-editor, nodeSnap will automatically reload the file. Note 2: nodeSnap has a backup system. Each time you save your file, nodeSnap will make a backup of the previous truckfile and store it inside the \".nodeSnap\" folder that is found in the root truck file's directory, ordered by a timestamp. Note 3: nodeSnap is based on a \"project\" system, which means, if you leave the editor and go back to the project page, your work will not be lost and you will have an option to go back to your work. (this is integrated for future features)</p>"},{"location":"tools-tutorials/editor-nodeSnap/#blueprint-system","title":"Blueprint system","text":"<p>Like any 3D editor, you can load a blueprint in nodeSnap by going to the sidebar, clicking on the \"Other\" tab, and clicking on the \"Load Blueprint\"</p> <p>Note: nodeSnap saves your blueprint data as preference and loads it again whenever you load the truck file again. </p>"},{"location":"tools-tutorials/editor-nodeSnap/#image","title":"Image","text":"<p>On the \"Image\" tab, select your file and press \"Add\"</p> <p>You can switch to blueprint mode (CTRL+B) and reposition, scale or rotate the blueprint by pressing (T, S, R) keys respectively.</p> <p>And then go back to truck editor mode using (CTRL+N)</p>"},{"location":"tools-tutorials/editor-nodeSnap/#3d-model","title":"3D Model","text":"<p>On the \"3D Model\" tab, select your file and press \"Add\"</p> <p>Again, you can switch to blueprint mode (CTRL+B) and reposition, scale or rotate the model by pressing (T, S, R) keys respectively.</p> <p>Note: nodeSnap supports only ogre's XML files (\".mesh.xml\") or Wavefront object file (\".obj\")</p>"},{"location":"tools-tutorials/editor-nodeSnap/#conclusion","title":"Conclusion","text":"<p>nodeSnap is made to make editing N/Bs an easy task that anyone can do.</p> <p>For feature requests or bug reporting, please click this link</p>"},{"location":"tools-tutorials/modding-suspension/","title":"Modding basics: Suspension (lifting, lowering, width, camber)","text":"<p>This page will teach you how to lift or lower, change track/wheel width, and add camber to a vehicle in RoR.</p> <p>Please read everything thoroughly and don't skip any steps.</p>"},{"location":"tools-tutorials/modding-suspension/#lifting-and-lowering","title":"Lifting and lowering","text":""},{"location":"tools-tutorials/modding-suspension/#precomp","title":"Precomp","text":"<p>The simple (and lazy) way of lifting or lowering a vehicle is by simply changing the precomp value in the shocks section.</p> <pre><code>shocks\n19, 23, 210000, 12000, .4, .2, 1, i\n22, 1, 210000, 12000, .4, .2, 1, i\n8, 26, 320000, 18000, .4, .2, 1, i\n27, 10, 320000, 18000, .4, .2, 1, i\n</code></pre> <p>It is the last value before options. In this example it is currently at the default of <code>1</code>. To lift, increase the value and decrease to lower:</p> <pre><code>;lift\n\nshocks\n19, 23, 210000, 12000, .4, .2, 1.3, i\n22, 1, 210000, 12000, .4, .2, 1.3, i\n8, 26, 320000, 18000, .4, .2, 1.3, i\n27, 10, 320000, 18000, .4, .2, 1.3, i\n\n;lower \n\nshocks\n19, 23, 210000, 12000, .4, .2, 0.85, i\n22, 1, 210000, 12000, .4, .2, 0.85, i\n8, 26, 320000, 18000, .4, .2, 0.85, i\n27, 10, 320000, 18000, .4, .2, 0.85, i\n</code></pre> <p>The effectiveness of this method depends on the suspension geometry. Solid axles work the best, while most independent suspension vehicles can't be lifted with this.</p> <p>Changing precomp forces the shock to expand or compress. This can cause beams to deform or break on weaker (deformable) N/Bs.</p> <p></p>"},{"location":"tools-tutorials/modding-suspension/#moving-nodes-with-blender","title":"Moving nodes with Blender","text":"<p>The correct way to lift or lower a vehicle is by moving the axle nodes. The easiest way to do this is with Blender.</p>"},{"location":"tools-tutorials/modding-suspension/#prerequisites","title":"Prerequisites","text":"<ul> <li>Blender </li> </ul> <p>We'll be using the latest version (4.0 at the time of writing) but most steps should also apply to older versions.  </p> <ul> <li>Blender N/B Import/Export Plugin</li> </ul> <p>Install the 2.8+ version of the N/B plugin using these instructions. </p> <ul> <li>Notepad++ </li> </ul> <p>We'll be using some Notepad++ features to assist. </p>"},{"location":"tools-tutorials/modding-suspension/#preparing-truck-file-for-import","title":"Preparing truck file for import","text":"<p>For this tutorial, we'll be lowering the Gavril G2S. and lifting the Box Dodge Ram EXT.  These are two very commonly modified vehicles. </p> <p></p> <p>We need to prepare the files to be correctly imported into Blender. </p> <p>Begin by opening the vehicle zip file (<code>gavril23.zip</code> or <code>BoxDodgeRam.zip</code>) and find the truck file (<code>gavril.truck</code> or <code>BoxDodgeRamEXT.truck</code>)</p> <p>Move the truck file into a new folder. Now create a copy in the folder:</p> <p></p> <p>We'll be editing this copy to preserve the original truck file.</p>"},{"location":"tools-tutorials/modding-suspension/#node-vertex-groups","title":"Node (vertex) groups","text":"<p>Note</p> <p>The following two steps can be skipped with the Ram EXT as it doesn't feature any comments or <code>detacher_group</code> lines.</p> <p>Open the copied truck file in Notepad++ and scroll down to the nodes section:</p> <p>G2S: </p> <p>Ram EXT: </p> <p>The G2S nodes section is organized with comment lines. We'll convert the comments to groups so they'll become vertex groups when imported into Blender.</p> <p>Find the axle nodes, for this vehicle they are found under the running gear section:</p> <p></p> <p>Rename <code>front</code>/<code>rear</code> to <code>front axle</code>/<code>rear axle</code>. Doing this will prevent conflicts with other Blender vertex groups. </p> <p></p> <p>Now press <code>CTRL+H</code> to open the Replace window and set the following:</p> <p>Find what: <code>;</code></p> <p>Replace with: <code>;grp:</code></p> <p></p> <p>Click <code>Replace All</code>.  All comment lines are now a node group. </p> <p></p>"},{"location":"tools-tutorials/modding-suspension/#detacher-group-workaround","title":"Detacher group workaround","text":"<p>The G2S features <code>detacher_group</code> sections.  Due to a bug with the Blender RoR importer, detacher groups cause beams to be missing on import.</p> <p>To work around this, we need to comment all <code>detacher_group</code> lines. Do a replace all again, this time use the following:</p> <p>Find what: <code>detacher_group</code></p> <p>Replace with: <code>;detacher_group</code> </p> <p></p> <p>The file is now ready to be imported into Blender.</p>"},{"location":"tools-tutorials/modding-suspension/#blender","title":"Blender","text":""},{"location":"tools-tutorials/modding-suspension/#initial-setup","title":"Initial Setup","text":"<p>Note</p> <p>This tutorial assumes your keymap is set to Blender 2.7x. Some keys may be different with the default keymap. </p> <p>This setup only needs to be performed once. </p> <p>Open Blender and install the N/B plugin if you haven't already from the prerequisites.</p> <p>Once the N/B plugin is installed, click <code>Edit</code> -&gt; <code>Preferences</code> -&gt; <code>Interface</code> and enable Developer Extras, this enables the ability to toggle indices (nodes) visualization.</p> <p></p> <p>By default indices are a blue color which is difficult to read.  It is highly recommended to change the color by going to:</p> <p><code>Edit</code> -&gt; <code>Preferences</code> -&gt; <code>Themes</code> -&gt; <code>3D Viewport</code>:</p> <p></p> <p>Scroll until you find <code>Face Angle Text</code>. Change it to white or another an easier to see color.</p> <p>Close Preferences. </p>"},{"location":"tools-tutorials/modding-suspension/#importing","title":"Importing","text":"<p>Click <code>File</code> -&gt; <code>Import</code> -&gt; <code>Truck</code></p> <p></p> <p>Select the copied truck file, in this case <code>gavril - Copy.truck</code> or <code>BoxDodgeRamEXT - Copy.truck</code>. </p> <p>The N/B is now imported:</p> <p></p> <p></p> <p>Enter edit mode with Tab, then click <code>Mesh Edit Mode Overlays</code> at the top right and enable Indices:</p> <p></p> <p>Also click <code>Viewport Gizmos</code> and enable the move object gizmo:</p> <p></p> <p>Node IDs should now appear when selecting: </p> <p></p>"},{"location":"tools-tutorials/modding-suspension/#selecting-axle-nodes","title":"Selecting axle nodes","text":"<p>Press Numpad 3 to change view to right orthographic:</p> <p></p> <p>Now select the axle nodes. For vehicles without node groups, press <code>C</code> for circle select or <code>B</code> for box select. </p> <p>For truck files with node groups, click the data properties tab (green triangle icon), you should see a list of vertex groups:</p> <p></p> <p>Find the axle groups on the list, click on each axle group then click the Select button:</p> <p></p> <p>(Open in new tab to view full size)</p> <p>The axle nodes are now selected. Enable wireframe mode with <code>Z</code> for a better view:</p> <p></p> <p></p>"},{"location":"tools-tutorials/modding-suspension/#moving-nodes","title":"Moving nodes","text":"<p>With the axle nodes selected, click and drag the blue arrow to move the nodes up to lower or down to lift:</p> <p></p> <p></p> <p>Alternatively, press <code>G</code> then <code>Z</code> to move on the Z axis.</p>"},{"location":"tools-tutorials/modding-suspension/#exporting","title":"Exporting","text":"<p>Once finished, click <code>File</code> -&gt; <code>Export</code> -&gt; <code>Truck</code> </p> <p></p> <p>Export to the copied truck file, in this case <code>gavril - Copy.truck</code> or <code>BoxDodgeRamEXT - Copy.truck</code>. </p>"},{"location":"tools-tutorials/modding-suspension/#truck-file","title":"Truck file","text":"<p>Due to a bug with the 2.8+ plugin, you will find it exported to a blank file. Right click -&gt;  Edit with Notepad++</p> <p></p> <p>Open the original truck file (<code>gavril.truck</code>, <code>BoxDodgeRamEXT.truck</code>) as well. Both files should now be open in tabs. </p> <p>Now right click the original truck file tab and click <code>Move Document</code> -&gt; <code>Move to Other View</code>:</p> <p></p> <p>The original and exported files should now be displayed in split view:</p> <p></p> <p></p> <p>Find the axle node groups, then copy and paste the new node positions into the original truck file like so:</p> <p></p> <p>For the Ram EXT, copy and paste the entire nodes section. You can use <code>Begin/End Select</code> for this:</p> <p></p> <p>Finally, save the truck file and drag it back into the zip file. </p> <p>If successful, your vehicle should now be lowered or lifted!</p> <p></p> <p>You may need to go back to Blender for further adjustments. Repeat the above exporting steps. </p>"},{"location":"tools-tutorials/modding-suspension/#track-width","title":"Track width","text":"<p>To change a vehicle's track width:</p> <p>In edit mode, click <code>Mesh</code> -&gt; <code>Transform</code> -&gt; <code>Push/Pull</code></p> <p></p> <p>Press <code>X</code> to enable X axis, then move the mouse left or right:</p> <p></p> <p>Export and test in-game:</p> <p></p>"},{"location":"tools-tutorials/modding-suspension/#camber-and-wheel-width","title":"Camber and wheel width","text":"<p>Changing camber and wheel width can be done without Blender. </p> <p>Press <code>K</code> to enable skeleton view in-game, then go to top Tools menu and click <code>Node details</code>. Optionally enable <code>Hide wheels</code>.</p> <p></p> <p>Now find the outer wheel nodes. For the G2S:</p> <p>Front left: <code>85</code>  Front right: <code>84</code>  Rear left: <code>91</code>  Rear right: <code>90</code> </p> <p>Open the truck file and find the nodes:</p> <pre><code>84,   -1.106,    0.295,   -1.007, l 12\n85,   -1.106,    0.295,    1.007, l 12\n\n...\n\n90,    1.632,    0.289,   -1.037, l 12\n91,    1.632,    0.289,    1.037, l 12\n</code></pre> <p>The first value is front-back, second is up-down, and third is side to side. </p> <p>Increase the second value to add camber, and the third to increase wheel width. </p> <p>Make sure to keep the opposite side value negative!</p> <p>Camber example:</p> <pre><code>84,   -1.106,    0.315,   -1.007, l 12\n85,   -1.106,    0.315,    1.007, l 12\n\n...\n\n90,    1.632,    0.309,   -1.037, l 12\n91,    1.632,    0.309,    1.037, l 12\n</code></pre> <p></p> <p>Wheel width example: </p> <pre><code>84,   -1.106,    0.295,   -1.027, l 12\n85,   -1.106,    0.295,    1.027, l 12\n\n...\n\n90,    1.632,    0.289,   -1.057, l 12\n91,    1.632,    0.289,    1.057, l 12\n</code></pre> <p></p> <p>The wheel no longer fits the tire due to the increased width. </p>"},{"location":"tools-tutorials/modding-suspension/#conclusion","title":"Conclusion","text":"<p>This tutorial was very long overdue. Hopefully this helps those interested in modding.  </p> <p>- CuriousMike</p>"},{"location":"tools-tutorials/visual-editors/","title":"Visual editors","text":""},{"location":"tools-tutorials/visual-editors/#introduction","title":"Introduction","text":"<p>While it is possible to create a node/beam completely using a text editor, it is not recommended as an n/b can get quite complex. </p> <p>These are programs that help you visualize and edit a node/beam.</p>"},{"location":"tools-tutorials/visual-editors/#truck-file-template","title":"Truck file template","text":"<p>To help you get started with creating a new node/beam, you can download this truck file template which contains all the required sections.</p> <p>Blank Truck File</p>"},{"location":"tools-tutorials/visual-editors/#blender","title":"Blender","text":"<p>As of November 2018, Blender supports creating/editing Node/Beam structures with a plugin created by Ulteq.</p> <p></p> <p>Features:</p> <ul> <li> <p>Full vertex group support</p> </li> <li> <p>Automatic column alignment</p> </li> <li> <p>Sophisticated vertex position rounding</p> </li> <li> <p>Full preservation of the original truck file</p> </li> <li> <p>Automatic beam sorting based on the vertex groups</p> </li> <li> <p>All node, beam and cab options are preserved during import / export</p> </li> <li> <p>All <code>set_node_defaults</code>, <code>set_beam_defaults</code> and <code>set_beam_defaults_scale</code> entries are preserved</p> </li> </ul>"},{"location":"tools-tutorials/visual-editors/#download","title":"Download","text":"<p>First, download the correct version of the plugins from the Repository. </p> <p>For Blender 2.79, download <code>blender_NB_plugin_2.79.zip</code>.</p> <p>For Blender 2.8 and newer, download <code>blender_NB_plugin_2.8.zip</code>.</p> <p>Do not extract.</p>"},{"location":"tools-tutorials/visual-editors/#installation","title":"Installation","text":""},{"location":"tools-tutorials/visual-editors/#279","title":"2.79","text":"<p>Go to <code>File</code> -&gt; <code>User Preferences</code>:</p> <p></p> <p>Click <code>Add-ons</code> -&gt; <code>Install from File</code>:</p> <p></p> <p>Select the <code>blender_NB_plugin_2.79.zip</code> file you downloaded earlier. </p> <p>Type \"RoR\" into the search bar and both add-ons should appear:</p> <p></p> <p>Once both plug-ins are enabled by clicking the checkbox, select <code>Save User Settings</code>. </p> <p>You can now close the <code>User Preferences</code> window.</p> <p>The plugins are now available in <code>File</code> -&gt; <code>Import</code> and <code>Export</code> -&gt; <code>Truck (.truck)</code>.</p>"},{"location":"tools-tutorials/visual-editors/#28-and-newer","title":"2.8 and newer","text":"<p>Go to <code>Edit</code> -&gt; <code>Preferences</code>:</p> <p></p> <p>Click <code>Add-ons</code> -&gt; <code>Install</code>:</p> <p></p> <p>Select the <code>blender_NB_plugin_2.8.zip</code> file you downloaded earlier. </p> <p>Type \"RoR\" into the search bar and both add-ons should appear:</p> <p></p> <p>Enable both <code>RoR Exporter</code> and <code>RoR Importer</code> addons, then close the Preferences window. </p> <p>The plugins are now available in <code>File</code> -&gt; <code>Import</code> and <code>Export</code> -&gt; <code>Truck (.truck)</code>.</p>"},{"location":"tools-tutorials/visual-editors/#node-visualization","title":"Node visualization","text":"<p>To view the node numbers, follow the steps below for your Blender version.</p>"},{"location":"tools-tutorials/visual-editors/#279_1","title":"2.79","text":"<p>By default, the plugin will enable Blender's debug mode which provides node ID visualization, however they are usually difficult to read. </p> <p>To fix this, download this plugin by GitHub user zeffii (mirror) </p> <p>Install it following the above instructions:</p> <p></p> <p>To enable it, go to the top right and find the little plus icon, or press <code>N</code> to open it:</p> <p></p> <p>While in edit mode, open the <code>Mesh Display</code> menu and select <code>Visualize indices</code>:</p> <p></p> <p>You should now have readable node IDs. </p>"},{"location":"tools-tutorials/visual-editors/#28-and-newer_1","title":"2.8 and newer","text":"<p>Make sure <code>Developer Extras</code> is enabled in <code>Edit</code> -&gt; <code>Preferences</code> -&gt; <code>Interface</code>:</p> <p></p> <p>Now open the Overlays menu, located in the top right:</p> <p></p> <p>Enable <code>Indices</code> under <code>Developer</code>:</p> <p></p> <p>Node numbers should now be visible.</p> <p></p>"},{"location":"tools-tutorials/visual-editors/#notes-and-known-issues","title":"Notes and known issues","text":"<ul> <li>You can use vertex groups to organize your structure. In the <code>.truck</code> file, a \"vertex group\" starts with <code>;grp:</code>.</li> <li>Due to how the plugin reads/writes the <code>.truck</code> file, it is recommended to remove and reimport your N/B if you want to make more changes in Blender, otherwise changes you've made in the <code>.truck</code> file after exporting will be reverted.</li> </ul> <p>Known issues:</p> <ul> <li>If the <code>.truck</code> file contains detacher_group sections, they must be commented <code>;</code> out  otherwise not all beams will import correctly. See this GitHub issue ticket for more information.</li> </ul>"},{"location":"tools-tutorials/visual-editors/#truckviewer","title":"TruckViewer","text":"<p>A Java program made by Gouranga designed for viewing a node/beam structure.</p> <p></p> <p>Pros:</p> <ul> <li> <p>Auto-reloading of the file</p> </li> <li> <p>Supports nodes2</p> </li> <li> <p>4 independent views, each can be either be rotated in 3d or snapped to the front/sides/back.</p> </li> </ul> <p>Cons:</p> <ul> <li> <p>Only displays pure nodes and beams.</p> </li> <li> <p>Cannot edit the n/b structure, it is designed only for viewing it.</p> </li> </ul>"},{"location":"tools-tutorials/visual-editors/#download_1","title":"Download","text":"<p>Download here</p>"},{"location":"tools-tutorials/visual-editors/#editorizer","title":"Editorizer","text":"<p>Warning</p> <p>This program is very old and thus shouldn't be used to edit existing vehicles. It is recommended to create N/Bs using Blender instead.</p> <p></p> <p>The Editorizer is a free program written by Ben for making vehicles. Contributions: Tuusita (Comments, Structure, Connect To).</p> <p>It's a fairly old and simple program. Note you can't use it to create a new vehicle from scratch, you need to manually create a .truck file with a basic structure. A  .truck file with the basic structure has been included to get you started.</p> <p>Pros:</p> <ul> <li> <p>Designed for editing node/beam, very feature-rich</p> </li> <li> <p>Colors can be changed to suit your liking</p> </li> </ul> <p>Cons:</p> <ul> <li>Does not support newer truck sections (such as <code>set_node_defaults</code>). These sections will have to be commented out otherwise the Editorizer fails to open the file.</li> </ul> <p>It is recommended to make a copy of the truck file made for editing, then copy the changes over to your main truck file.</p>"},{"location":"tools-tutorials/visual-editors/#download-and-run-on-windows","title":"Download and run on Windows","text":"<p>Download here (ZIP archive)</p> <p>Run as administrator! (only needed on the first run or if you move Editorizer's directory)</p>"},{"location":"tools-tutorials/visual-editors/#troubleshooting","title":"Troubleshooting","text":"<p>If you don't run Editorizer as administrator for the first time, or you subsequently move it's directory, you may encounter this error: </p> <p>To resolve this, try running as administrator again, and if it doesn't help, try these steps:</p> <ul> <li>Find comdlg32.ocx and mscomctl.ocx in Editorizer's directory.</li> <li>On 32-bit Windows:<ul> <li>Move comdlg32.ocx and mscomctl.ocx to C:\\Windows\\system32.</li> <li> <p>Open a command line window and run following commands:</p> <p><pre><code>regsvr32 c:\\Windows\\system32\\comdlg32.ocx\nregsvr32 c:\\Windows\\system32\\mscomctl.ocx\n</code></pre> -   On 64bit Windows:     -   Move comdlg32.ocx and mscomctl.ocx to C:\\Windows\\SysWOW64     -   Open a command line window and run following commands:</p> <pre><code>regsvr32 c:\\Windows\\SysWOW64\\comdlg32.ocx\nregsvr32 c:\\Windows\\SysWOW64\\mscomctl.ocx\n</code></pre> </li> </ul> </li> </ul>"},{"location":"tools-tutorials/visual-editors/#download-and-run-on-macosx","title":"Download and run on MacOSX","text":"<p>Download here (ZIP archive)</p> <p>Requires MacOSX Snow Leopard or Higher.</p> <p>The mac port is standalone with all the files needed built into the app, Huge thanks to MothBird.</p> <p>Warning: the file is quite large (209.92MB) because of all of the required frameworks.</p>"},{"location":"tools-tutorials/visual-editors/#using-blueprints","title":"Using blueprints","text":"<p>Blueprints are technical drawings of vehicles and machinery, very useful as reference. Many good blueprints can be found on the internet.</p> <p>To load a blueprint, find Blueprints in the top toolbar, and load in the files.</p> <p>To adjust blueprints, click on Place Blueprints on the far right, and place your blueprints in a desired position .</p>"},{"location":"tools-tutorials/visual-editors/#editing-nodes","title":"Editing Nodes","text":"<p>When you want to add nodes, just click on Add Nodes up in the right. Click where you want the node to go, either in the Top Left, Bottom Left or Botton Right areas. If you want to make the node only get placed on the \"grid\" that divides the areas up-check the \"snap nodes to grid\" box. Special Nodes</p> <p>Check truckfile reference for special node types.</p> <p>If you want to give your nodes these special options, just click on the Nodes tab, pick the one you want to change, and put the corresponding node option in the options part.</p>"},{"location":"tools-tutorials/visual-editors/#editing-beams","title":"Editing Beams","text":"<p>When you want to add beams, just click on the Add Beams up in the right. Click the first node where you want the beam to start. Click the second node which is where you want the beam to end.</p> <p>Check truckfile reference for special beam types.</p> <p>If you want to give your beams these special options, just click on the Beams tab, pick the beam you want to change, and put the corresponding beam option in the options box, along with any variables for that type of beam.</p>"},{"location":"tools-tutorials/visual-editors/#wheels","title":"Wheels","text":"<p>To add wheels, look at this example. Just click on the Wheels tab and add in the correct information in the correct spaces.</p> <p>FRONT WHEELS(Steering wheels):</p> <pre><code>wheels\n; EXAMPLE: \n0.5,0.1,12,33,34,9999,1,1,32,350.0,300000,4000, tracks/wheelface tracks/wheelband1\n; EXAMPLE2: \n0.5,0.1,12,35,36,9999,1,1,31,350.0,300000,4000, tracks/wheelface tracks/wheelband1 \n</code></pre> <p>REAR WHEELS:</p> <pre><code>wheels\n;EXAMPLE: \n0.5,0.1,12,12,13,14,1,1,10,350.0,300000,4000, tracks/wheelfaceb tracks/wheelband1\n;EXAMPLE2: \n0.5,0.1,12,14,15,-12,1,1,9,350.0,300000,4000, tracks/wheelfaceb tracks/wheelband1 \n</code></pre>"},{"location":"tools-tutorials/visual-editors/#scaling","title":"Scaling","text":"<p>To scale your vehicle if you find it a little bit too big, just go to the Visible Nodes tab at the very top. Click on Scale..., then put in decimal numbers from 0.01 to 0.99 in the X,Y,Z lines to scale it down, put in decimal numbers from 1.0 and up(experiment) to scale it up.</p>"},{"location":"tools-tutorials/visual-editors/#tools-to-avoid","title":"Tools to avoid","text":"<p>In the Visible Nodes tab at the top, I would advise to not use the Interconnect or Variable Interconnect options with any vehicle as it can mess up the structure and other things. Basically these options will join every node to every other node in the object... </p>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/","title":"Aircraft and aerodynamics","text":""},{"location":"vehicle-creation/aircraft-and-aerodynamics/#wings","title":"Wings","text":"<p>Wings in RoR are a little bit of magic.  They introduce aerodynamic effects onto planes, boats, and trucks.  Although propulsion engines (motors, props, screws) cannot be combined,  wings can be added to any sort of vehicle to provide aerodynamic force.</p>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#introduction","title":"Introduction","text":"<p>The wing section declares parts of the chassis as wings, and that they should bear aerodynamic forces. Each line of this section designs a '''wing segment''', that is a homogeneous part of a wing. You can (and you should!) make a plane's wing from several contiguous wing segments. Rudder and elevators are also made with one or more wing segments.</p> <p>Each wing segment is bounded by 8 nodes, that defines the \"bounding box\" of the wing, specifically its span, chord and thickness. You must ensure that these nodes are properly interconnected by beams to ensure the structural integrity of the wing.</p> <p>'''Notice that it is VERY IMPORTANT to declare contiguous wing segments''' (i.e. that shares nodes) IN SEQUENTIAL ORDER FROM RIGHT TO LEFT, and you should avoid cutting a wing in two at the fuselage, but make the whole wing continuous across the fuselage because it helps to compute whole-wing effects like induced drag and other things like wing lights.</p> <p>A very important aerodynamic parameter is the wing airfoil. The airfoil is the tear-like shape of the wing, and its exact geometry is very important for the characteristics and performances of real-world wings. RoR uses precomputed performances curves from standard airfoils, interpolated from wing tunnel tests. These curves are stored in .afl files.</p>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#airfoils","title":"Airfoils","text":"<p>Standard airfoils provided in RoR are: * NACA64.1.412 - actual airfoil of the wing tip of the Hercules C-130 * NACA64.3.618 - similar airfoil to the wing root of the Hercules C-130 * NACA0009 - standard symmetrical airfoil, good for rudder and elevators * Clark-Y - used for propellers, but is also very popular for main wings</p> <p>You can get more airfoil from the popular X-Plane flight simulator.  RoR is compatible with X-Plane .afl, but you must convert their end-of-line  style from MacOS to Windows using an advanced text editor, or RoR will crash.</p>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#example-wing","title":"Example Wing","text":"<p>Here's an example:</p> <p></p> <p>And the corresponding wings section :</p> <pre><code>wings\n;right wing\n;1\n6,8,5,7,12,10,11,9, 0.509, 0.999, 0.555, 0.751, 0.752, 0.999, 0.752, 0.751, n, 1.0, 0, 0, NACA64.1.412.afl\n\n;2\n4,6,3,5,14,12,13,11, 0.509, 0.999, 0.555, 0.751, 0.752, 0.999, 0.752, 0.751, a, 0.75, -24, 24, NACA64.1.412.afl\n\n;3\n2,4,1,3,16,14,15,13, 0.509, 0.999, 0.555, 0.751, 0.752, 0.999, 0.752, 0.751, n, 1.0, 0, 0, NACA64.1.412.afl\n\n\n;left wing\n;4\n18,2,17,1,28,16,27,15, 0.509, 0.999, 0.555, 0.751, 0.752, 0.999, 0.752, 0.751, n, 1.0, 0, 0, NACA64.1.412.afl\n\n;5\n20,18,19,17,26,28,25,27, 0.509, 0.999, 0.555, 0.751, 0.752, 0.999, 0.752, 0.751, b, 0.75, -24, 24, NACA64.1.412.afl\n\n;6\n22,20,21,19,24,26,23,25, 0.509, 0.999, 0.555, 0.751, 0.752, 0.999, 0.752, 0.751, n, 1.0, 0, 0, NACA64.1.412.afl\n</code></pre>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#air-brakes","title":"Air Brakes","text":"<p>(Version 0.35 or later)</p> <p>An air brake is a moving panel used to slow down an airplane.  It is positioned similarly to a \"props\", with  <code>noderef, nodex, nodey, nodea, offsetx, offsety, offsetz</code> </p> <p></p> <p>The airbrake needs 4 nodes (noderef, nodex, nodey, nodea) to position it. pick 4 nodes that form a square or rectangle at the position you want your airbrake.  This picture shows a basic airbrake setup, you can see the offsetx, and offsety in red  move the airbrake back and forth along that direction.  Offset Z will move it up and down vertically (in this case).  </p> <p>It takes time to position a airbrake just right.  Make one adjustment at a time and see what the change did in game before you make another.  The 4 nodes you choose will determine the direction your airbrake points.  If the airbrake is backwards, swap the noderef, nodex, nodey, nodea around until it points the way you want.</p> <p>Width and length control how long or wide the airbrake is.  Simply adjust these numbers until the airbrake is the size you want.  </p> <p>Max angle is the maximum angle the airbrake will lift when fully engaged.  Then comes two texture coordinates that texture the airbrake using your vehicles texture pic.</p> <p>Air brakes can easily be added to a wing box, just set noderef, nodex, nodey and nodea as the four upper nodes of a wing box.</p> <p>Example:</p> <pre><code>airbrakes\n; noderef, nodex, nodey, nodea, offsetx, offsety, offsetz, width, length, max angle, texcord x1, texcoord y1, texcoord x2, texcoord y2\n95, 105, 113, 125, 0.2, 0.0, 0.0, 2.0, 3.0, 60.0, 0.044, 0.205, 0.124, 0.146\n</code></pre>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#propeller-engines","title":"Propeller engines","text":"<p>To add a propeller engine to your creation, first you need to make the  node and beam part of the engine (its the same for either type of engine, turboprop or pistonprop). </p> <p>You start off by making a diamond shape with one node in the middle, like so: </p> <p></p> <p>Make sure that all the nodes are evenly placed so that when they're spinning  at high RPM's they won't get out of balance.  (You can get them spot on in the editorizer if you use the \"snap nodes to grid\" option).  Now you need to add another node in the center of that diamond but this one needs to be a bit behind the first middle node. Like so: </p> <p></p> <p>now just connect all the nodes together with beams but make sure you only  connect the diamonds four outer edge nodes (in this case nodes 1,2,3 and 4)  to each other to make an out line and then to the 2 middle nodes. Its important  that this is done so that they can rotate smoothly. The nodes that you would use  to attach the engine node/beam assembly to the rest of the planes chassis would  be the two middle nodes (in this case nodes 0 and 5). </p> <p>Now that you have the node and beam part of the engine done you can move on to the truck file code part of the engine. </p> <p>== Props section requirements ==</p> <p>First we will take care of the \"props\" section. </p> <p>'''Note: it is important that you have the \"props\" section ''BEFORE'' the turboprops or pistonprops section.'''</p> <p>The first thing that you want to add to the props section is the \"spinprop.mesh\" this is what makes the turboprops/pistonprops work. When placing this mesh its important how the nodes that you place it on are oriented, for this test model that I'm making it would have ref node: 0, X node: 1, Y node: 5 this way when the engine is spinning the propeller mesh (ie pale.mesh) will be oriented right. for example if I switch X and Y around so X was 5 and Y was 1 the propellers would appear to spin at a 90 degree angle compared to the way the node/beam engine was really spinning. Also you need one \"spinprop.mesh\" for each engine you have. </p> <p>Example props section for \"spinprop.mesh\":</p> <pre><code>props\n;ref,x,y,offsetx,offsety,offsetz,rotx,roty,rotz,mesh\n0,1,5, 0.0, 0.0, 0.0, 0, 0, 0, spinprop.mesh\n</code></pre> <p></p> <p>The next thing we need to add to the props section is the propellers mesh. Its the same as for the \"spinprop.mesh\" you just need one for every visible propeller you want. By looking at the picture and the example props section below it should be fairly easy to figure out.</p> <p>Example props section with propellers mesh's:</p> <pre><code>props\n;ref,x,y,offsetx,offsety,offsetz,rotx,roty,rotz,mesh\n;First propellers mesh\n0,5,1, 0.0, 0.0, 0.0, 180, 0, 90, pale.mesh\n;Second propellers mesh\n0,5,2, 0.0, 0.0, 0.0, 180, 0, 90, pale.mesh\n;Third propellers mesh\n0,5,3, 0.0, 0.0, 0.0, 180, 0, 90, pale.mesh\n;Fourth propellers mesh\n0,5,4, 0.0, 0.0, 0.0, 180, 0, 90, pale.mesh\n</code></pre> <p></p>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#turboprops-section","title":"Turboprops section","text":"<p>Now that you have everything done in the props section we can move on to the turboprops section.</p> <p>The turboprops section has 8 parameters they are: * 1. Reference node number (center of the prop) * 2. Prop axis node number (back of the prop) * 3. Blade 1 tip node number * 4. Blade 2 tip node number * 5. Blade 3 tip node number * 6. Blade 4 tip node number * 7. Power of the turbine (in kW) * 8. Airfoil of the blades </p> <p>Explanation of the parameters for the example engine built for this tutorial: * The first parameter is the reference node which in this case would be node number 0. * The second parameter is the back node of the prop which in this case is node number 5. * The third parameter is the first blades tip node number, in this case node 1. * The fourth parameter is the second blades tip node number, in this case node 2. * The fifth parameter is the third blades tip node number, in this case node 3. * The sixth parameter is the fourth blades tip node number, in this case node 4. * The seventh parameter is the amount of power of the engine, in this case 3000.0. * The eighth parameter is the airfoil that the props will use, in this case \"Clark-Y.alf\".</p> <p>Example turboprops section:</p> <pre><code>turboprops\n;ref, back, p1, p2, p3, p4, power, propfoil\n0,5,1,2,3,4, 3000.0, Clark-Y.afl\n</code></pre>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#pistonprops-section","title":"Pistonprops section","text":"<p>The pistonprops section is pretty much the same as the turboprops section only with 2 more parameters and different sounds in-game.</p> <ul> <li>The first parameter is the reference node which in this case would be node number 0.</li> <li>The second parameter is the back node of the prop which in this case is node number 5.</li> <li>The third parameter is the first blades tip node number, in this case node 1.</li> <li>The fourth parameter is the second blades tip node number, in this case node 2.</li> <li>The fifth parameter is the third blades tip node number, in this case node 3.</li> <li>The sixth parameter is the fourth blades tip node number, in this case node 4.</li> <li>The seventh parameter is the couple node, which in the example is not used so it is set to -1. Also from my searching the couple node parameter was never documented so I don't know what its purpose is.</li> <li>The eighth parameter is the amount of power of the engine, in this case 3000.0.</li> <li>The ninth parameter is the pitch of the prop, in this case it is set to -10</li> <li>The tenth parameter is the airfoil that the props will use, in this case \"Clark-Y.alf\".</li> </ul> <pre><code>pistonprops\n;ref, back, p1, p2, p3, p4, couplenode, power, pitch, propfoil\n0,5,1,2,3,4, -1, 3000.0, -10, Clark-Y.afl\n</code></pre>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#set_beam_defaults","title":"Set_beam_defaults","text":"<p>Its quite possible that you will have to use set_beam_defaults to make it so that your engine doesn't explode once you have it spinning. First I would try with out using set_beam_defaults and if the engines explode when spinning I would add set_beam_defaults to the engines beams and raise the deform and break values until you can run the engine at full throttle with out it breaking. The settings that this example uses may be a bit extreme but you get the idea.</p> <p>set_beam_defaults to start out with when raising the deform and break values:</p> <pre><code>;        spring, damping, deform, break,\nset_beam_defaults -1, -1, 400000, 1000000,\n</code></pre> <p>set_beam_defaults that the example engine uses:</p> <pre><code>;         spring, damping, deform, break,\nset_beam_defaults -1, -1, 2000000, 3000000,\n</code></pre>"},{"location":"vehicle-creation/aircraft-and-aerodynamics/#fusedrag","title":"Fusedrag","text":"<p>A fuse drag can be used for a couple of things. </p> <p>It can be used to make a vehicle more aerodynamic to make the top speed improve. </p> <p>The fusedrag section can help improve modelling of the aerodynamic drag of a plane. </p> <p>It can model the fuselage of a plane like a big wing section, with an airfoil. </p> <p>An example of a symmetrical airfoil is something like NACA0009.afl </p> <p>I'm going to show you improvements a fusedrag can do to a vehicles top speed. </p> <p>An example I'm going to use the Dodge Police. </p> <p>The max speed without wheel spin was about 41 mph.  </p> <p>Now let's add a fusedrag and see what happens. </p> <p>To add a fuse drag just find two nodes. </p> <p>Here is what needs to be defined: </p> <ul> <li>Number of the front-most node of the fuselage: First Node </li> <li>Number of the rear-most node of the fuselage: Second Node </li> <li>Approximate width of the fuselage: ie: 4.0 (You can use and width you want.) </li> <li>Airfoil name: (Default NACA0009.afl)</li> </ul> <p>Here's an example of what i added in the .truck file. </p> <pre><code>fusedrag 10, 11, 4.0, NACA0009.afl\n</code></pre> <p>I got an result, the speed improved by 31mph so if you want more speed add a fusedrag. </p>"},{"location":"vehicle-creation/alternate-skins/","title":"Making alternate skins","text":"<p>This page serves as an overview page on how to create and modify custom skins.</p>"},{"location":"vehicle-creation/alternate-skins/#step-by-step-guide","title":"Step-by-step guide","text":""},{"location":"vehicle-creation/alternate-skins/#step-1-guid","title":"Step 1 - GUID","text":"<p>Skins are matched against vehicles via GUID (Globally-Unique-IDentifier).</p> <p>Make sure the vehicle you want to skin has one: Truck file format - GUID</p> <p>Ideally, all vehicles should have one. You might need to regen the cache, so the GUID will be in the cache as well. </p> <p>It is recommended to generate a GUID using this site.</p>"},{"location":"vehicle-creation/alternate-skins/#step-2-the-skin-file","title":"Step 2 - the .skin file","text":"<p>Create a file named \"MySkinName.skin\" (replace MySkinName with any string without spaces) with the following content:</p> <pre><code>Sarens Skin for Sennebogen 5500\n{\n    replaceTexture   = blansjaar41.jpg, blansjaar41_sarens.jpg\n    preview          = 9c15cccf8a8dca392b84b7b778e3517139cef287.png\n    description      = sarens skin for the sennebogen 5500\n    authorName       = Rotexx\n    AuthorID         = 39570\n    GUID             = 90670430-695d-467b-8c91-dcb67a42633c\n}\n</code></pre> <p>this skin was made by Rotexx whose Author ID is <code>39570</code>.  The preview image for the skin is <code>9c15cccf8a8dca392b84b7b778e3517139cef287.png</code>.</p> <p>There are 2 ways how to replace the original vehicle graphics with yours:</p> <ul> <li> <p>Image substitution - The simple one, you name an existing texture     file and a replacement file. In this example,      'blansjaar41.jpg' is replaced with 'blansjaar41_sarens.jpg'. This only works with managedmaterials.</p> </li> <li> <p>Material substitution - More complex, you need to know the .material     file format of OGRE3D engine. For an example, see the \"antonov\" tutorial     below. The principle is the same - you name the original material and then     the new, replacement material.</p> </li> </ul>"},{"location":"vehicle-creation/alternate-skins/#step-3-the-package","title":"Step 3 - the package","text":"<p>Put all the files into a zip archive named \"sarens.skinzip\"  and put that into the packs folder (NOT .skinzip.zip, just .skinzip).  The .skinzip is important, as it will force RoR to always load this zip  to parse the skin information from it.</p>"},{"location":"vehicle-creation/alternate-skins/#step-4-the-game","title":"Step 4 - the game","text":"<p>Start the game and select the truck, it should have a valid GUID in the selection menu.  When pressing enter, the skin selection GUI will be displayed.</p>"},{"location":"vehicle-creation/alternate-skins/#skin-file-reference","title":"Skin file reference","text":"<pre><code>Sarens Skin for Sennebogen 5500\n{\n    // this is a comment line, it is ignored when parsing. It always starts with //\n    // replaceTexture = &lt;original_texture.png&gt; &lt;skin_texture.png&gt;\n    replaceTexture   = blansjaar41.jpg, blansjaar41_sarens.jpg\n    replaceTexture   = blansjaarkleur.jpg, blansjaarkleur_sarens.jpg\n    replaceTexture   = blansjaarlogo5500.jpg, blansjaarlogo5500_sarens.jpg\n    // preview = &lt;preview_image.png&gt;\n    preview          = 9c15cccf8a8dca392b84b7b778e3517139cef287.png\n    // description = text that will show in the selectionWindow\n    description      = sarens skin for the sennebogen 5500\n    // AuthorName = &lt;author name, no special characters&gt;\n    authorName       = Rotexx\n    // AuthorID = &lt;forum ID of the author&gt;\n    AuthorID         = 39570\n    // GUID = &lt;of the truck to which this skin fits&gt;\n    GUID             = 90670430-695d-467b-8c91-dcb67a42633c\n}\n</code></pre> <p><code>replaceTexture</code> - Defines the texture replacements, its first argument is  the original texture name, the second argument is the texture name of the skin.  Please note that those must be different, or you will get a file collision.  You can use this line as much as you like. As noted earlier, this only works with managedmaterials.</p> <p><code>preview</code> - The \"mini\" image that will appear on the skin selector window.</p> <p><code>description</code> - A short description of the skin.</p> <p><code>authorName</code> - Your username.</p> <p><code>AuthorID</code> - Your forum ID. To get your ID, view your forum profile and check the number shown in the URL. For example: </p> <p>https://forum.rigsofrods.org/members/curiousmike.5831/ </p> <p><code>5831</code> would be the ID.</p> <p><code>GUID</code> - The GUID that matches the GUID in the <code>.truck</code> file. See Step 1 - GUID.</p>"},{"location":"vehicle-creation/alternate-skins/#replacing-ogre-materials-material","title":"Replacing OGRE Materials (.material)","text":"<p>If your vehicle uses a <code>.material</code> file for its textures, you will have to use <code>replaceMaterial</code> instead of <code>replaceTexture</code>.</p> <p>So for an example we will just do this now for the an-12.airplane.</p> <p></p>"},{"location":"vehicle-creation/alternate-skins/#step-1-the-material","title":"Step 1 - The material","text":"<p>Copy the existing material file (<code>5822UID-an-12.material</code>) and change the material and texture name(s), like so:</p> <pre><code>material 5822UID-tracks/An12-Green\n{\n    technique\n    {\n        pass\n        {\n            scene_blend alpha_blend\n            alpha_rejection greater 128 \n            texture_unit\n            {\n                texture 5822UID-an-12-green.dds\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"vehicle-creation/alternate-skins/#step-2-the-skin-file_1","title":"Step 2 - The .skin file","text":"<p>To find out the original material name,  open the An-12's zip file, open the <code>.airplane</code> file then find the globals section  and note down the third argument: <code>5822UID-tracks/An12</code></p> <p>Then create a simple .skin file to describe the skin:</p> <pre><code>Antonov 12 - Green Skin\n{\n    // The substitution: old material name, new material name\n    replaceMaterial = 5822UID-tracks/An12, 5822UID-tracks/An12-Green\n    // Preview image. Should be at least 256x256 pixels.\n    preview          = an-12-green-skin-mini.png\n    // Short description\n    description      = Green skin for the An-12\n    // Name of the author, optional\n    AuthorName = Yourname\n    // Forum ID of the author, optional\n    AuthorID = 1\n    // GUID (globally unique identifier), REQUIRED!\n    GUID = ...GUID, see above...\n}\n</code></pre> <p>This will replace the old material name (take the names from step 1) with  the new material (from step 3) If you want to replace more than  one materials (for example for the props or anything else,  just add lines with the correct format. </p>"},{"location":"vehicle-creation/alternate-skins/#step-3-packaging","title":"Step 3 - Packaging","text":"<p>Like above - package your skin files to .skinzip, and enjoy it ingame!</p>"},{"location":"vehicle-creation/alternate-skins/#more-examples","title":"More examples","text":"<p>An example skin that replaces materials: 1982 DI Sportster Scheme: HotWheels Challenge</p> <pre><code>HotWheels Challenge Livery\n{\n    replaceTexture   = SportsCarUV.png, SportsCarUV_HWChallenge.png\n    replaceTexture   = 308Wheel.png, 308Wheel_HWChallenge.png\n    replaceTexture   = 308Wheel_S.png, 308Wheel_HWChallenge_S.png\n    replaceTexture   = SportsCarMudflaps.png, SportsCarMudflaps_HWChallenge.png\n    replaceTexture   = RallyLightsUV.png, RallyLightsUV_HWChallenge.png\n    replaceTexture   = Sports_Wing_Red.png, Sports_Wing_HWChallenge.png\n    replaceTexture   = SportsLeather.png, SportsLeather_Black.png\n    replaceTexture   = SportsPlastic.png, SportsPlastic_HWChallenge.png\n    replaceTexture   = PlasticSpec.png, PlasticSpec_HWChallenge.png\n    replaceMaterial  = Sports_Speedo, Sports_Speedo_HW\n    replaceMaterial  = Sports_Oil, Sports_Oil_HW\n    replaceMaterial  = Sports_Glow_Blue, Sports_Glow_HW\n    replaceMaterial  = Sports_Tacho, Sports_Tacho_HW\n    replaceMaterial  = Sports_Needle, Sports_Needle_HW\n    preview          = HotWheels_Challenge_Mini.png\n    description      = HotWheels Challenge Scheme (Based on a particularly hot Ferrari 360 Modena...)\n    authorName       = ShawnVallance\n    AuthorID         = 5201995\n    GUID             = DI_SPORTSCAR_GUID\n\n}\n</code></pre>"},{"location":"vehicle-creation/boats/","title":"Boats","text":""},{"location":"vehicle-creation/boats/#making-a-buoyant-hull","title":"Making a buoyant hull","text":"<p>Step1: What you have to do is make a simple boat hull shape out of nodes.  You can make many different shaped hulls, they will affect the performance of the boat. Try your best to use the least amount of nodes as possible,  For a typical hull, you should use from 10-30 nodes at the most. </p> <p>Step2: When you finish your softbody, you need to submesh it.  Submeshing it will allow the boat to float, instead of sinking.</p> <p>Step3: try it out ingame. It should float nicely.  If it sinks, then there is a hole in the hull of the boat.  Once you find your mistake, it will float.</p>"},{"location":"vehicle-creation/boats/#adding-an-engine-ie-screwprop","title":"Adding an engine, i.e. \"screwprop\"","text":"<p>Step1: To create a chassis, or setup for the screwprop,  you must have 3 nodes in a triangular shape and stabilizing it with beams,</p> <p>The picture illustrates the setup. Please imagine the box is actually a boat-hull :)</p> <p> </p> <p>Step2: You should enter the \"screwprops\" section into your .boat file.</p> <p>then, you can have your own sea exploration! :-)</p> <pre><code>screwprops\n;    prop node, back node, top node,  power\n             3,         1,         2, 100000.0\n</code></pre>"},{"location":"vehicle-creation/engine/","title":"Engine","text":"<p>The engine sections are used for vehicles which are driven through their wheels (trucks). Together, they specify the type of engine being used (truck or car), the power of that engine and the gear ratios for the truck </p> <p>This section specifies torque, gearing and RPM ranges of the engine being used. </p>"},{"location":"vehicle-creation/engine/#settings","title":"Settings","text":"<p>See fileformat-truck#engine for reference manual.</p>"},{"location":"vehicle-creation/engine/#torque","title":"Torque","text":"<p>Tuning torque in RoR is a tricky topic, since the current air resistance simulation is overstrong. Setting torque to provide realistic acceleration at low speeds results in severely stunted top speeds. Setting it to provide higher top speeds results in very strong acceleration.</p> <p>Engine Inertia also has a VERY important role in engine behavior since this value also determines how fast a vehicle can accelerate</p>"},{"location":"vehicle-creation/engine/#differential-ratio","title":"Differential ratio","text":"<p>Differential ratio represents gear reduction ratio between input pinion gear and the ring gear of the differential. This parameter acts as global gear conversion ratio. </p> <p>It means that if, lets say first gear has ratio <code>13.86</code> and differential ratio is <code>2.0</code>, actual first gear reduction is <code>27.72</code> <code>(2.0 * 13.86)</code>. If you are using real gearbox parameters, bear this in mind and look for real differential ratios too.</p>"},{"location":"vehicle-creation/engine/#gear-ratios","title":"Gear ratios","text":"<p>Gear ratios of forward gears. For every turn of the wheel must engine turn this many times (not counting the differential ratio). When setting various gear ratios, try to make smaller difference between higher gears.</p> <p>Please note that in sample gear setting the difference (ratio) between first and second gear is approx. 45%, but difference between the fifth and sixth gear is about 19%. This allows smoother gearbox performance. </p> <p>There must be between 3 and 15 forward gears. The last gear must be followed by a <code>-1</code> value.</p>"},{"location":"vehicle-creation/engine/#more-information","title":"More information","text":"<p>A great source of practical gear ratios is from Eaton Fuller.</p> <p>To see the ratios, click the name of the transmission and find Product Specifications Guide. </p> <p>If your vehicle decelerates in a gear you may not have enough power, or too high a gear. </p> <p>NOTE: the value of this site is unknown. RoR's poor air resistance simulation probably invalidates the use of any real life gear ratios: It's always best to make sure a truck can sensibly use all the gears it has.</p> <p>If you know a little about vehicles there is a Gear Ratio Guide, but a decent knowledge of transmissions, transfer cases, underdrives and correct rear end gears is highly recommended.</p>"},{"location":"vehicle-creation/engine/#engoption","title":"Engoption","text":"<p>This optional section allows the user to specify whether the engine is for a car or heavy truck and the engine inertia of the vehicle.</p>"},{"location":"vehicle-creation/engine/#settings_1","title":"Settings","text":"<p>See fileformat-truck#engoption for reference manual.</p>"},{"location":"vehicle-creation/engine/#engine-inertia","title":"Engine Inertia","text":"<p>The default game value is <code>10.0</code>, which is correct for a large diesel engine, Use higher values to make engines accelerate more slowly and stall more difficultly, which may be useful for vehicles towing large masses. This value should be lowered for smaller, light engines (Is the multiplier different for car and truck engines?)</p> <p>With a high value of inertia the engines RPM is not likely to change when resistance is met. As an example, when changing gears a high inertia will cause the wheels to slip, while a lower value will cause the engine RPM to change and prevent the wheels from slipping. However, with a low inertia and a high brake value, the engine will stall more easily since the brakes can change the RPMs more easily.</p> <p>If your engine doesn't change its RPM's during gear change, your engine inertia is too high.</p> <p>If a vehicle is feeling sluggish, and hard to brake, it is better to decrease the inertia than increase the brake force, and torque.</p>"},{"location":"vehicle-creation/engine/#engine-type","title":"Engine Type","text":"<p>Using <code>c</code> for cars or <code>t</code> for trucks specifies characteristics of the engines. </p> <p>Car engines use a different sound to truck engines and have no turbocharger. They also have less inertia by default. (t) is the default.</p>"},{"location":"vehicle-creation/engine/#torque-curve","title":"Torque Curve","text":"<p>This section allows you to define a torque curve for your vehicle. It is optional.</p> <p>This allows you to assign predefined torque curves or your own custom curves to a truck. </p> <p>Predefined options are: <code>default</code>, <code>diesel</code>, <code>turbodiesel</code>, <code>gas</code>, <code>turbogas</code>, <code>wheelloader</code>, <code>compacttractor</code>, <code>tractor</code>, <code>hydrostatic</code>.</p> <p>Predefined Curve Example: <pre><code>    torquecurve\n    turbogas\n</code></pre></p> <p>The first number is RPM where the power begins, and the second defines power as a percent of total torque.</p> <p>It's suitable to define the torque to the engine RPM set in the engine definition plus 25% ( multiply the value with 1.25) to get the overrev area defined.</p> <p>The following example would be good for a maximum engine RPM set to <code>2800</code>.</p> <p>Custom curve example: <pre><code>    torquecurve\n    0,0\n    1000,0.79\n    1500,0.9\n    2000,0.97\n    2500,0.99\n    3000,0.9\n    3500,0.77\n</code></pre></p> <p>Engine dying in idle and first gear? Just define a single higher peak value where you want the engine to idle..like adding: </p> <pre><code>    ...\n    700, 0.2\n    800, 0.6\n    900, 0.4\n    ...\n</code></pre> <p></p> <p>To the example above in the right spot will result the engine idle a little bit higher then 800 rpm in first gear. </p> <p>The example to the left shows a screenshot of a torquercurve made for a small diesel engine:</p> <p>Idle: <code>~600</code> RPM</p> <p>Max:  <code>1900</code> RPM</p> <p>Slight and constant torque increase over the used RPM bandwidth, hard torque dropoff in the overrev area.</p>"},{"location":"vehicle-creation/fileformat-addonpart/","title":"Addonpart file format","text":"<p>This page serves as a technical overview of the <code>.addonpart</code> file format. It is a new text-based file format that enables easy vehicle customization without manually editing a <code>.truck</code> file.</p> <p>For an overview of the Tuning menu, see: Tuning</p>"},{"location":"vehicle-creation/fileformat-addonpart/#features","title":"Features","text":"<ul> <li>Add or replace meshes (props/flexbodies)</li> <li>Hide unwanted meshes</li> <li>Change wheels and tires</li> <li>Move existing nodes </li> <li>Add new flares </li> <li>Hide unwanted flares</li> <li>Hide unwanted exhaust smoke particles</li> <li>Change or remove managedmaterial textures</li> <li>Supports preview images, same as truck files and skins</li> <li>Save and load <code>.tuneup</code> presets, these are stored in the <code>projects</code> directory and can be included with uploaded mods.</li> </ul>"},{"location":"vehicle-creation/fileformat-addonpart/#limitations","title":"Limitations","text":"<p>These features are not currently supported. They may be added in a future RoR release.</p> <ul> <li>Multiplayer support. The addonpart system is exclusive to single player for now.</li> <li>Adding new nodes and beams </li> <li>Engine tweaking </li> <li>Adding or changing sounds</li> <li>Moving cinecams</li> <li>Adding new animated props (replacing existing prop works)</li> <li>Any other truck file sections not listed here</li> </ul>"},{"location":"vehicle-creation/fileformat-addonpart/#parameters","title":"Parameters","text":""},{"location":"vehicle-creation/fileformat-addonpart/#required-sections","title":"Required sections","text":""},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_name","title":"addonpart_name","text":"<p>Required, the name of the addon. Shown in Tuning menu and parts selector. </p>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_description","title":"addonpart_description","text":"<p>Required, addon description. Shown in part selector.</p>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_guid","title":"addonpart_guid","text":"<p>The GUID of the truck the addonpart is intended for. Parts that match the GUID of the current active vehicle are shown in the Tuning menu.</p> <p>Multiple GUIDs can be defined, these are only hints as players can force installation of any addon to any vehicle.</p> <p>Optional, omitting this section requires the part to be installed manually through the parts selector.</p>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_filename","title":"addonpart_filename","text":"<p>Optional. Restricts an addonpart to specific truck file(s), useful if multiple trucks share the same GUID.</p> <pre><code>addonpart_guid \"db30c00b-021f-416a-92a7-3218374dbba2\"\naddonpart_filename \"BoxDodgeRam.truck\"\naddonpart_filename \"1994DodgeRam12V.truck\"\naddonpart_filename \"1994DodgeRam12VConstruction.truck\"\naddonpart_filename \"1994DodgeRam12VGuard.truck\"\n</code></pre> <p>Note</p> <p>Specifying only <code>addonpart_filename</code> will not work on its own, a matching GUID must also be present!</p>"},{"location":"vehicle-creation/fileformat-addonpart/#visual-elements","title":"Visual elements","text":""},{"location":"vehicle-creation/fileformat-addonpart/#managedmaterials","title":"Managedmaterials","text":"<p>Materials can be defined in two ways, either through the managedmaterials section or with a material file.</p> <pre><code>managedmaterials\n;new_material    effect               parameters...\nmainbody mesh_standard    mytruckbody.png mytruckbody-spec.png\n</code></pre> <p>Addon meshes that share a managedmaterial with the base mod do not need to be redefined. However, any <code>.material</code> files must be copied to the addon directory.</p>"},{"location":"vehicle-creation/fileformat-addonpart/#props-and-flexbodies","title":"Props and flexbodies","text":"<p>Props and flexbodies are defined using the same syntax as in a truck file.</p> <p>In order to be parsed correctly, flexbody forset lines MUST be surrounded by quotes , mesh will not appear otherwise!</p> <pre><code>props\n;ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz, mesh\n93, 95, 92,    0.50,    0.37,     0.0,   90,    0,    0, airintake.mesh\n\nflexbodies\n;ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz, mesh\n3,  4, 19,       0,       0,   0.027,   90,    0,   90, dodgecharger.mesh\n\"forset 0-16, 23-24, 31, 54-125\"\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#flares","title":"Flares","text":"<p>Flares are defined using the same syntax as in a truck file. All flares sections (<code>flares</code>/<code>flares2</code>/<code>flares3</code>) are supported.</p> <pre><code>flares\n;RefNode,  X,  Y, OffsetX, OffsetY, Type, ControlNumber, BlinkDelay, size MaterialName\n51,  1, 79,    0.23,    0.50,    b,            -1,          0,   -1 default\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#element-removal-unwanted","title":"Element removal (unwanted)","text":""},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_unwanted_prop","title":"addonpart_unwanted_prop","text":"<p>Specifies a prop which should be hidden. IDs are shown in the Tuning menu, starting at <code>0</code>.</p> <pre><code>; syntax: addonpart_unwanted_prop &lt;prop ID&gt;\naddonpart_unwanted_prop 3\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_unwanted_flexbody","title":"addonpart_unwanted_flexbody","text":"<p>Specifies a flexbody which should be hidden.</p> <pre><code>; syntax: addonpart_unwanted_flexbody &lt;flexbody ID&gt;\naddonpart_unwanted_flexbody 2\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_unwanted_flare","title":"addonpart_unwanted_flare","text":"<p>Specifies a flare which should be hidden.</p> <pre><code>; syntax: addonpart_unwanted_flare &lt;flare ID&gt;\naddonpart_unwanted_flare 4\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_unwanted_exhaust","title":"addonpart_unwanted_exhaust","text":"<p>Specifies a exhaust smoke which should be hidden. Useful for custom exhaust parts.</p> <pre><code>; syntax: addonpart_unwanted_exhaust &lt;exhaust ID&gt;\naddonpart_unwanted_exhaust 0\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_unwanted_managedmaterial","title":"addonpart_unwanted_managedmaterial","text":"<p>Specifies a managedmaterial which shouldn't be rendered. Will be replaced by a transparent red material (<code>tracks/transred</code>) instead.</p> <p>Currently not very useful, exists for consistency.</p> <pre><code>; syntax: addonpart_unwanted_managedmaterial &lt;material name&gt;\naddonpart_unwanted_managedmaterial 0d570UID-dodgecharger\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#element-tweaking","title":"Element tweaking","text":""},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_tweak_wheel","title":"addonpart_tweak_wheel","text":"<p>Changes wheel parameters. </p> <ul> <li>Wheel ID: The wheel number, with the first defined wheel starting at <code>0</code>.</li> <li>Media1: Wheel mesh name. </li> <li>Media2: Wheelband material name for <code>wheels</code>/<code>meshwheels</code>, or tire mesh name for <code>flexbodywheels</code>.  For wheels with pre-mounted tires this should be set to <code>tracks/trans</code>. To use the base mod's wheelband or mesh, set an empty string <code>\"\"</code>.</li> <li>Wheel side: Direction the wheel is facing, <code>l</code> or <code>r</code>. Swap these values if your wheel is mounted backwards. This can be changed on-the-fly in the Tuning menu.</li> <li>Radius: Optional. The radius of the wheel, in meters.</li> <li>Width (ignored): - Optional. Use any number, wheel width is auto-calculated from distance between node1 and node2.</li> </ul> <pre><code>; basic example, uses base mod's wheelband material\n; syntax: addonpart_tweak_wheel &lt;wheel ID&gt; &lt;media1&gt; &lt;media2&gt; &lt;wheel side&gt; &lt;radius&gt;&lt;width&gt;\naddonpart_tweak_wheel 0 \"5SpokeMBWheel.mesh\" \"\" l\n\n; example for a wheel with pre-mounted tire, makes wheelband invisible and sets radius to 0.32\naddonpart_tweak_wheel 0 \"AeroRaceWheel_Tire.mesh\" \"tracks/trans\" l 0.32\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_tweak_node","title":"addonpart_tweak_node","text":"<p>Allows for moving existing nodes. Currently doesn't support node options. </p> <ul> <li>Node ID: Node number to be moved.</li> <li>X position (in meters): Node's X coordinate.</li> <li>Y position (in meters): Node's Y coordinate.</li> <li>Z position (in meters): Node's Z coordinate.</li> </ul> <pre><code>; syntax: addonpart_tweak_node &lt;node ID&gt;&lt;x&gt;&lt;y&gt;&lt;z&gt;\naddonpart_tweak_node  5, 0.63, 0.36, 1.84\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_tweak_prop","title":"addonpart_tweak_prop","text":"<p>Enables the moving or replacing of props. Shares most syntax with props.</p> <ul> <li>Prop ID: The prop number, starting at <code>0</code>.</li> <li>x_offset:  The amount the prop should be moved in the X direction from the reference node. The distance it is moved depends on the distance between the Reference node and the '''X direction node '''(it's proportional): (0) leaves the prop on the reference node, (1) moves it all the way to the X direction node, and (0.5) puts the prop half-way between the two</li> <li>y_offset:  The amount the prop should be moved in the Y direction from the reference node. Like the X direction offset, the amount it is proportional to the distance between the reference node and the Y direction node.</li> <li>z_offset:  Imagine a surface which the X and Y directions pass straight through. If looking along that surface is the forwards direction, then this field moves the prop straight up. Unlike the X direction offset and the Y direction offset, the amount for the straight up offset is measured in meters</li> <li>x_axis_rotation:  The amount the prop should be rotated about the X axis</li> <li>y_axis_rotation:  The amount the prop should be rotated about the Y axis</li> <li>z_axis_rotation:  The amount the prop should be rotated about the 'straight up' axis</li> <li>mesh_name_or_special_prop: The name of the Ogre3D mesh object used for the prop.     If the mesh name starts with one of the keywords defined on the truck file format page, it will have special behavior.</li> </ul> <p>Note</p> <p>To move an existing mesh, the name MUST contain an empty string <code>\"\"</code>! This tells the game to use the existing mesh from the base mod.</p> <pre><code>; basic example, moves a prop:\n; syntax: 'addonpart_tweak_prop &lt;prop ID&gt; &lt;offsetX&gt; &lt;offsetY&gt; &lt;offsetZ&gt; &lt;rotX&gt; &lt;rotY&gt; &lt;rotZ&gt; &lt;media1&gt; &lt;media2&gt;'\naddonpart_tweak_prop 0 0.50,    0.37,     0.0,   90,    0,    0, \"\"\n\n; example for replacing a steering wheel dashboard prop:\naddonpart_tweak_prop 0 0,  0.38,  -0.06,  -10,  0,  180, \"\",DB_classic_swheel.mesh 0, 0, 0, 500\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_tweak_flexbody","title":"addonpart_tweak_flexbody","text":"<p>Enables the moving or replacing of flexbodies. Shares most syntax with flexbodies.</p> <ul> <li>Flexbody ID: The flexbody number, starting at <code>0</code>.</li> <li>x_offset: The amount the prop should be moved in the X direction from the reference_node.</li> <li>y_offset: The amount the prop should be moved in the Y direction from the reference_node.</li> <li>z_offset_meters:  Moves the flexbody \"straight up\". Unlike the x_offset and the y_offset, the distance is measured in meters.</li> <li>x_axis_rotation: The amount the flexbody should be rotated about the X axis</li> <li>y_axis_rotation: The amount the flexbody should be rotated about the Y axis</li> <li>z_axis_rotation: The amount the flexbody should be rotated about the 'straight up' axis</li> <li>mesh_name: The name of the Ogre3D mesh object used for the flexbody.</li> </ul> <pre><code>; basic example, moves a flexbody:\n; syntax: addonpart_tweak_flexbody &lt;flexbody ID&gt;&lt;offsetx&gt;&lt;offsety&gt;&lt;offsetz&gt;&lt;rotx&gt;&lt;roty&gt;&lt;rotz&gt;&lt;mesh&gt;\naddonpart_tweak_flexbody 0 0.5, 0.3,   0.027,   90,    0,   90, \"\"\n\n; example for replacing a flexbody:\naddonpart_tweak_flexbody 22 -0.165, 0.5, -0.21, 0.0, 90.0, 0.0, spoiler-wing.mesh\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#addonpart_tweak_managedmaterial","title":"addonpart_tweak_managedmaterial","text":"<p>Allows for replacing managedmaterial textures. This can be used to override a vehicle's skin (e.g. a taxi sign addon could add a taxi livery).</p> <ul> <li>Name: The material name.</li> <li>Type: The name of the effect you want to use. Valid names are defined in the truck file format page.</li> <li>Media1-3: Diffuse, specular, damage texture filenames.</li> </ul> <pre><code>; syntax: addonpart_tweak_managedmaterial &lt;name&gt; &lt;type&gt; &lt;media1&gt; &lt;media2&gt; [&lt;media3&gt;]\naddonpart_tweak_managedmaterial DodgeViperBody mesh_standard DodgeViperBody_myawesomeskin.dds DodgeViperBody_myawesomeskin_s.dds\n</code></pre>"},{"location":"vehicle-creation/fileformat-addonpart/#examples","title":"Examples","text":""},{"location":"vehicle-creation/fileformat-addonpart/#adding-new-flexbodies","title":"Adding new flexbodies","text":"<p>Most basic part example, adds a new flexbody (rear spoiler) to the Gavril MV4:</p> <pre><code>addonpart_name \"Gavril MV4 - Dura-Built D1 Spoiler\"\naddonpart_description \"Add-On by Charger, for use with Gavril MV4\"\n\n; GUIDS\n\n;addonpart_guid  ~ multiple GUIDs can be specified, these are only hints, user can force installation of any addon to any vehicle.\n;MV4\naddonpart_guid \"8733b9a9-b662-46b3-ac4d-c9b6974aa1cf\"\n;MV4S\naddonpart_guid \"de88a97c-086e-446b-bdbd-81bb41ef54ae\"\n;MV4R\naddonpart_guid \"a56e33dd-587e-48be-9ee8-675b57efc57b\"\n\n\n; Install instructions - usually props/flexbodies and managedmaterials\n; Format is exactly the same as in truck-definition fileformat.\n; IMPORTANT: `forset` line must be a single string as-is because it's wicked.\n; ---------------------------------------------------------------------------\n\nmanagedmaterials\n;new_material    effect               parameters...\nDB_D1 mesh_standard DB_D1.png DB_D1_s.png\n\nflexbodies\n;ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz, mesh\n10,11,26,0.5,-1.17,-0.27,-90,180,0,DB_D1.mesh\n\"forset 222-237\"\n</code></pre> <p></p>"},{"location":"vehicle-creation/fileformat-addonpart/#tweaking-existing-flexbodies","title":"Tweaking existing flexbodies","text":"<p>This addon uses <code>addonpart_tweak_flexbody</code> to replace the grille and spoiler on the Gavril Bandit,  along with <code>addonpart_unwanted_flexbody</code> to hide the front bumper and <code>addonpart_unwanted_flare</code> to hide the now covered headlights:</p> <pre><code>addonpart_name \"Gavril Bandit - Daytona Kit (Default Silver)\"\naddonpart_description \"Add-On by Charger, for use with Gavril Bandit 400GT/Extreme/Off-Road\"\n\n; GUIDS\n\n;addonpart_guid  ~ multiple GUIDs can be specified, these are only hints, user can force installation of any addon to any vehicle.\n;200/Stripped/300\n;addonpart_guid \"f4366e54-e74c-45bc-8482-c8524dd7b682\"\n;400GT/Extreme/Off-Road\naddonpart_guid \"ac2382e6-29b5-47b5-9e93-235ceaa27aa2\"\n\n\n; Install instructions - usually props/flexbodies and managedmaterials\n; Format is exactly the same as in truck-definition fileformat.\n; IMPORTANT: `forset` line must be a single string as-is because it's wicked.\n; ---------------------------------------------------------------------------\n\nmanagedmaterials\nBandit_daytona mesh_standard Bandit_daytona_Silver.png Bandit_daytona_s.png\n\n; syntax: addonpart_unwanted_flexbody &lt;flexbody ID&gt;\naddonpart_unwanted_flexbody 19\n\n; syntax: addonpart_unwanted_flare &lt;flare ID&gt;\naddonpart_unwanted_flare 10\naddonpart_unwanted_flare 11\naddonpart_unwanted_flare 12\naddonpart_unwanted_flare 13\n\n; syntax: addonpart_tweak_flexbody &lt;flexbody ID&gt;&lt;offsetx&gt;&lt;offsety&gt;&lt;offsetz&gt;&lt;rotx&gt;&lt;roty&gt;&lt;rotz&gt;&lt;mesh&gt;\naddonpart_tweak_flexbody 17 0.5,-4.45,0.08,-90,180,0, Bandit_daytona_nose.mesh\naddonpart_tweak_flexbody 24 0.5,-4.45,0.08,-90,180,0, Bandit_daytona_wing.mesh\n</code></pre> <p></p>"},{"location":"vehicle-creation/fileformat-addonpart/#moving-nodes","title":"Moving nodes","text":"<p>Using <code>addonpart_tweak_node</code>, it's possible to move the suspension nodes on a vehicle:</p> <pre><code>addonpart_name \"Mazda 626 - Lowered Suspension - Stage 1\"\naddonpart_description \"For use with Mazda 626 GF\"\n\naddonpart_guid \"mazda626gf\"\n\n ; NODE TWEAKS\n\n; syntax: addonpart_tweak_node &lt;node ID&gt;&lt;x&gt;&lt;y&gt;&lt;z&gt;\n\n;grp: front axle hubs\naddonpart_tweak_node  77,    0.920,    0.388,   -0.836\naddonpart_tweak_node  78,    0.770,    0.288,   -0.626\naddonpart_tweak_node  79,    1.070,    0.288,   -0.626\naddonpart_tweak_node  80,    0.920,    0.538,   -0.626\naddonpart_tweak_node  81,    0.920,    0.388,   -0.626\naddonpart_tweak_node  82,    0.920,    0.288,   -0.626\naddonpart_tweak_node  83,    0.920,    0.388,    0.836\naddonpart_tweak_node  84,    0.770,    0.288,    0.626\naddonpart_tweak_node  85,    1.070,    0.288,    0.626\naddonpart_tweak_node  86,    0.920,    0.538,    0.626\naddonpart_tweak_node  87,    0.920,    0.388,    0.626\naddonpart_tweak_node  88,    0.920,    0.288,    0.626\n;grp: rear axle hubs\naddonpart_tweak_node  92,    3.500,    0.343,   -0.836\naddonpart_tweak_node  93,    3.400,    0.243,   -0.626\naddonpart_tweak_node  94,    3.650,    0.243,   -0.626\naddonpart_tweak_node  95,    3.500,    0.493,   -0.626\naddonpart_tweak_node  96,    3.500,    0.343,   -0.626\naddonpart_tweak_node  97,    3.500,    0.243,   -0.626\naddonpart_tweak_node  98,    3.500,    0.343,    0.836\naddonpart_tweak_node  99,    3.400,    0.243,    0.626\naddonpart_tweak_node 100,    3.650,    0.243,    0.626\naddonpart_tweak_node 101,    3.500,    0.493,    0.626\naddonpart_tweak_node 102,    3.500,    0.343,    0.626\naddonpart_tweak_node 103,    3.500,    0.243,    0.626\n</code></pre> <p></p>"},{"location":"vehicle-creation/fileformat-addonpart/#wheels","title":"Wheels","text":"<p>Wheels with pre-mounted tires. These wheels can be installed onto any vehicle with mesh wheels:</p> <pre><code>addonpart_name \"StanceWerkz -ATS Cup Wheels\"\naddonpart_description \"Wheels for all vehicles. By FreeFall, ported to addonpart by CuriousMike\"\n\n; WHEEL TWEAKS\n\n; syntax: addonpart_tweak_wheel &lt;wheel ID&gt; &lt;media1&gt; &lt;media2&gt; &lt;wheel side&gt; &lt;radius&gt;&lt;width&gt;\naddonpart_tweak_wheel 0 \"ATSCup.mesh\" \"tracks/trans\" r 0.29\naddonpart_tweak_wheel 1 \"ATSCup.mesh\" \"tracks/trans\" l 0.29\naddonpart_tweak_wheel 2 \"ATSCup.mesh\" \"tracks/trans\" r 0.29\naddonpart_tweak_wheel 3 \"ATSCup.mesh\" \"tracks/trans\" l 0.29\n\n; MANAGED MATERIALS\n\nmanagedmaterials\n;new_material    effect               parameters...\nATSCup                  mesh_standard           ATSCup.png      ATSCup_s.png\nTire                            mesh_standard       Tire.png\n</code></pre> <p></p> <p>Advanced wheel example, specifically made to fit the Gavril MV4S. Features <code>addonpart_tweak_prop</code> to move the brakes and calipers:</p> <pre><code>addonpart_name \"Gavril MV4S - MotoMetal 962 Wheels\"\naddonpart_description \"Add-On wheels by Charger, for Gavril MV4S\"\n\n; GUIDS\n\n;MV4S\naddonpart_guid \"de88a97c-086e-446b-bdbd-81bb41ef54ae\"\n\n; PROP TWEAKS\n\n; move brakes inwards a bit so they don't clip\n; syntax: 'addonpart_tweak_prop &lt;prop ID&gt; &lt;offsetX&gt; &lt;offsetY&gt; &lt;offsetZ&gt; &lt;rotX&gt; &lt;rotY&gt; &lt;rotZ&gt; &lt;media1&gt; &lt;media2&gt;'\n;; calipers (orig offset X: 0.65)\naddonpart_tweak_prop 11    0.31,0,0,   65,0,180, \"\"\naddonpart_tweak_prop 12    0.31,0,0,   225,0,180, \"\"\naddonpart_tweak_prop 13    0.32,0,0,   -90,0,180, \"\"\naddonpart_tweak_prop 14    0.32,0,0,   30,0,180, \"\"\n;; brake discs (orig offset X: 0.65)\naddonpart_tweak_prop 15    0.31,0,0,   0,180,0, \"\"\naddonpart_tweak_prop 16    0.31,0,0,   0,180,0, \"\"\naddonpart_tweak_prop 17    0.32,0,0,   0,180,0, \"\"\naddonpart_tweak_prop 18    0.32,0,0,   0,180,0, \"\"\n\n; WHEEL TWEAKS\n\n; syntax: addonpart_tweak_wheel &lt;wheel ID&gt; &lt;media1&gt; &lt;media2&gt; &lt;wheel side&gt; &lt;radius&gt;&lt;width&gt;\naddonpart_tweak_wheel 0 \"MotoMetalF.mesh\" \"\" l\naddonpart_tweak_wheel 1 \"MotoMetalF.mesh\" \"\" r\naddonpart_tweak_wheel 2 \"MotoMetalR.mesh\" \"\" l\naddonpart_tweak_wheel 3 \"MotoMetalR.mesh\" \"\" r \n\n\n; MANAGED MATERIALS\n\nmanagedmaterials\nMotoMetal mesh_standard MotoMetal_962.dds MotoMetal_962_s.dds\n</code></pre> <p></p>"},{"location":"vehicle-creation/fileformat-soundscript/","title":"Soundscript file reference","text":"<p>This format is text-based and files must have the extension \".soundscript\". </p> <p>Each soundscript file can contain the description of many sound scripts.  Each sound script defines how to play one or many audio files  in the context of the vehicle where it is used (using the soundsources section). </p> <p>A sound script is defined by a line with his name  (which is the name you use in the soundsource section of your vehicle description file),  then a set of curly braces enclosing parameters.</p> <p> </p>"},{"location":"vehicle-creation/fileformat-soundscript/#parameters","title":"Parameters","text":""},{"location":"vehicle-creation/fileformat-soundscript/#sources","title":"Sources","text":"<p>Sources define which vehicle events or states will influence the sound. </p>"},{"location":"vehicle-creation/fileformat-soundscript/#trigger_source","title":"trigger_source","text":"<p>This is the more important source, and it is mandatory. There can be only one trigger source. It will define how the sound will start and stop. Valid values are: </p> Source Description always_on The sound will always play engine The sound will play as long as the car/truck/boat engine is running aeroengine1to aeroengine8 The sound will play as long as the numbered propeller or jet engine is running afterburner1to afterburner8 Same for afterburners horn The horn brake The brake pedal pump The hydraulic pump starter The engine starter turbo_BOV Turbo blow off valve turbo_waste_gate Turbo waste gate turbo_back_fire Turbo back fire ignition The ignition switch repair When the truck is repaired air Active air suspension activation air_purge Compressed air purge shift Shifting gears gear_slide Gearbox torture reverse_gear In reverse gear turn_signal Turn signal toggle turn_signal_tick Turn signal ticking turn_signal_warn_tick Emergency signals antilock Anti-lock brakes toggle tractioncontrol Traction control toggle creak Structural creaking break Beam breaking screetch Wheel screetching on tarmac parking_brake Parking brake aoa_horn Stall horn (AOA above 18 degree) avionic_chat_01to avionic_chat_13 Airplane chatter gpws_ap_disconnect Autopilot disconnect gpws_10 10 feet warning gpws_20 20 feet warning gpws_30 30 feet warning gpws_40 40 feet warning gpws_50 50 feet warning gpws_100 100 feet warning gpws_pull_up Woop woop pull up! gpws_minimums Minimums! linked_command Command sounds main_menu Main menu music"},{"location":"vehicle-creation/fileformat-soundscript/#pitch_source","title":"pitch_source","text":"<p>A pitch source will alter the pitch of the played sounds (if they are pitchable). There can be only one pitch source. Valid pitch sources are: </p> Name Description none This is the default, no pitch modulation, with a reference value of 1.0 engine_rpm Engine revolutions per minute turbo_rpm Turbo revolutions per minute aeroengine1_rpmto aeroengine8_rpm Propeller revolutions per minute, or jet engine speed in percent aeroengine1_throttleto aeroengine8_throttle Throttle setting of the propeller or jet engine wheel_speed_kmph Wheel speed in kilometer per hour air_speed_knots Air speed in knots angle_of_attack_degree Absolute value of the angle of attack in degree (for airplanes only) injector_ratio How much fuel is injected into the engine (from 0.0 to 1.0) torque_nm Output torque of engine in Newton.Meter gearbox_rpm Gearbox output speed in RPM creak Structural creaking effort break Beam breaking effort screetch Wheel screetch intensity pump_rpm Hydraulic pump RPM linked_command_rate Command movement rate music_volume Main menu music volume"},{"location":"vehicle-creation/fileformat-soundscript/#gain_source","title":"gain_source","text":"<p>A gain source will alter the gain of the played sounds (how loud it is heard).  There can be only one gain source. Valid gain sources are the same as for pitch sources. </p>"},{"location":"vehicle-creation/fileformat-soundscript/#modifiers","title":"Modifiers","text":"<p>Modifiers will take output value from the pitch or gain sources,  and apply to it a polynomial equation (up to degree 2) to alter the value to match the intended effect.  Both modifiers take two or three parameter values (they can be negative value): </p> <ul> <li>An offset (default 0.0) </li> <li>A multiplicative factor (default 1.0) </li> <li>An optional square factor (default 0.0)</li> </ul> <p>The equation is\u00a0: output = offset + mult_factor x source + square_factor x source x source </p>"},{"location":"vehicle-creation/fileformat-soundscript/#pitch_factors","title":"pitch_factors","text":"<p>The parameter pitch_factors alters the pitch source. It is optional. </p>"},{"location":"vehicle-creation/fileformat-soundscript/#gain_factors","title":"gain_factors","text":"<p>The parameter gain_factors alters the gain source. It is optional.  The output value of the gain modifier is clamped to the interval from 0.0 to 1.0 before being applied to the sounds. </p>"},{"location":"vehicle-creation/fileformat-soundscript/#sounds","title":"Sounds","text":"<p>These parameters define the WAV sound files used by the soundscript. All sounds parameters takes two parameters\u00a0: </p> <ul> <li>a reference pitch value\u00a0: this is the \"true\" pitch value corresponding to the recorded sound. For example, if you record an engine at 100 RPM, the resulting sound will have a reference pitch value of 100, and will be correctly pitched by the source engine RPM (as long as the units match, if not, use the modifiers). You can also use the keyword \"unpitched\" to say that this sound shall never be pitched. </li> <li>a WAV file name. This WAV file MUST be mono, and exported as 16-bit PCM with no metadata.</li> </ul>"},{"location":"vehicle-creation/fileformat-soundscript/#start_sound","title":"start_sound","text":"<p>This sound is optional and is played only once at the start of the trigger. There can be only one start sound. </p>"},{"location":"vehicle-creation/fileformat-soundscript/#sound","title":"sound","text":"<p>This sound is optional and played in a loop as long as the trigger holds. There can be many sounds defined. If there are many sounds with different reference pitches, the sounds will be mixed together to obtain the best blend of sounds for a given source pitch. This allows the \"texture\" of sound to change depending on pitch. </p>"},{"location":"vehicle-creation/fileformat-soundscript/#stop-sound","title":"stop sound","text":"<p>This sound is optional and is played only once at the end of the trigger. There can be only one end sound. </p>"},{"location":"vehicle-creation/fileformat-soundscript/#examples","title":"Examples","text":"<p>Note that you can compose sound scripts by playing several scripts at the same time (with the same trigger).  In the following, the full diesel engine sound is composed of the 3 first sound scripts played together. </p> <pre><code>tracks/default_diesel\n{\n trigger_source engine\n pitch_source engine_rpm\n sound 750.0 default_diesel_idle.wav\n sound 849.0 default_diesel_low.wav\n sound 1035.0 default_diesel_medium.wav\n sound 1455.0 default_diesel_high.wav\n}\n\ntracks/default_force\n{\n trigger_source engine\n gain_source injector_ratio\n gain_factors 0.0 0.5\n sound unpitched default_diesel_force.wav\n}\n\ntracks/default_turbo\n{\n trigger_source engine\n pitch_source turbo_rpm\n gain_source turbo_rpm\n gain_factors 0.0 0.0 1.852E-12\n sound 100000.0 default_turbo.wav\n}\n\ntracks/default_starter\n{\n trigger_source starter\n start_sound unpitched default_starter_start.wav\n sound unpitched default_starter.wav\n stop_sound unpitched default_starter_stop.wav\n}\n\ntracks/default_pump\n{\n trigger_source pump\n pitch_source pump_rpm\n start_sound 660.0 default_pump_start.wav\n sound 660.0 default_pump.wav\n stop_sound 660.0 default_pump_stop.wav\n}\n\ntracks/default_brakes\n{\n trigger_source brake\n stop_sound unpitched default_brakes.wav\n}\n\ntracks/default_parkbrakes\n{\n trigger_source parking_brake\n start_sound unpitched default_parking_brakes.wav\n}\n</code></pre>"},{"location":"vehicle-creation/fileformat-soundscript/#default","title":"Default","text":"<p>These are the default soundscripts for RoR.\u00a0 It is divided into sections according to engine type.</p>"},{"location":"vehicle-creation/fileformat-soundscript/#engine-diesel","title":"Engine (Diesel)","text":"<pre><code>tracks/default_diesel\n{\n trigger_source engine\n pitch_source engine_rpm\n sound 750.0 default_diesel_idle.wav\n sound 849.0 default_diesel_low.wav\n sound 1035.0 default_diesel_medium.wav\n sound 1455.0 default_diesel_high.wav\n}\n\ntracks/default_force\n{\n trigger_source engine\n gain_source injector_ratio\n gain_factors 0.0 0.5\n sound unpitched default_diesel_force.wav\n}\n\ntracks/default_starter\n{\n trigger_source starter\n start_sound unpitched default_starter_start.wav\n sound unpitched default_starter.wav\n stop_sound unpitched default_starter_stop.wav\n}\n\ntracks/default_turbo\n{\n trigger_source engine\n pitch_source turbo_rpm\n gain_source turbo_rpm\n gain_factors 0.0 0.0 1.852E-12\n sound 100000.0 default_turbo.wav\n}\n\ntracks/default_air_purge\n{\n trigger_source air_purge\n sound unpitched default_valve.wav\n}\n\ntracks/default_horn\n{\n trigger_source horn\n start_sound unpitched default_horn_start.wav\n sound unpitched default_horn.wav\n stop_sound unpitched default_horn_stop.wav\n}\n\ntracks/default_pump\n{\n trigger_source pump\n pitch_source pump_rpm\n start_sound 660.0 default_pump_start.wav\n sound 660.0 default_pump.wav\n stop_sound 660.0 default_pump_stop.wav\n}\n\ntracks/default_screetch\n{\n trigger_source screetch\n gain_source screetch\n sound unpitched default_screetch.wav\n}\n\ntracks/default_brakes\n{\n trigger_source brake\n stop_sound unpitched default_brakes.wav\n}\n\ntracks/default_parkbrakes\n{\n trigger_source parking_brake\n start_sound unpitched default_parking_brakes.wav\n}\n\ntracks/default_air\n{\n trigger_source air\n sound unpitched default_air.wav\n}\n\ntracks/default_shift\n{\n trigger_source shift\n start_sound unpitched default_shift.wav\n}\n\ntracks/default_break\n{\n trigger_source break\n pitch_source break\n pitch_factors 1.0 1.0\n start_sound 1.0 default_break.wav\n}\n\ntracks/default_creak\n{\n trigger_source creak\n pitch_source creak\n pitch_factors 1.0 0.2\n gain_source creak\n gain_factors 0.3 1.0\n start_sound 1.0 default_creak.wav\n}\n\ntracks/default_gear_slide\n{\n trigger_source gear_slide\n start_sound unpitched default_gear_slide.wav\n}\n\ntracks/default_reverse_beep\n{\n trigger_source reverse_gear\n sound unpitched default_reverse_beep.wav\n}\n\ntracks/default_turn_signal\n{\n trigger_source turn_signal\n sound unpitched default_turn_signal.wav\n}\n</code></pre>"},{"location":"vehicle-creation/fileformat-soundscript/#engine-gasoline","title":"Engine (Gasoline)","text":"<pre><code>tracks/default_car\n{\n trigger_source engine\n pitch_source engine_rpm\n gain_source injector_ratio\n gain_factors 0.5 0.5\n sound 1500 default_car_idle.wav\n}\n\ntracks/default_starter\n{\n trigger_source starter\n start_sound unpitched default_starter_start.wav\n sound unpitched default_starter.wav\n stop_sound unpitched default_starter_stop.wav\n}\n\ntracks/default_horn\n{\n trigger_source horn\n start_sound unpitched default_horn_start.wav\n sound unpitched default_horn.wav\n stop_sound unpitched default_horn_stop.wav\n}\n\ntracks/default_pump\n{\n trigger_source pump\n pitch_source pump_rpm\n start_sound 660.0 default_pump_start.wav\n sound 660.0 default_pump.wav\n stop_sound 660.0 default_pump_stop.wav\n}\n\ntracks/default_police\n{\n trigger_source horn\n sound unpitched default_police.wav\n}\n\ntracks/default_screetch\n{\n trigger_source screetch\n gain_source screetch\n sound unpitched default_screetch.wav\n}\n\ntracks/default_shift\n{\n trigger_source shift\n start_sound unpitched default_shift.wav\n}\n\ntracks/default_break\n{\n trigger_source break\n pitch_source break\n pitch_factors 1.0 1.0\n start_sound 1.0 default_break.wav\n}\n\ntracks/default_creak\n{\n trigger_source creak\n pitch_source creak\n pitch_factors 1.0 0.2\n gain_source creak\n gain_factors 0.3 1.0\n start_sound 1.0 default_creak.wav\n}\n\ntracks/default_gear_slide\n{\n trigger_source gear_slide\n start_sound unpitched default_gear_slide.wav\n}\n\ntracks/default_turn_signal\n{\n trigger_source turn_signal\n sound unpitched default_turn_signal.wav\n}\n</code></pre>"},{"location":"vehicle-creation/fileformat-soundscript/#airplane-prop","title":"Airplane (Prop)","text":"<pre><code>tracks/default_turboprop_start1\n{\n trigger_source aeroengine1\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower1\n{\n trigger_source always_on\n pitch_source aeroengine1_rpm\n gain_source aeroengine1_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower1\n{\n trigger_source aeroengine1\n pitch_source aeroengine1_rpm\n gain_source aeroengine1_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n\ntracks/default_turboprop_start2\n{\n trigger_source aeroengine2\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower2\n{\n trigger_source always_on\n pitch_source aeroengine2_rpm\n gain_source aeroengine2_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower2\n{\n trigger_source aeroengine2\n pitch_source aeroengine2_rpm\n gain_source aeroengine2_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n\ntracks/default_turboprop_start3\n{\n trigger_source aeroengine3\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower3\n{\n trigger_source always_on\n pitch_source aeroengine3_rpm\n gain_source aeroengine3_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower3\n{\n trigger_source aeroengine3\n pitch_source aeroengine3_rpm\n gain_source aeroengine3_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n\ntracks/default_turboprop_start4\n{\n trigger_source aeroengine4\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower4\n{\n trigger_source always_on\n pitch_source aeroengine4_rpm\n gain_source aeroengine4_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower4\n{\n trigger_source aeroengine4\n pitch_source aeroengine4_rpm\n gain_source aeroengine4_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n\ntracks/default_turboprop_start5\n{\n trigger_source aeroengine5\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower5\n{\n trigger_source always_on\n pitch_source aeroengine5_rpm\n gain_source aeroengine5_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower5\n{\n trigger_source aeroengine5\n pitch_source aeroengine5_rpm\n gain_source aeroengine5_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n\ntracks/default_turboprop_start6\n{\n trigger_source aeroengine6\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower6\n{\n trigger_source always_on\n pitch_source aeroengine6_rpm\n gain_source aeroengine6_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower6\n{\n trigger_source aeroengine6\n pitch_source aeroengine6_rpm\n gain_source aeroengine6_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n\ntracks/default_turboprop_start7\n{\n trigger_source aeroengine7\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower7\n{\n trigger_source always_on\n pitch_source aeroengine7_rpm\n gain_source aeroengine7_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower7\n{\n trigger_source aeroengine7\n pitch_source aeroengine7_rpm\n gain_source aeroengine7_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n\ntracks/default_turboprop_start8\n{\n trigger_source aeroengine8\n start_sound unpitched default_turboprop_start.wav\n}\n\ntracks/default_turboprop_lopower8\n{\n trigger_source always_on\n pitch_source aeroengine8_rpm\n gain_source aeroengine8_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_turboprop_lopower.wav\n}\n\ntracks/default_turboprop_hipower8\n{\n trigger_source aeroengine8\n pitch_source aeroengine8_rpm\n gain_source aeroengine8_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_turboprop_hipower.wav\n}\n</code></pre>"},{"location":"vehicle-creation/fileformat-soundscript/#airplane-jet","title":"Airplane (Jet)","text":"<pre><code>tracks/default_turbojet_start1\n{\n trigger_source aeroengine1\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower1\n{\n trigger_source always_on\n pitch_source aeroengine1_rpm\n gain_source aeroengine1_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower1\n{\n trigger_source aeroengine1\n gain_source aeroengine1_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner1\n{\n trigger_source afterburner1\n sound unpitched default_turbojet_afterburner.wav\n}\n\ntracks/default_turbojet_start2\n{\n trigger_source aeroengine2\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower2\n{\n trigger_source always_on\n pitch_source aeroengine2_rpm\n gain_source aeroengine2_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower2\n{\n trigger_source aeroengine2\n gain_source aeroengine2_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner2\n{\n trigger_source afterburner2\n sound unpitched default_turbojet_afterburner.wav\n}\n\ntracks/default_turbojet_start3\n{\n trigger_source aeroengine3\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower3\n{\n trigger_source always_on\n pitch_source aeroengine3_rpm\n gain_source aeroengine3_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower3\n{\n trigger_source aeroengine3\n gain_source aeroengine3_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner3\n{\n trigger_source afterburner3\n sound unpitched default_turbojet_afterburner.wav\n}\n\ntracks/default_turbojet_start4\n{\n trigger_source aeroengine4\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower4\n{\n trigger_source always_on\n pitch_source aeroengine4_rpm\n gain_source aeroengine4_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower4\n{\n trigger_source aeroengine4\n gain_source aeroengine4_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner4\n{\n trigger_source afterburner4\n sound unpitched default_turbojet_afterburner.wav\n}\n\ntracks/default_turbojet_start5\n{\n trigger_source aeroengine5\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower5\n{\n trigger_source always_on\n pitch_source aeroengine5_rpm\n gain_source aeroengine5_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower5\n{\n trigger_source aeroengine5\n gain_source aeroengine5_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner5\n{\n trigger_source afterburner5\n sound unpitched default_turbojet_afterburner.wav\n}\n\ntracks/default_turbojet_start6\n{\n trigger_source aeroengine6\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower6\n{\n trigger_source always_on\n pitch_source aeroengine6_rpm\n gain_source aeroengine6_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower6\n{\n trigger_source aeroengine6\n gain_source aeroengine6_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner6\n{\n trigger_source afterburner6\n sound unpitched default_turbojet_afterburner.wav\n}\n\ntracks/default_turbojet_start7\n{\n trigger_source aeroengine7\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower7\n{\n trigger_source always_on\n pitch_source aeroengine7_rpm\n gain_source aeroengine7_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower7\n{\n trigger_source aeroengine7\n gain_source aeroengine7_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner7\n{\n trigger_source afterburner7\n sound unpitched default_turbojet_afterburner.wav\n}\n\ntracks/default_turbojet_start8\n{\n trigger_source aeroengine8\n start_sound unpitched default_turbojet_start.wav\n}\n\ntracks/default_turbojet_lopower8\n{\n trigger_source always_on\n pitch_source aeroengine8_rpm\n gain_source aeroengine8_rpm\n gain_factors 2.0 -0.02\n sound 25.0 default_turbojet_lopower.wav\n}\n\ntracks/default_turbojet_hipower8\n{\n trigger_source aeroengine8\n gain_source aeroengine8_rpm\n gain_factors -0.30 0.013\n sound unpitched default_turbojet_hipower.wav\n}\n\ntracks/default_turbojet_afterburner8\n{\n trigger_source afterburner8\n sound unpitched default_turbojet_afterburner.wav\n}&lt;/pre&gt; \n\n==== Airplane (Piston)  ====\n\n&lt;pre&gt;tracks/default_pistonprop_start1\n{\n trigger_source aeroengine1\n start_sound unpitched default_pistonprop_start.wav\n}\n\ntracks/default_pistonprop_lopower1\n{\n trigger_source always_on\n pitch_source aeroengine1_rpm\n gain_source aeroengine1_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower1\n{\n trigger_source aeroengine1\n pitch_source aeroengine1_rpm\n gain_source aeroengine1_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n\ntracks/default_pistonprop_start2\n{\n trigger_source aeroengine2\n start_sound unpitched default_pistonprop_start.wav\n}\n\ntracks/default_pistonprop_lopower2\n{\n trigger_source always_on\n pitch_source aeroengine2_rpm\n gain_source aeroengine2_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower2\n{\n trigger_source aeroengine2\n pitch_source aeroengine2_rpm\n gain_source aeroengine2_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n\ntracks/default_pistonprop_start3\n{\n trigger_source aeroengine3\n start_sound unpitched default_pistonprop_start.wav\n}\n\ntracks/default_pistonprop_lopower3\n{\n trigger_source always_on\n pitch_source aeroengine3_rpm\n gain_source aeroengine3_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower3\n{\n trigger_source aeroengine3\n pitch_source aeroengine3_rpm\n gain_source aeroengine3_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n\ntracks/default_pistonprop_start4\n{\n trigger_source aeroengine4\n start_sound unpitched default_pistonprop_start.wav\n}\n\ntracks/default_pistonprop_lopower4\n{\n trigger_source always_on\n pitch_source aeroengine4_rpm\n gain_source aeroengine4_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower4\n{\n trigger_source aeroengine4\n pitch_source aeroengine4_rpm\n gain_source aeroengine4_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n\ntracks/default_pistonprop_lopower5\n{\n trigger_source always_on\n pitch_source aeroengine5_rpm\n gain_source aeroengine5_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower5\n{\n trigger_source aeroengine5\n pitch_source aeroengine5_rpm\n gain_source aeroengine5_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n\ntracks/default_pistonprop_lopower6\n{\n trigger_source always_on\n pitch_source aeroengine6_rpm\n gain_source aeroengine6_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower6\n{\n trigger_source aeroengine6\n pitch_source aeroengine6_rpm\n gain_source aeroengine6_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n\ntracks/default_pistonprop_lopower7\n{\n trigger_source always_on\n pitch_source aeroengine7_rpm\n gain_source aeroengine7_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower7\n{\n trigger_source aeroengine7\n pitch_source aeroengine7_rpm\n gain_source aeroengine7_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n\ntracks/default_pistonprop_lopower8\n{\n trigger_source always_on\n pitch_source aeroengine8_rpm\n gain_source aeroengine8_throttle\n gain_factors 0.5 0.5\n sound 1000.0 default_pistonprop_lopower.wav\n}\n\ntracks/default_pistonprop_hipower8\n{\n trigger_source aeroengine8\n pitch_source aeroengine8_rpm\n gain_source aeroengine8_throttle\n gain_factors -0.5 1.0\n sound 1000.0 default_pistonprop_hipower.wav\n}\n</code></pre>"},{"location":"vehicle-creation/fileformat-soundscript/#marine-large","title":"Marine (Large)","text":"<pre><code>tracks/default_marine_large\n{\n trigger_source engine\n pitch_source engine_rpm\n sound 100.0 default_marine_large.wav\n}\n</code></pre>"},{"location":"vehicle-creation/fileformat-soundscript/#marine-small","title":"Marine (Small)","text":"<pre><code>tracks/default_marine_small\n{\n trigger_source engine\n pitch_source engine_rpm\n sound 100.0 default_marine_small.wav\n}\n</code></pre>"},{"location":"vehicle-creation/fileformat-soundscript/#exporting-sounds","title":"Exporting sounds","text":"<p>To correctly export sounds for use in RoR, first install Audacity. </p> <p>Other programs and online converters usually won't work!</p> <p>Once installed, open your sound file in Audacity. It will likely have two audio tracks:</p> <p></p> <p>Convert to Mono by clicking <code>Tracks</code> -&gt; <code>Mix</code> -&gt; <code>Mix Stereo Down to Mono</code>:</p> <p></p> <p>The sound should now only have a single audio track:</p> <p></p> <p>Now click <code>File</code> -&gt; <code>Export Audio..</code></p> <p></p> <p>..then <code>Export to computer</code></p> <p></p> <p></p> <p>Use the following settings:</p> <p>Format: <code>WAV (Microsoft)</code></p> <p>Channels: <code>Mono</code></p> <p>Encoding: <code>Signed 16-bit PCM</code></p> <p>Once done, click <code>Edit Metadata..</code>:</p> <p></p> <p>Press <code>Clear</code> to remove all metadata tags if there are any. The sound will NOT play in-game if metadata is present!</p> <p>Click <code>OK</code> to exit the metadata window. Finally, click <code>Export</code> to save your sound. </p> <p>Your sound should now be ready to use in RoR!</p>"},{"location":"vehicle-creation/fileformat-truck/","title":"Truck file format","text":"<p>\"Truck\" is a text-based file format which defines all physically simulated objects in the game, be it vehicles of any kind, machinery, loads or any other things. The name is historical - Rigs of Rods was originally a heavy truck simulator, other kinds of vehicles came later.</p> <p>Recognized filename extensions for this format are: <code>.truck</code>, <code>.car</code>, <code>.boat</code>, <code>.airplane</code>, <code>.train</code>, <code>.machine</code>, <code>.trailer</code>, <code>.load</code>, <code>.fixed</code>. Note the extension is only informative, the actual type of object is determined by file contents.</p> <p>The truckfile is divided into sections, each with defined purpose. Except the title, every section starts with a keyword. Order of sections matters (for example: cinecams requires beams).</p> <p>Comment lines can be inserted by putting <code>;</code> or <code>//</code> at the beginning of the line.</p>"},{"location":"vehicle-creation/fileformat-truck/#building-philosophy","title":"Building Philosophy","text":"<p>See Vehicle Concepts to understand the building philosophy.</p>"},{"location":"vehicle-creation/fileformat-truck/#is-it-a-truck-plane-train-or-boat","title":"Is It a Truck, Plane, Train or Boat?","text":"<p>Before we start, let's ask an important question: Is it a truck, plane, train, or boat? Or what makes a truck a truck and a plane a plane and a train a train, or a boat a boat? Simple:</p> <ul> <li>A truck is a description file containing an engine section</li> <li>A plane is a description file containing a turboprops, turbojets, or pistonprops section</li> <li>A boat is a description file containing a screwprops section</li> <li>A train is a vehicle that drives on a rail (see Building rail vehicles)</li> </ul> <p>Also, notice that:</p> <ul> <li>You should not combine more than one propulsion (eg have both an engine and a turboprops section in the same file)</li> <li>If you have no propulsion, then you are making a load, and the file extension should be <code>.load</code></li> <li>You can have a wings section on a truck or a boat (e.g. to add aerodynamic spoilers for stability).</li> <li>You should have a fusedrag section on a plane to have a better aerodynamic modeling.</li> <li>A boat needs to have a hull which is defined in the submesh section.</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#light-cars","title":"Light Cars","text":"<p>Here a few recommendations for those who want to build a light car: RoR is optimized for heavy trucks, so you have to use some extra sections that help you create a realistic car:</p> <ul> <li>Use engoptions to reduce the engine inertia and set the engine type to c</li> <li>Use brakes to reduce braking force</li> <li>Use and abuse set_beam_defaults to soften the car body, or it will be too strong and springy, i.e. almost indestructible.</li> <li>Experiment with the engine section to use higher RPM and correct gear ratios.</li> <li>Lighten the wheels as much as possible. This is not very easy as they become unstable. Reducing the spring and damping of the wheels helps a lot. Suggested values for 100kg wheels: spring <code>150000</code> and damping <code>1000</code>.</li> <li>Use the dashboard-small.mesh prop as a dashboard. (unless you have a custom dashboard you want to use.)</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#documentation-style-guide","title":"Documentation style guide","text":"<p>Every keyword (directive, inline-section or section) which has parameters should have them listed in this manner:</p> <ul> <li>Required parameter:     Data type;     default = <code>VALUE</code>; Explanatory text.</li> <li>Example required parameter:     Real number;     default = <code>-1.0</code>; Parameters are written as shown, followed by a colon.      The data type should be easy to understand for a human, not technically accurate.</li> <li>Another required parameter:     Positive decimal;     The \"default\" text can be omitted if the parameter has no default.     The \"data type\" field should always be followed by semicolon.</li> <li>Optional parameter (optional): Data type;     default = <code>VALUE</code>;     Optional parameters have \"(optional)\" text after them.     Alternatively, the parameter list may be split into \"Required parameters\" list, followed by \"Optional parameters\" list, see 'flares'.</li> <li>Required nullable parameter (nullable): Data type;      Empty value = <code>-1</code>;     Parameters which must be entered but can contain \"empty value\" are described (nullable) and have \"Empty value\" section.</li> <li>New parameter (optional): [ Version 0.4+ ] Data type; Parameters with version requirements have a [ Version ] box.</li> <li>Options (optional): String,     default = none Options are enumerated as sub-list.<ul> <li><code>a</code>: What this option does.</li> <li><code>b</code>: Another option</li> <li><code>c</code> or <code>C</code>: Case insensitive option.</li> </ul> </li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#required-sections","title":"Required Sections","text":"<p>The game will not run without these sections. Every one of these sections must be present for a vehicle to work in the game!</p>"},{"location":"vehicle-creation/fileformat-truck/#title","title":"Title","text":"<p>This is the only section not introduced by a keyword. It is the name of the truck, and it absolutely positively must be the first line of the file.</p> <pre><code>My nice truck\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#globals","title":"Globals","text":"<p>This section defines some global parameters. Those parameters are:</p> <ul> <li>dry mass - Real number;     The weight RoR will try to give the truck (affected by minimum node weight, see below).     Weight is measured in kilograms. (For you people in non-metric countries, a kilogram is 2.2 pounds.)</li> <li>Load mass - Real number;     Total mass of all nodes marked with the option \"l\".</li> <li>Material name - String;     The name of the material that will be used to texture the truck's submesh.     This material must be defined in a separate material file.</li> </ul> <pre><code>globals\n;dry mass, cargo mass, material\n10000.0,  1000.0,     tracks/semi\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#nodes","title":"Nodes","text":"<p>This section begins the structural definition of the vehicle. Each line defines a node.</p> <ul> <li>Node number: Positive decimal number; The first parameter is the node number. These numbers must be consecutive.     Important: Do NOT use node 0 for any moving stuff like propellers, commands etc. It's the reference for some calculations in RoR and should be part of the rigid frame of your truck.</li> <li>X position (in meters): Real number; Node's X coordinate.</li> <li>Y position (in meters): Real number; Node's Y coordinate.</li> <li>Z position (in meters): Real number; Node's Z coordinate.</li> <li>Options (optional): String; default = none; Node options. You can combine multiple flags.<ul> <li>n: This node can be grabbed with the mouse. (Standard node)</li> <li>m [ Version 0.39.07+ ]: This node can't be grabbed with the mouse. (Useful for switching levers with the mouse.)</li> <li>f: This node will not produce sparks. (Useful for support feet or hand made wheels.)</li> <li>x: This node is the exhaust point. (requires a \"y\" node) (see the exhausts section)</li> <li>y: The exhaust reference point. This node should be placed opposite of the direction that you want the exhaust to come from.</li> <li>c: This node will not detect contact with ground. (Can be used for optimization on inner chassis parts, for instance.)</li> <li>h: This node is a hook point. (Like the hook on a crane, or a winch, or whatever.) RoR will create a beam between this Node and Node#0. If this is Node#0, it will link it to Node#1 (even if it isn't defined yet).</li> <li>e: This node is a terrain editing point (Like in the terrain editor truck. Not used as of version 0.4.0+)</li> <li>b: This node is assigned an extra buoyancy force (Experimental!)</li> <li>p [ Version 0.36.3+ ]: Disables particle effects for this node (Like dust.)</li> <li>L [ Version 0.36.3+ ]: Enables node settings logging into the ror.log for this node</li> <li>l: This node bears a part of the cargo load</li> </ul> </li> <li>Load mass (in Kilograms) (optional, needs l flag): Real number; Overrides the load mass for this node. Only valid if used with l option.      Please note that the load-nodes where you specify the mass explicitly are not calculated with the global load mass. So if you specify a custom mass on any load, you will also increase the mass on all other nodes if you do not decrease the global mass.</li> </ul> <p>NOTE: You can put a comment at the end of a node-line.</p> <pre><code>nodes\n;id,    x,    y,    z,     options\n;main chassis\n0, 0.00, 0.75, 0.66\n1, 0.00, 0.75, 1.84\n2, 0.63, 0.75, 0.66\n3, 0.63, 0.36, 0.66, l\n4, 0.63, 0.75, 1.84\n5, 0.63, 0.36, 1.84, n\n6, 1.48, 0.75, 0.66, l\n7, 1.48, 0.00, 0.66\n8, 1.48, 0.75, 1.84, c\n9, 1.48, 0.00, 1.84, x\n10, 2.33, 0.75, 0.66, y\n11, 2.33, 0.00, 0.66\n</code></pre> <p>This section supports multiple options as argument.</p> <p>If you want a <code>f</code> and <code>b</code> node together you could write something like this:</p> <pre><code>nodes\n11, 2.33, 0.00, 0.66, fb\n</code></pre> <p>This setting will set the node mass to 2000 kilograms:</p> <pre><code>nodes\n14, 1.36, 0.00, 1.97, l 2000\n</code></pre> <p>This setting will set the node as non-contactable and set the mass to 2000 kilograms:</p> <pre><code>nodes\n14, 1.36, 0.00, 1.97, cl 2000\n</code></pre> <p>You can debug your truck's node masses by enabling <code>Debug actor mass</code> in settings:</p> <p></p> <p>Look into your <code>RoR.log</code> after spawning and you could see something like this:</p> <pre><code>Node 0 : 3662 kg\nNode 1 : 1730 kg\n...\nNode 13 : 1180 kg (normal load node: 6000 kg / 6 nodes)\nNode 14 : 1180 kg (normal load node: 6000 kg / 6 nodes)\n...\nNode 136 : 5026 kg (overridden by node mass)\nNode 141 mass (20kg) too light. Resetting to minimass (50kg).\n...\nTOTAL VEHICLE MASS: 32399 kg\n</code></pre> <p>You can set any option property, loadweight, friction, volume, and surface-coefficients as default with set_node_defaults.</p>"},{"location":"vehicle-creation/fileformat-truck/#nodes2","title":"Nodes2","text":"<p>Nodes2 use the same syntax as nodes, except the first argument can be any string instead of a number. After using a name for a node in the nodes2 section, you can use it for any node parsing throughout the rest of the file. valid characters for the string: a-z,A-Z,0-9, _</p> <p>For example:</p> <pre><code>nodes2\n; name,    x,    y,    z,     options\n; main chassis\n0, 0.00, 0.75, 0.66\n1, 0.00, 0.75, 1.84\nspecial_node, 0.63, 0.75, 0.66\n3, 0.63, 0.36, 0.66,l\n4, 0.63, 0.75, 1.84\nanother_one, 0.63, 0.36, 1.84\nhook_node, 1.48, 0.75, 0.66,lh 50\n</code></pre> <p>We advise to use the following scheme for naming the nodes:</p> <pre><code>function_section_name\n</code></pre> <p>So for example a rear hook node could look like this:</p> <pre><code>hook_rear_hook1\n</code></pre> <p>There is also a fallback in place which will resolve named nodes to normal node numbers. For example if you convert an existing truck to named nodes (nodes2) and don't want to replace all occurrences, just leave the numbers there, it will take them up as classic node numbers.</p> <p>Things to keep in mind:</p> <ul> <li>Transition from <code>nodes</code> to <code>nodes2</code> is easy: just replace <code>nodes</code> with <code>nodes2</code>, the numbers will act as the name strings</li> <li>Transition from <code>nodes2</code> to <code>nodes</code> is impossible, since nodes rely on the linear numbering of nodes</li> <li>Only use node names without any special characters or spaces (only a-z, A-Z, 0-9, _, -)</li> <li>You don't need to convert all nodes to nodes2 with names, if a nodes2 named node is not found, it will fallback to using the number as classic node.</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#beams","title":"Beams","text":"<p>This section defines all the beams connecting nodes. Each line describes a beam.</p> <ul> <li>node_A: Node ID; Connected node</li> <li>node_B: Node ID; Connected node</li> <li>options (optional): String; default = empty<ul> <li>v: Dummy option, does nothing. Beams are visible by default.</li> <li>i : This beam is invisible.</li> <li>r : This beam is a rope (no resistance to compression, but will deform/break when expanded)</li> <li>s : This beam is a support beam (no resistance to expansion, but will deform/break when compressed). Support beams have 1/10<sup>th</sup> of the damping of the last set_beam_defaults setting</li> </ul> </li> <li>extension_break_limit (optional): Positive real number; default = 4 * original length; Only valid with option \"s\"</li> </ul> <p>TIP: Support beams are very useful for limiting movement of body panels like trunks, hoods, and doors from going inside the car while still allowing rotation without costly and complicated collisions. Default expansion break length is . User set break length factor is optional. Valid factors are &gt; 0.0. .</p> <pre><code>beams\n;node1, node2, options\n0,     1\n2,     4\n3,     5,        i\n6,     8,        i\n7,     9\n10,    12,       i\n11,    13,       i\n; support beam, default extension break limit\n11,    23,       s\n; visible support beam, user set extension break limit original spawn length * 12.5\n11,    24,       s 12.5\n</code></pre> <p>This section supports multiple options as argument. If you want a 'i' and 'r' node together you could write something like this:</p> <pre><code>;invisible rope\n11,    13,       ir\n; invisible support beam, default extension break limit\n11,    25,       is\n; invisible support beam, user set extension break limit original spawn length * 25\n11,    26,       si 25.0\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#cameras","title":"Cameras","text":"<p>This section is important. It helps to position the truck in space, by defining a local direction reference. This is used to measure the pitch and the roll of the truck. It is also very important to orient the truck's cameras. </p> <p>The three parameters are node numbers. The first is the reference node and may be anywhere. The second must be behind the first (if you look at the front of the truck, it is hidden behind the first). The third must be at the left of the first (if you look to the right of the truck, it is hidden by the first). </p> <p>Correct relative placement of these nodes is important, or it may break the inside camera view.</p> <p></p> <pre><code>cameras\n;center, back, left\n0, 2, 1\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#cinecam","title":"Cinecam","text":"<p>This defines the position of the in-truck camera. It is a special node suspended from eight chassis nodes.</p> <p>Required parameters:</p> <ul> <li>X,Y,Z position (in meters): Real numbers; Coordinates of the camera point.</li> <li>8 node bindings: Node ID; Nodes to which the camera point is bound.</li> </ul> <p>Optional parameters:</p> <ul> <li>beam spring: Real number; Default=8000</li> <li>beam damping: Real number; Default=800</li> <li>node weight (Kg): Real number; [  Version 2020.01+ ] Weight of the camera point. Default=20Kg</li> </ul> <p>Example:</p> <pre><code>cinecam\n;  x,   y,   z, &lt;---------8 bindings---------&gt;, Opt: spring, damping, node-weight\n0.66, 2.0, 1.8, 75, 76, 77, 78, 73, 74, 53, 54,      8000.0,   800.0,        20.0\n</code></pre> <p>Note: If you have multiple cinecams, you also need to have multiple <code>cameras</code>. You can simply duplicate the line per cinecam. Example:</p> <pre><code>cameras\n;center, back, left\n0, 2, 1\n0, 2, 1\n0, 2, 1\n\ncinecam\n;  x,   y,   z, &lt;---------8 bindings---------&gt;, Opt: spring, damping, node-weight\n0.66, 2.0, 1.8, 75, 76, 77, 78, 73, 74, 53, 54,      8000.0,   800.0,        20.0\n0.56, 1.0, 1.4, 74, 75, 76, 77, 72, 73, 52, 53,      8000.0,   800.0,        20.0\n0.36, 2.5, 1.9, 70, 75, 73, 76, 74, 79, 53, 50,      8000.0,   800.0,        20.0\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#end","title":"End","text":"<p>This section will stop the parser. Everything after it will be ignored.</p> <p>Since [  Version 0.4.5.0 ], it's optional. In previous versions it's STRICTLY REQUIRED - without it, the vehicle will crash the game.</p> <pre><code>end\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#organizational-sections","title":"Organizational Sections","text":"<p>These sections are not required, but will make it easier to locate your file or work with. Do not use carets in your syntax, they are used to mark sections!</p>"},{"location":"vehicle-creation/fileformat-truck/#guid","title":"GUID","text":"<p>You should use the guid feature to allow RoR to recognize your truck uniquely. </p> <p>This section is required for skins.</p> <pre><code>;guid &lt;GUID&gt;\nguid 6daaee29-e462-4d99-96d2-4577294f7b10\n</code></pre> <p>You can generate some GUIDs here.</p>"},{"location":"vehicle-creation/fileformat-truck/#default_skin","title":"Default_skin","text":"<p>Overrides the pre-selected skin of the truck.  The specified skin will be displayed at the top of the skin selector instead of the dummy \"Default skin\" entry. </p> <p>If no other skins are available, the skin will be applied automatically.</p> <pre><code>;default_skin &lt;skin_name_with_underscores_for_spaces&gt;\ndefault_skin My_Awesome_Skin\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#fileformatversion","title":"Fileformatversion","text":"<p>This tells RoR what version of RoR your truck is built for. Most trucks built today should use <code>fileformatversion 3</code></p> <ul> <li>Version 1 = Pre-RoR 0.32</li> <li>Version 2 = RoR 0.32 - 0.35</li> <li>Version 3 = Post-RoR 0.36</li> <li>Leaving out this tag will result in version 1.</li> </ul> <pre><code>fileformatversion 3\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#author","title":"Author","text":"<pre><code>author &lt;Type&gt; &lt;AuthorID&gt; &lt;AuthorName&gt; &lt;Email&gt;\n</code></pre> <ul> <li> <p>Type = Tells what the author referenced in the next section did. Recommended types to put: chassis, texture, support, etc.</p> </li> <li> <p>AuthorID = ID of the author's RoR Forum account. To get your ID, view your forum profile and check the number shown in the URL. For example: </p> </li> </ul> <p>https://forum.rigsofrods.org/members/curiousmike.5831/ </p> <p><code>5831</code> would be the ID. </p> <ul> <li> <p>AuthorName = The author's username.</p> </li> <li> <p>Email = The author's e-mail. (optional)</p> </li> </ul> <p>Each author requires a separate line.</p> <pre><code>author chassis 4    heinz_peter               heinz@mail.com\nauthor texture 123  forname_surname_othername someuser@mail.com\nauthor support 5487 otheruser                 otheruser@mail.com\n</code></pre> <p>Please note: Do not use spaces in the type, authorname, or email. Instead, use an underscore ( _ ). In the game, the underscore will be replaced with a space.</p>"},{"location":"vehicle-creation/fileformat-truck/#description","title":"Description","text":"<pre><code>description\nLorem ipsum dolor sit amet, consectetur adipisicing\nelit, sed do eiusmod tempor incididunt ut labore et\ndolore magna aliqua.\nend_description\n</code></pre> <p>Pretty self-explanatory. Only the first 3 lines will get displayed in the Truck HUD. Do not put keywords in the description; they will mess up the truck file.</p>"},{"location":"vehicle-creation/fileformat-truck/#fileinfo","title":"Fileinfo","text":"<p>General info about the vehicle.</p> <ul> <li> <p>Unique ID (nullable): String; default = -1; Empty value = -1; This field specifies the unique file ID (you get one by uploading it to the repository).</p> </li> <li> <p>Category ID (optional) (nullable): Decimal number; default = -1; Empty value = -1; This is the category number from the repository. It is recommended that you give your truck a category.</p> </li> <li> <p>File version (optional): Decimal number; default = 0; Version of the vehicle, read by users and the repository. For backwards compatibility, this field also accepts real number (a warning is reported).</p> </li> </ul> <pre><code>; syntax:\n;fileinfo &lt;uniqueid&gt;, &lt;categoryid&gt;, &lt;fileversion&gt;\n; example:\nfileinfo      000UID,          107,             2\n</code></pre> <p>Available category IDs</p> <pre><code>;;; vehicles\n108, Other Land Vehicles\n\n146, Street Cars\n147, Light Racing Cars\n148, Offroad Cars\n149, Fantasy Cars\n150, Bikes\n155, Crawlers\n\n152, Towercranes\n153, Mobile Cranes\n154, Other cranes\n\n107, Buses\n151, Tractors\n156, Forklifts\n159, Fantasy Trucks\n160, Transport Trucks\n161, Racing Trucks\n162, Offroad Trucks\n\n110, Boats\n\n113, Helicopters\n114, Aircraft\n\n117, Trailers\n118, Other Loads\n\n;;; terrains\n129, Addon Terrains\n\n859, Container\n\n875, Submarine\n\n;note: these categories are NOT in the repository:\n5000, Official Terrains\n5001, Night Terrains\n\n;do not use category numbers above 9000!\n9990, Unsorted\n9991, All\n9992, Fresh\n9993, Hidden\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#help","title":"Help","text":"<p>The help section gives the name of the material used for the help image in the commands panel (<code>CTRL+T</code>).  This material must be defined elsewhere in a material file.</p> <pre><code>help\ntracks/semihelp\n</code></pre> <p></p> <p>This is optional. (But it looks cool, so use it!)</p>"},{"location":"vehicle-creation/fileformat-truck/#comments","title":"Comments","text":"<p>Comments are ignored by RoR. They are useful for telling users what things do in the truck file. Comments can be put anywhere by putting a semicolon ( <code>;</code> ) as the first character of the line to be commented.</p> <p>You can also comment out several lines of text using this format:</p> <pre><code>comment\nOne morning, as Gregor Samsa was waking up from anxious dreams,\nhe discovered that in bed he had been changed into a monstrous vermin.\nHe lay on his armour-hard back and saw, as he lifted his head up\na little, his brown, arched abdomen divided up into rigid bow-like\nsections. From this height the blanket, just about ready to slide off\ncompletely, could hardly stay in place. His numerous legs, pitifully\nthin in comparison to the rest of his circumference, flickered helplessly\nbefore his eyes.\nend_comment\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#hideinchooser","title":"hideInChooser","text":"<p>Excludes the vehicle/load from being shown in the vehicle menu on top of the screen. Place the single keyword somewhere in the vehicle/load file.</p> <pre><code>hideInChooser\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#vehicle-specific","title":"Vehicle-specific","text":"<p>The following sections define important vehicle parts, like wheels, shock absorbers, and the like.</p>"},{"location":"vehicle-creation/fileformat-truck/#engine","title":"Engine","text":"<p>The engine section contains the engine parameters. Parameters are:</p> <ul> <li>Shift down RPM: Real number The engine speed at which the automatic transmission will shift down (gear 2 and up) or the clutch engages (driving off).</li> <li>Shift up RPM: Real number The engine speed at which the automatic transmission will shift up. Actual redline is this value x1.25.</li> <li>Torque: Real number Engine torque in newton-meters (N/m). The higher the value, the faster a truck will accelerate. RoR uses a flat torque model, usually correct for large intercooled turbo diesels.</li> <li>Global gear Ratio: Real number A global gear conversion ratio. (Final gear reduction ratio)</li> <li>Rear gear ratio: Real number Gear ratio of reverse. For every turn of the wheel the engine will have to turn this many times (not counting the differential ratio).</li> <li>Neutral gear ratio: Real number Gear ratio of neutral gear. 1.0 is a good one as it helps to distinguish between reverse and forward gears</li> <li>First gear ratio: Real number Gear ratio of 1<sup>st</sup> gear.</li> <li>Second/etc gear ratio: Real number Gear ratio of all further gears. Note there must be between 1 and 21 forward gears. The final gear must be followed by a -1 value (parser will emit a warning if the terminator is missing).</li> </ul> <pre><code>engine\n;min rpm, max rpm, torque, differential, reverse, neutral,   1st,  2nd,  3rd,  4th,  5th,  6th...\n  1000.0,  1500.0, 8000.0,         2.00,   10.85,   10.00, 13.86, 9.52, 6.56, 5.48, 4.58, 3.83, 3.02, 2.53, 2.08, 1.74, 1.43, 1.20, 1.00, -1.0\n</code></pre> <p>One good source of practical gear ratios is Eaton Fuller. To see the ratios, click the name of the transmission and find \"Product Specifications Guide\". It's wise to make sure you can get into final gear. If your vehicle decelerates in a gear you may not have enough power, or the gear ratio may be too high.</p>"},{"location":"vehicle-creation/fileformat-truck/#engoption","title":"Engoption","text":"<p>Engoption sets optional parameters to the engine. It is mainly used for car engines. Parameters are:</p> <ul> <li>Engine inertia: Real number, default = 10.0. The default game value is correct for a large diesel engine. For smaller engines you probably want smaller values. 1.0 or 0.5 would be appropriate for small atmospheric engines, for instance.</li> <li>Engine type: One Character String, default = t. Valid types are t for truck engine and c for car engine. This parameter changes engine sound and other engine characteristics.</li> <li>Clutch Force (optional): [ Version 0.36.2+ ] Real number, default = 10000 for trucks, 5000 for cars.</li> <li>Shift Time: (optional): [ Version 0.36.2+ ] Positive real number, default = 0.2 seconds. Time (in seconds) that it takes to shift. Requires a defined clutch force parameter to work.</li> <li>Clutch Time (optional): [ Version 0.36.2+ ] Positive real number, default = 0.5 seconds. Time (in seconds) the clutch takes to apply. Requires a defined clutch force parameter to work.</li> <li>Post Shift Time (optional): [ Version 0.36.2+ ] Positive real number, default = 0.2 seconds. Time (in seconds) until full torque is transferred. Requires a defined clutch force parameter to work.</li> <li>Stall RPM (optional): [ Version 0.4.0.7+ ] Real number, default = 300. RPM where the engine will stall.</li> <li>Idle RPM (optional): [ Version 0.4.0.7+ ] Real number, default = 800. Idle RPM the engine should attempt to maintain.</li> <li>Max Idle Mixture (optional): [ Version 0.4.0.7+ ] Real number, default = 0.1. Defines the maximum amount of throttle the truck will use to maintain the idle RPM.</li> <li>Min Idle Mixture (optional): [ Version 0.4.0.7+ ] Real number, default = 0.0. Defines the minimum amount of throttle the truck will use to maintain the idle RPM.</li> <li>Braking torque (optional): [ Version 2020.01+ ] Real number, default = engine_torque / 5. Defines the amount of engine braking when you let go of the throttle.</li> </ul> <pre><code>engoption\n;inertia, type, clutchforce, shifttime, clutchtime, postshifttime, stallRPM, idleRPM, maxIdleMixture, minIdleMixture\n     0.5,    c,      5000.0,      0.75,        0.9,          0.75,     500,      700,           0.25,           0.06\n;sample shift timings for a mid size truck\n</code></pre> <p>PROTIP: Use the \"Engine inertia\" value to make the engine start faster. With a value of 0.1, the engine will start instantly. With a value of 10, the engine requires about 30 seconds of cranking before it starts. Values between 1 and 3.5 are great for vehicles that you drive frequently, or race vehicles and the like that you want to start fast. However, using a higher value makes it harder to stall the engine. Making something to tow a lot of weight? Raise it up to 9 or 10 and it won't really stall, ever. (With values over 10, it may not start at all, so be careful.)</p>"},{"location":"vehicle-creation/fileformat-truck/#engturbo","title":"Engturbo","text":"<p>Engine's Turbo settings:</p> <p>When defining this on your truck file, you do not need to put \"t\" type of vehicle in the engoptions.</p> <p>There are 2 version of this section:</p> <p>Using Version 1 you have more control over the power added to the engine, but this can end up in unrealistic simulation if the values aren't correctly chosen. Turbo is always giving 20 PSI at max rpm. (Which isn't realistic.) Using Version 2 you have less control over the power added, but you can end up with a realistic simulation depending on the maxPSI value.</p> <p>Version 1: (Not recommended)</p> <ul> <li>type: Positive real number; Turbo's simulation version, leave it as 1 for this type of simulation.</li> <li>inertiaFactor: Positive real number; Turbo's inertia, how much time it will take for the turbo to spool up. Big turbos tend to have Values between 2 and 6, while small turbos are between 0.1 and 1.</li> <li>numTurbo: Real number &lt;0 - 4&gt;; The number of turbos in the engine. No effects for the moment.</li> <li>additionalTorque Positive real number; Torque in Nm that will be added at max turbo rpm.</li> <li>engine_rpm_op;(optional); Positive real number; default = 0; Engine's RPM at which turbo will start to spool up.</li> </ul> <pre><code>engturbo\n;type, inertiaFactor, numTurbo, additionalTorque, engine_rpm_op\n1, 0.2, 1, 430, 3200\n</code></pre> <p>Version 2:</p> <ul> <li>type: Positive real number; Turbo's simulation version, leave it as 2 for this type of simulation.</li> <li>inertiaFactor: Positive real number; Turbo's inertia, how much time it will take for the turbo to spool up. Big turbos tend to have Values between 2 and 6, while small turbos are between 0.1 and 1.</li> <li>numTurbo: Real number &lt;0 - 4&gt;; The number of turbos in the engine. No effects for the moment.</li> <li>maxPSI; Positive real number; Max PSI the turbo will give. for each 14.7 psi added, the power out is multiplied per 2. (This is not perfect, but it is theoretical)</li> <li>engine_rpm_op;(optional); Positive real number; default = 0; Engine's RPM at which turbo will start to spool up.</li> <li>BOV; (optional); Boolean &lt;0= disabled, 1= enabled&gt;; default = 0; Enable blow off valve.</li> <li>BOV_minPSI; (optional); Positive real number; default = 11; Minimum PSI at which the blow off valve starts to operate.</li> <li>wastegate; (optional); Boolean &lt;0= disabled, 1= enabled&gt;; default = 0; Enables or disable the wastegate.</li> <li>wastegate_maxpsi; (optional); Positive real number; default = 20; maxPSI on which the wastegate will limit the turbo.</li> <li>wastegate_threshold; (optional); Positive real number; default = 0; Wastegate's threshold. (Optimal values between 0.01 and 0.1)</li> <li>antilag; (optional); Boolean &lt;0= disabled, 1= enabled&gt;; default = 0; Enables or disable the anti-lag system.</li> <li>antilag_chance; (optional); Positive real number &lt;min = 0, max = 1&gt;; default = 0.9975; Random number which calculates the chances of the anti lag's combustion. The lower the number, the more the chances. (Optimal values between 0.95 and 0.99)</li> <li>antilag_minRPM; (optional); Positive real number; default = 3000; Minimum engine's RPM on which the anti lag system start to work.</li> <li>antilag_power; (optional); Positive real number; default = 170; Power factor which will be used to sustain the turbo's spinning while anti lag is working.</li> </ul> <pre><code>engturbo\n;type, inertiaFactor, numTurbos, maxPSI, rpm_op, bov, bov_minPSI, wastegate, wastegate_maxpsi, wastegate_threshold, antilag, antilag_chance, antilag_minRPM, antilag_power\n2, 4, 1, 35, 3500, 1, 11, 1, 32, 0.02, 1, 0.9985, 3000, 250\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#brakes","title":"Brakes","text":"<p>Parameters:</p> <ul> <li>Default braking force: Real number; default = 30000; This allows you to change the default braking force value. The default is 30000, which is generally too high a value for smaller cars and trucks.</li> <li>Parking brake force (optional): [ Version 0.36.3+ ] Real number; default = (brake_force * 2);</li> </ul> <pre><code>brakes\n; brake_force, [park_brake_force]\n20000,              15000\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#antilockbrakes","title":"AntiLockBrakes","text":"<p>AntiLockBrakes settings:</p> <ul> <li>regulating_force: Positive real number from range &lt;1 - 20&gt;; Valid range 1 (no regulation) - 20 (max regulation). Any other value is clamped to the &lt;1 - 20&gt; interval.</li> <li>min_speed: Positive real number; The speed-limit where the anti-lock-brakes system gets active</li> <li>pulse/sec (optional): Positive decimal number &lt;1 - 2000&gt;</li> <li>mode (optional): mode: MODES JOINED WITH &amp;<ul> <li>ON: System is active at spawn</li> <li>OFF: System is inactive at spawn</li> <li>NODASH: No dashboard indicator</li> <li>NOTOGGLE: The system cannot be turned on/off and stays ON or OFF</li> </ul> </li> </ul> <pre><code>;AntiLockBrakes regulation-force, minspeed, pulse/sec, mode\nAntiLockBrakes                12,       15,      2000, mode: ON &amp; NODASH\n</code></pre> <p>Examples of MODE settings:</p> <p>System is activated at spawn with no dashboard indicator:</p> <p><code>mode: ON &amp; NODASH</code></p> <p>System is activated at spawn and can NOT be shut off:</p> <p><code>mode: ON &amp; NOTOGGLE</code></p> <p>System is activated at spawn, no dashboard indicator and can NOT be shut off</p> <p><code>mode: ON &amp; NODASH &amp;  NOTOGGLE</code></p> <p>System deactivated at spawn and no dashboard indicator:</p> <p><code>mode: OFF &amp; NODASH</code></p> <p>In game, you can toggle the anti-lock brakes on/off with <code>SHIFT+B</code> Anti-lock Brakes do NOT have any impact on your parking brake behavior.</p>"},{"location":"vehicle-creation/fileformat-truck/#tractioncontrol","title":"TractionControl","text":"<p>NOTE: wheelslip and fade_speed have been made obsolete with version 2020.01 (see: https://github.com/RigsOfRods/rigs-of-rods/commit/57dfbba4f16431e7b6db878223d86a17f97a92ce)</p> <p>In game, you can toggle the traction control on/off with SHIFT+V</p> <p>Parameters:</p> <ul> <li>regulating_force: Positive real number from range &lt;1 - 20&gt;; Valid range 1 (no regulation) - 20 (max regulation). Any other value is clamped to the &lt;1 - 20&gt; interval.</li> <li>wheelslip: Positive real number; Allowed wheel-slip in percentage of the actual speed.</li> <li>fade_speed (optional): Positive real number; The speed where the allowed wheel-slip doubles (use low settings for drifter setups)</li> <li>pulse/sec (optional): Positive real number from range &lt;1 - 2000&gt;; Any other value is clamped to the &lt;1 - 2000&gt; interval.</li> <li>options (optional): String;<ul> <li>ON: System spawns activated</li> <li>OFF: System spawns deactivated</li> <li>NODASH: Hides dashboard indicator</li> <li>NOTOGGLE: System cannot be turned on/off and remains in original state.</li> </ul> </li> </ul> <p>Valid modes:</p> <ul> <li>ON: System is activate at spawn</li> <li>ON &amp; NODASH: System is activate at spawn and no dashboard indicator</li> <li>ON &amp; NOTOGGLE: System is activate at spawn and can NOT be shut off</li> <li>ON &amp; NODASH &amp; NOTOGGLE: System is activate at spawn, no dashboard indicator and can NOT be shut off</li> </ul> <ul> <li>OFF: System deactivated at spawn</li> <li>OFF &amp; NODASH: System deactivated at spawn and no dashboard indicator</li> </ul> <pre><code>;TractionControl regulation-force, wheelslip, fadespeed, pulse/sec, mode\nTractionControl                 6,      0.01,       100,      2000, mode: ON\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#slopebrake","title":"SlopeBrake","text":"<p>NOTE: This section has been made obsolete with 0.4.6.0 (see: https://github.com/RigsOfRods/rigs-of-rods/commit/523c02f854853cc5159d4aacdd41cf1e73dff5dd)</p> <p>This section fixes the bug, where trucks slowly roll down a slope no matter how much brake-force is applied.</p> <p>SlopeBrake settings:</p> <ul> <li>regulating force: Positive real number from range &lt;0 - 20&gt;;  Valid range 0 (no regulation) - 20 (max regulation)</li> <li>attach-angle: Positive real number from range &lt;1 - 45&gt;;  Valid range any positive integer 1 - 45. The angle where the slope brake tries to activate at full force</li> <li>release-angle: Positive real number from range &lt;5 - 45&gt;;  Valid range any positive integer 5 - 45. Adds to attach-angle. The angle where the slope brake will reset and restart when it was not able to keep the wheel from spinning. Use small numbers here.</li> </ul> <pre><code>;SlopeBrake regulating force, attach-angle, release-angle\nSlopeBrake                10,            5,            12\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#wheels","title":"Wheels","text":"<p>This section is important: it defines the wheels! Parameters are:</p> <ul> <li>Radius - Real number; The radius of the wheel, in meters.</li> <li>Width (ignored) - Real number; Use any number (must be present for compatibility), wheel width is auto-calculated from distance between node1 and node2.</li> <li>number of rays - Real number;The number of 'pie pieces' that make up the wheel. For reference, <code>3</code> makes the wheel triangular, and <code>4</code> makes the wheel square. Recommended values are between <code>10</code> and <code>16</code>.</li> <li>Node 1 - Node number or name;The node on the axle where the one side of the wheel starts.</li> <li>Node 2 - Node number or name;The node on the axle where one side of the wheel ends.     To clarify, if you imagine a beam that goes right through the middle of the wheel along the axis of rotation, Node 1 and Node 2 would be at the intersection between one side of the wheel and the beam and the intersection between other side of the wheel and the beam.</li> <li>Rigidity Node - Node number or name; The number of a special rigidity node (see explanation about Axle Rigidity). Use <code>9999</code> if there is no rigidity node.</li> <li>Wheel Braking - Positive real number from range &lt;0 - 4&gt;; <code>0</code> for unbraked wheels, <code>1</code> for braked wheels. For directional braking, as found in airplanes, use <code>2</code> for a left wheel, <code>3</code> for a right wheel. In 0.37+, <code>4</code> is used for a wheel with a footbrake, but no parking brake.</li> <li>Wheel Drive - Positive real number from range &lt;0 - 2&gt;;  <code>0</code> for undriven wheels, <code>1</code> for wheels driven forwards, <code>2</code> for wheels driven backwards</li> <li>Reference arm node - Node number or name; The reference arm node for the wheel. This is where reaction torque is applied to the chassis. Set it to a node in front of the wheel for more traction and behind the wheel for less traction. Setting the reference arm node to the same node as Node 1 or Node 2 gets rid of the effects of the Reference Arm Node.</li> <li>Mass - Real number; Mass of the wheel, in kilograms.</li> <li>Springiness - Real number; The stiffness of the wheel, somewhat equivalent to tire pressure. Having too much spring will make the steering wheels bounce back and forth during understeer, sending vibrations through the entire vehicle.</li> <li>Damping - Real number; The rebound rate of the wheel</li> <li>Materials - String; Face material and band material. (no comma between them) If you don't have a custom material, use <code>tracks/wheelface</code> for the face and <code>tracks/wheelband1</code> for a single wheel or <code>tracks/wheelband2</code> for dual mounted wheels.</li> </ul> <pre><code>wheels\n;radius, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass,   spring, damping,          facemat           bandmat\n0.54,    -1,      12,    35,    36,  9999,      1,         0,   3, 200.0, 800000.0,  4000.0, tracks/wheelface tracks/wheelband1\n0.54,    -1,      12,    37,    38,  9999,      1,         0,   5, 200.0, 800000.0,  4000.0, tracks/wheelface tracks/wheelband1\n0.54,    -1,      12,    39,    40,    41,      1,         1,  25, 400.0, 800000.0,  4000.0, tracks/wheelface tracks/wheelband2\n0.54,    -1,      12,    41,    42,    40,      1,         1,  23, 400.0, 800000.0,  4000.0, tracks/wheelface tracks/wheelband2\n</code></pre> <p>Notes:</p> <ul> <li>Wheel breaking strength is set by the last Beam defaults in the truck file before the wheels section. This can help the wheel to go faster before it breaks.</li> <li>The order in which the wheels are declared is important: each consecutive pair of wheels is grouped into an axle. A truck cannot have an odd number of powered wheels, since one wheel would not be in a pair. If this happens, the odd wheel will not move.</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#wheels2","title":"Wheels2","text":"<p>This section improves wheels by simulating both wheel tires and rims. The player is able to set tire pressure via key input.</p> <ul> <li>Rim radius - Real number The radius of the wheel rim in meters</li> <li>Tyre radius - Real number The radius of the tire in meters, measured from the center of the wheel.</li> <li>Width - Real number Use any number (must be present for compatibility), wheel width is auto-calculated from distance between node1 and node2.</li> <li>Number of rays - Real number The number of 'pie pieces', or corners, that make up the wheel. For reference, <code>3</code> makes the wheel triangular, and <code>4</code> makes the wheel square. Recommended values are between <code>10</code> and <code>16</code>.</li> <li>Node 1 - Node number/name The node where the wheel starts.</li> <li>Node 2 - Node number/name The node where the wheel ends. (See Wheels for an explanation of how this works.)</li> <li>Rigidity Node - Node number/name The number of a special rigidity node (see Axle Rigidity explanation). Use <code>9999</code> if there is no rigidity node.</li> <li>Wheel Braking - Positive real number from range &lt;0 - 4&gt;;  <code>0</code> for unbraked wheels, <code>1</code> for braked wheels. For directional braking, as found in airplanes, use <code>2</code> for a left wheel, <code>3</code> for a right wheel. In 0.37+, <code>4</code> is used for a wheel with a footbrake, but no parking brake.</li> <li>Wheel Drive - Positive real number from range &lt;0 - 2&gt;;  <code>0</code> for an undriven wheel, <code>1</code> for a wheel driven forwards, <code>2</code> for a wheel driven backwards.</li> <li>Reference arm node - Node number/name The reference arm node for the wheel. This is where reaction torque is applied to the chassis. Set it to a node in front of the wheel for more traction and behind the wheel for less traction.</li> <li>Mass - Real number Mass of the wheel in kilograms.</li> <li>Rim springiness - Real number The stiffness of the wheel rim.</li> <li>Rim damping- Real number The rebound rate of the wheel rim.</li> <li>Tyre springiness - Real number The stiffness of the tire.</li> <li>Tyre damping - Real number The rebound rate of the tire.</li> <li>Materials - String Face material and band material. (no comma between them) If you don't have a custom material, use <code>tracks/wheelface</code> for the face and <code>tracks/wheelband1</code> for a single wheel or <code>tracks/wheelband2</code> for dual mounted wheels.</li> </ul> <pre><code>wheels2\n;radius, radius2, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass, rim spring, rim damping, simple spring, simple damping,              facemat             bandmat\n0.335,   0.625,    -1,      12,   44,    45,   9999,      1,         1,   3, 280.0,   900000.0,       200.0,      400000.0,         2000.0, tracks/daffwheelface tracks/dafwheelband\n0.335,   0.625,    -1,      12,   46,    47,   9999,      1,         1,   5, 280.0,   900000.0,       200.0,      400000.0,         2000.0, tracks/daffwheelface tracks/dafwheelband\n0.335,   0.625,    -1,      12,   48,    49,     50,      1,         1,  31, 280.0,   900000.0,       200.0,      200000.0,         2000.0, tracks/dafrwheelface tracks/dafwheelband\n0.335,   0.625,    -1,      12,   50,    51,     49,      1,         1,  33, 280.0,   900000.0,       200.0,      200000.0,         2000.0, tracks/dafrwheelface tracks/dafwheelband\n0.335,   0.625,    -1,      12,   52,    53,     54,      1,         1,  31, 280.0,   900000.0,       200.0,      200000.0,         2000.0, tracks/dafrwheelface tracks/dafwheelband\n0.335,   0.625,    -1,      12,   54,    55,     53,      1,         1,  33, 280.0,   900000.0,       200.0,      200000.0,         2000.0, tracks/dafrwheelface tracks/dafwheelband\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#meshwheels","title":"Meshwheels","text":"<p>Mesh wheels allows you to do very nice wheels. It takes an Ogre3D mesh of a rim (the rim only, without the tire!). The mesh should be centered, and of the right size for the wheel you want to do: its outer diameter should be the same as the \"rim_radius\" parameter, and its width should be the same as the distance between node1 and node2. The other parameters are similar to the wheels section, though there are a few differences.</p> <p>The side value should be <code>l</code> or <code>r</code> depending on the side of the wheel, and the final parameters are the mesh name and the material for the tire. The mapping of the texture should look something like this: </p> <p>Here is an example picture of a rim mesh, as it should be modeled. The tire geometry is added dynamically afterward by the game, and will flex like a real tire.</p> <p></p> <pre><code>meshwheels \n;tire_radius, rim_radius, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass,   spring, damping, side,               meshname         material\n0.35,       0.21,   0.5,      14,    32,    33,    34,      1,         1,  18, 200.0, 300000.0,  2000.0,    l, dodgechargerwheel.mesh dodgechargerband\n0.35,       0.21,   0.5,      14,    34,    35,    33,      1,         1,  26, 200.0, 300000.0,  2000.0,    r, dodgechargerwheel.mesh dodgechargerband\n0.35,       0.21,   0.5,      14,    44,    45,  9999,      1,         0,  53, 200.0, 350000.0,  2000.0,    l, dodgechargerwheel.mesh dodgechargerband\n0.35,       0.21,   0.5,      14,    46,    47,  9999,      1,         0,  50, 200.0, 350000.0,  2000.0,    r, dodgechargerwheel.mesh dodgechargerband\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#meshwheels2","title":"Meshwheels2","text":"<p>This section works exactly the same way as meshwheels, except one difference.</p> <p>The tread of the wheel you generate does use the meshwheels section spring and damping ratios while the rim will use the ones from the set_beam_defaults.</p> <p>It enables you to make quite soft and flexing wheels, which have a lot lateral grip and are very reliable and predictable in comparison to normal meshwheels.</p> <p>Very useful for flex body tires, since the nodeflip-bug is mostly gone with this used the right way.</p> <p>Use set_beam_defaults. that make sense for rims (high spring, low damping) while the tires itself can be soft and have high damping values:</p> <pre><code>set_beam_defaults 700000, 350, 60000000, 80000000\n;set_beam_defaults for the rim\n\nmeshwheels2\n;tire_radius, rim_radius, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass,  tirespring,   tiredamping, side, meshname    material\n0.660,      0.315, 0.375,      12,    27,    26,    38,      4,         1,  22, 100.0,    150000.0,        1500.0,    r, my-rim.mesh my-tire-material\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#flexbodywheels","title":"Flexbodywheels","text":"<p>This section works exactly the same way then meshwheels2, except 2 differences:</p> <p>There is a contactive rim generated and you can place a tire mesh which is converted to a flexbody by RoR.</p> <p>For now, the rim mesh is a prop. Might be upgraded to flexbody later.</p> <p>This one has complete new tire physics, so for now, happy testing, please give feedback.</p> <pre><code>set_beam_defaults 100000, 350, 60000000, 80000000\nflexbodywheels\n;radius, rimradius, width, rays, n1, n2, ref-n, braked, propulsed, force-n, weight, tire-spring, tire-damp, rim-spring, rim-damp, rim-orientation,           rim-mesh            tire-mesh\n0.50,     0.300, 0.300,   16, 13, 11,  9999,      1,         1,      19,   92.5,      4500.0,     300.0,    3000000,      350,               r, testtruck-rim.mesh testtruck-wheel.mesh\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#shocks","title":"Shocks","text":"<p>Shocks can be seen as tunable beams, useful for suspensions.</p> <ul> <li>node_1: Node number/name The node where the shock starts.</li> <li>node_2: Node number/name The node where the shock ends.</li> <li>spring_rate: Real number The 'stiffness' of the shock. The higher the value, the less the shock will move for a given bump.</li> <li>damping: Real number The 'resistance to motion' of the shock. The best value is given by this equation: [ 2 * sqrt(suspended_mass * spring_rate) ]</li> <li>max_contraction: Real number The shortest length the shock can be, as a proportion of its original length. <code>0</code> means the shock will not be able to contract at all, <code>1</code> will let it contract all the way to zero length. If the shock tries to shorten more than this value allows, it will become as rigid as a normal beam.</li> <li>max_extension: Real number The longest length a shock can be, as a proportion of its original length. <code>0</code> means the shock will not be able to extend at all. <code>1</code> means the shock will be able to double its length. Higher values allow for longer extension.</li> <li>precompression: Real number Changes compression or extension of the suspension when the truck spawns. This can be used to \"level\" the suspension of a truck if it sags in game. The default value is <code>1.0</code>.</li> <li>options (optional): String, default = no options (shock is visible)<ul> <li><code>i</code>: This shock is invisible (default is visible).</li> <li><code>l</code> OR L: Stability active suspension for left side.</li> <li><code>r</code> OR R: Stability active suspension for right side.</li> <li><code>n</code>: Placeholder. Does nothing, parser ignores it silently.</li> </ul> </li> </ul> <pre><code>shocks\n;critical damping=2*sqrt(mass*spring)\n;id1, id2, spring, damping, shortbound, longbound, precomp, options\n36,   6, 200000,   10000,        0.3,       0.3,     1.0\n37,   8, 200000,   10000,        0.3,       0.3,     1.0,       l\n38,   2, 200000,   10000,        0.3,       0.3,     1.0,       r\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#shocks2","title":"Shocks2","text":"<p>Shocks can be seen as tunable beams, useful for suspensions.</p> <p>Parameters:</p> <ul> <li>node_1: Node number/name The node where the shock starts.</li> <li>node_2: Node number/name The node where the shock ends.</li> <li>spring_in_rate: Real number The 'stiffness' of the shock, applied when the shock is compressing. The higher the value, the less the shock will move for a given bump.</li> <li>damping_in_rate: Real number The 'resistance to motion' of the shock, applied when the shock is compressing. The best value is given by this equation: [ 2 * sqrt(suspended_mass * spring_rate) ]</li> <li>spring_in_progression_factor: Real number Progression factor for spring_in_rate. A value of <code>0</code> disables this option. 1...x as multipliers, example: [ maximum springrate == springrate + (factor*springrate) ]</li> <li>damping_in_progression_factor: Real number Progression factor for damp_in_rate. <code>0</code> = disabled, 1...x as multipliers, example:[ maximum dampingrate == springrate + (factor*dampingrate) ]</li> <li>spring_out_rate: Real number The 'stiffness' of the shock, applied when the shock is extending. The higher the value, the less the shock will move for a given bump.</li> <li>damping_out_rate: Real number The 'resistance to motion' of the shock, applied when the shock is extending. The best value is given by this equation: [ 2 * sqrt(suspended_mass * spring_rate) ]</li> <li>spring_out_progression_factor: Real number Progression factor for spring_out_rate. A value of <code>0</code> disables this option. 1...x as multipliers, example: [ maximum springrate == springrate + (factor*springrate) ]</li> <li>damping_out_progression_factor: Real number Progression factor for damp_out_rate. <code>0</code> = disabled, 1...x as multipliers, example:[ maximum dampingrate == springrate + (factor*dampingrate) ]</li> <li>max_contraction: Real number The shortest length the shock can be, as a proportion of its original length. <code>0</code> means the shock will not be able to contract at all, <code>1</code> will let it contract all the way to zero length. If the shock tries to shorten more than this value allows, it will become as rigid as a normal beam.</li> <li>max_extension: Real number The longest length a shock can be, as a proportion of its original length. <code>0</code> means the shock will not be able to extend at all. <code>1</code> means the shock will be able to double its length. Higher values allow for longer extension.</li> <li>precompression: Real number Changes compression or extension of the suspension when the truck spawns. This can be used to \"level\" the suspension of a truck if it sags in game. The default value is <code>1.0</code>.</li> <li>options (optional): String, default = no options (shock is visible)<ul> <li><code>i</code>: This shock is invisible (default is visible).</li> <li><code>s</code>: soft bump boundaries, use when shocks reach limiters too often and \"jumprebound\" (default is hard bump boundaries)</li> <li><code>m</code>: metric values for shortbound/longbound applying to the length of the beam</li> <li><code>M</code>: Absolute metric values for shortbound/longbound, settings apply without regarding to the original length of the beam. Use with caution, check <code>RoR.log</code> for errors.</li> </ul> </li> </ul> <p>IMPORTANT:</p> <ul> <li>shocks2 needs at least 1500+ as a minimum damping value when using them as inbound/outbound only. (When your shocks2 truck bottoms out at spawn, damping is too low (or the springs don't support the weight of the truck)</li> <li>soft bump shocks need some boundary limit ( 5%+ ) to work proper as soft bump boundaries.</li> <li>You will find any errors in the <code>RoR.log</code> regarding to wrong values in 'M' setting or any other shock values.</li> </ul> <pre><code>shocks2\n;invisible softbump shock, high value progressive for inbound, linear low values for outbound\n;node1, node2, springin, dampin, progspringin, progdampin, springout, dampout, progspringout, progdampout, shortbound, longbound, precomp, options\n45,    80,    22000,   2000,            5,          5,      2000,    1500,             0,           0,        0.8,       0.1,       1,      is\n\n;visible hardbump shock, high value progressive for inbound and outbound, boundaries apply metric in meters\n;node1, node2, springin, dampin, progspringin, progdampin, springout, dampout, progspringout, progdampout, shortbound, longbound, precomp, options\n45,    80,    22000,   2000,           15,         10,      22000,    2000,           15,          10,        0.5,       0.5,       1,       m\n\n;visible hardbump shock, high value progressive inbound only shock, boundaries apply metric as absolute values in meters\n;node1, node2, springin, dampin, progspringin, progdampin, springout, dampout, progspringout, progdampout, shortbound, longbound, precomp, options\n45,    80,    22000,   2000,            5,          5,          0,       0,            0,           0,        0.2,       2.5,       1,       M\n</code></pre> <p>Shockswapping help:</p> <p>This is an example how to get started with replacing shocks with shocks2. In this example, the shocks2 have exactly the same functionality then the original shocks. After adding the shocks2 delete the old shock and you are fine to tune/tweak your truck.</p> <pre><code>shocks\n;id1, id2, spring, damping, shortbound, longbound, precomp, options\n36,   6, 200000,   10000,        0.3,       0.3,     1.0\n\nshocks2\n;node1, node2, springin, dampin, progspringin, progdampin, springout, dampout, progspringout, progdampout, shortbound, longbound, precomp, options\n36,     6,   200000,  10000,            0,          0,    200000,   10000,             0,           0,        0.3,       0.3,     1.0\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#shocks3","title":"Shocks3","text":"<p>[ Version 2020.01+ ] Shocks can be seen as tunable beams, useful for suspensions.</p> <p>Parameters:</p> <ul> <li>node_1: Node number/name The node where the shock starts.</li> <li>node_2: Node number/name The node where the shock ends.</li> <li>spring_in_rate: Real number The 'stiffness' of the shock, applied when the shock is compressing. The higher the value, the less the shock will move for a given bump.</li> <li>damping_in_rate: Real number The 'resistance to motion' of the shock, applied when the shock is compressing. The best value is given by this equation: [ 2 * sqrt(suspended_mass * spring_rate) ]</li> <li>damp_in_slow: Real number Damping factor for compression speeds below split_vel_in, example: [ damping == damp_in * damp_in_slow * vel ]</li> <li>split_vel_in: Real number Velocity threshold for the slow / fast compression speed</li> <li>damp_in_fast: Real number Damping factor for compression speeds above split_vel_in, example:[ damping == damp_ing * damp_in_slow * split_vel_ing + damp_in * damp_in_fast * (vel - split_vel_in) ]</li> <li>spring_out_rate: Real number The 'stiffness' of the shock, applied when the shock is extending. The higher the value, the less the shock will move for a given bump.</li> <li>damping_out_rate: Real number The 'resistance to motion' of the shock, applied when the shock is extending. The best value is given by this equation: [ 2 * sqrt(suspended_mass * spring_rate) ]</li> <li>damp_out_slow: Real number Damping factor for extension speeds below split_vel_out, example: [ damping == damp_out * damp_out_slow * vel ]</li> <li>split_vel_out: Real number Velocity threshold for the slow / fast extension speed</li> <li>damp_out_fast: Real number Damping factor for extension speeds above split_vel_out, example:[ damping == damp_out * damp_out_slow * split_vel_out + damp_out * damp_out_fast * (vel - split_vel_out) ]</li> <li>max_contraction: Real number The shortest length the shock can be, as a proportion of its original length. <code>0</code> means the shock will not be able to contract at all, <code>1</code> will let it contract all the way to zero length. If the shock tries to shorten more than this value allows, it will become as rigid as a normal beam.</li> <li>max_extension: Real number The longest length a shock can be, as a proportion of its original length. <code>0</code> means the shock will not be able to extend at all. <code>1</code> means the shock will be able to double its length. Higher values allow for longer extension.</li> <li>precompression: Real number Changes compression or extension of the suspension when the truck spawns. This can be used to \"level\" the suspension of a truck if it sags in game. The default value is <code>1.0</code>.</li> <li>options (optional): String, default = no options (shock is visible)<ul> <li><code>i</code>: This shock is invisible (default is visible).</li> <li><code>m</code>: metric values for shortbound/longbound applying to the length of the beam</li> <li><code>M</code>: Absolute metric values for shortbound/longbound, settings apply without regarding to the original length of the beam. Use with caution, check <code>RoR.log</code> for errors.</li> </ul> </li> </ul> <pre><code>shocks3\n;node1, node2, springin(N/m), dampin(N/m/s), slowdampin, splitin(m/s), fastdampin, springout(N/m), dampout(N/m/s), slowdampout, splitout(m/s), fastdampout, shortbound, longbound, precomp, options \n46, 55, 65000, 5800, 0.5, 1.2, 0.2, 65000, 1080, 0.5, 1.2, 0.2, 0.62, 0.00, 1.2, n\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#hydros","title":"Hydros","text":"<p>The hydros section is concerned only with the steering actuators! They are beams which change their length depending on the steering of the truck. Hydros can use inertia.</p> <p>Parameters:</p> <ul> <li>node_1: Node name or number The node where the hydro starts.</li> <li>node_2: Node name or number The node where the hydro ends.</li> <li>lengthening_factor: Real number How much the hydro extends or contracts when a steering key is pressed (expressed as a proportion of the original length). Positive values extend when steering left and contract when steering right. Negative values do the reverse.</li> <li>options (optional) String, default = no options (hydro is visible)<ul> <li><code>i</code>: Makes the hydro invisible</li> <li><code>s</code>: (Land vehicles) Disables the hydro at high speed (as seen sometimes with rear steering axles on large trucks)</li> <li><code>a</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by aileron input.</li> <li><code>r</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by rudder input.</li> <li><code>e</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by elevator input.</li> <li><code>u</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by the combination of aileron input and elevator input.</li> <li><code>v</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by the combination of inverse aileron input and elevator input.</li> <li><code>x</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by the combination of aileron input and rudder input.</li> <li><code>y</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by the combination of inverse aileron input and rudder input.</li> <li><code>g</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by the combination of elevator input and rudder input.</li> <li><code>h</code>: [ Version 0.36+ ] (Airplanes) This hydro is commanded by the combination of inverse elevator input and rudder input.</li> </ul> </li> <li>start_delay (optional): Real number Inertia.</li> <li>stop_delay (optional): Real number Inertia.</li> <li>start_function (optional): String Inertia.</li> <li>stop_function (optional): String Inertia.</li> </ul> <pre><code>hydros\n;node1, node2, factor, options\n43,   37,    -0.2\n45,   37,     0.2\n46,   36,     0.2,       s\n48,   36,    -0.2,       s\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#animators","title":"Animators","text":"<p>The animator section concerns only Animators referring to game data! They are beams which change their length depending on the variables of the simulation.</p> <p>The parameters are:</p> <ul> <li>Node 1 - Node name or number The node where the animator starts. Required</li> <li>Node 2 - Node name or number The node where the animator ends. Required.</li> <li>lengthening factor - Real number A coefficient which specifies how much the animator moves. Required.</li> <li>Option string - String Required</li> </ul> <p>Options:</p> <ul> <li><code>vis</code> - This creates a visible animator. ( It's not necessarily needed, but can help users read the truck file.)</li> <li><code>inv</code> - This creates an invisible animator.</li> <li><code>airspeed</code> - This animator extends or contracts with the actual speed (not speedometer indicated speed) for any vehicle.</li> <li><code>vvi</code> - This animator extends or contracts with the vehicle's vertical velocity.</li> <li><code>altimeter100k</code> - This animator extends or contracts with the vehicle's altitude up to 100,000 feet.</li> <li><code>altimeter10k</code> - This animator extends or contracts with the vehicle's altitude up to 10,000 feet, at which point it will revert back to its original length.</li> <li><code>altimeter1k</code> - This animator extends or contracts with the vehicle's altitude up to 1,000 feet, at which point it will revert back to its original length. These three animators can be used to create altimeters with three needles or similar objects, though for those small applications it is usually recommended that Add_animation be used.</li> <li><code>aoa</code> - This animator extends or contracts with the dashboard's angle of attack.</li> <li><code>flap</code> - This animator extends or contracts with the flap setting on the vehicle.</li> <li><code>airbrake</code> - This animator extends or contracts with the airbrake setting on the vehicle.</li> <li><code>roll</code> - This animator extends or contracts with the vehicle's roll. It will flip at 180 degrees roll to -180 degrees roll. This option can be used for an automatic trim feature.</li> <li><code>pitch</code> - This animator extends or contracts with the vehicle's pitch. It will flip back at 180 degrees pitch to -180 degrees pitch. This option can be used for an automatic trim feature.</li> <li><code>throttle1</code> - This animator extends or contracts with the throttle setting of an aircraft's first engine. This option can be used for thruster mechanics. Valid sources include throttle1, throttle2, etc. etc. up to throttle8.</li> <li><code>rpm1</code> - This animator extends or contracts with the RPM of an aircraft's first engine. This option can be used for thruster mechanics. Valid sources include rpm1, rpm2, etc. etc. up to rpm8.</li> <li><code>aerotorq1</code> - This animator extends or contracts with the torque of an aircraft's first engine. Note that this only works for propeller engines, because torque is not applicable to jets. Valid sources include aerotorq1, aerotorq2, etc. etc. up to aerotorq8.</li> <li><code>aeropit1</code> - This animator extends or contracts with the pitch of an aircraft's first engine. Note that this only makes sense with propeller engines, pitch is not applicable to jets. Valid sources include aeropit1, aeropit2, etc. etc. up to aerotorq8.</li> <li><code>aerostatus1</code> - This animator extends with the On/Off/Fire status of an aircraft's first engine. Valid sources include aerostatus1, aerostatus2, etc. etc. up to aerostatus8.</li> <li><code>brakes</code> - This animator extends or contracts with the vehicle's brake status.</li> <li><code>accel</code> - This animator extends or contracts with the vehicle's accelerator status.</li> <li><code>clutch</code> - This animator extends or contracts with the vehicle's clutch status.</li> <li><code>speedo</code> - This animator extends or contracts with the speedometer indication. It scales with the guisetting speedometer. (It is best to use it even if there is no custom overlay dashboard; it simplifies the adjustment a lot.)</li> <li><code>tacho</code> - This animator extends or contracts with the vehicle's RPM. It scales with guisetting tachometer. (It is best use it even if there is no custom overlay dashboard; simplifies the adjustment a lot.)</li> <li><code>turbo</code> - This animator extends or contracts with the vehicle's turbocharger PSI.</li> <li><code>parking</code> - This animator extends or contracts with the vehicle's parking brake status.</li> <li><code>shifterman1</code> - H-shift left right animator ( <code>Reverse | 1-2 | 3-4 | 5-6...11-12</code> as positions, scales with engine settings (maxGear)</li> <li><code>shifterman2</code> - H-shift forth/back animator <code>Reverse-2-6-8-10-12 | 1-3-5-7-9-11</code> as positions</li> <li><code>sequential</code> - sequential shift animator ( i.e for tiptronic or wheel shift pedals), can be used for commands too ( no settable limits then )</li> <li><code>shifterlin</code> - for auto transmission animations or gearselect indicators</li> <li><code>torque</code> - animator to simulate engine torque, useful in addition to wheel nodearms</li> <li><code>difflock</code> - This animator extends or contracts with the difflock status of the truck (It only works when differentials are present in the truck.)</li> <li><code>rudderboat</code> - This animator extends or contracts with the steering hydro on boats.</li> <li><code>throttleboat</code> - This animator extends or contracts with the throttle status on boats.</li> <li><code>shortlimit</code> - Adds shortbound movement limit to the animator, needs to be followed by a valid number. Limits are calculated in percentage like shocks. [ Version 0.38.24+ ]</li> <li><code>longlimit</code> - Adds longbound movement limit to the animator, needs to be followed by a valid number. Limits are calculated in percentage like shocks. [ Version 0.38.24+ ]</li> </ul> <p>All options need to be connected by an vertical bar <code>|</code>, please refer to the example below. </p> <p>You can stack multiple options (like: <code>airpseed | vvi | inv</code>), but it is not recommended and may result in weird behaviors. </p> <p>All animators are scaled to a maximum of -1/+1 as default coefficient, use the ratio setting to get the movement you want. </p> <p>Speed or force of the animators is NOT settable, though you can alter movement speed just with simple lever mechanics. </p> <p>The longer the lever arm, the slower the node will move. To tune your torque-animator to the needs of the truck, let it just work against a stiff shocks2. The harder you make the shock, the more engine-rpm torque effect you get. </p> <p>Animators can use set_inertia_defaults. Inertia helps a lot to smooth instant movement like with shifters or airbrakes.</p> <pre><code>animators\n;node1, node2, factor, options\n32,    26,   0.09, shifterlin | inv\n 5,    27,   0.10, accel | inv\n 5,    28,   0.10, brake | inv\n 5,    29,   0.10, clutch | inv\n36,    41,  -0.40, speedo | inv\n;this one is visible\n49,     3,  -0.90, torque | vis\n;this one is visible and has a short and a longbound limit\n49,     3,  -0.25, roll | vis | shortlimit: 0.02 | longlimit: 0.05\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#behavior","title":"Behavior","text":"<p>These sections define behaviors for the vehicle, like command-operated hydraulics and modifications to how beams behave.</p>"},{"location":"vehicle-creation/fileformat-truck/#commands","title":"Commands","text":"<p>The commands section describes the \"real\" hydros, that is, those you command with the function keys. They are like beams, but their length varies depending with the function keys you press. The parameters are:</p> <ul> <li>Node 1: Node number/name; The node where the command beam starts.</li> <li>Node 2: Node number/name; The node where the command beam ends.</li> <li>Rate of extension/contraction: Real number How fast the command beam moves.</li> <li>Maximum contraction: Real number The shortest length that the command beam will try to be, as a proportion of its initial length.</li> <li>Maximum extension: Real number The longest length the command beam will try to be, as a proportion of its initial length.</li> <li>Contraction key: Function key code (decimal number) A number representing the function key used to control the command beam. More than one can be controlled with the same key. (See below for the keymap.)</li> <li>Extension key: Function key code (decimal number) The key used to extend the command beam.</li> <li>Option flag (optional): Single character<ul> <li><code>i</code>: Makes the command beam invisible.</li> <li><code>r</code>: Makes the command behave like a rope or a winch (no compression strength).</li> <li><code>c</code>: Makes the command beam auto-center: It will automatically return it to its starting position when a lengthening/shortening key is released.</li> <li><code>n</code>: Placeholder, does nothing (useful as filler when you need to specify description)</li> </ul> </li> <li>Description (optional): String A text description that tells the user what the command beam does when the it is activated. This is shown by pressing <code>CTRL+T</code> ingame. There is no need to put a key in front of the text (like F1:_do_something) this will be done automatically! Writing \"hide\" will hide the command from the \"t-screen\".</li> </ul> <pre><code>commands\n;id1, id2, rate, short, long, keys, keyl, options description\n10,  91,  0.1,   1.0,    7,    1,    2,       i Death_machine\n12,  93,  0.1,   1.0,    7,    1,    2,       i\n14,  90,  0.1,   1.0,    7,    1,    2\n16,  92,  0.1,   1.0,    7,    1,    2\n114, 122,  0.2,   1.0,   19,    3,    4\n115, 123,  0.2,   1.0,   19,    3,    4,       n Happy_butterfly_wings\n126, 132,  0.1,   0.1,  1.0,    5,    6,       r\n</code></pre> <p>This is the default keymap:</p> <ul> <li>1 = <code>F1</code></li> <li>2 = <code>F2</code></li> <li>3 = <code>F3</code></li> </ul> <p>etc. etc.</p> <ul> <li>12 = <code>F12</code></li> <li>13 = <code>CTRL+F1</code></li> <li>14 = <code>CTRL+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>24 = <code>CTRL+F12</code></li> <li>25 = <code>ALT+F1</code></li> <li>26 = <code>ALT+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>36 = <code>ALT+F12</code></li> <li>37 = <code>CTRL+ALT+F1</code></li> <li>38 = <code>CTRL+ALT+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>46 = <code>CTRL+ALT+F10</code></li> </ul> <p>Since RoR 0.4.0.5 it is possible to use up to 84 commands. The keymap changed because of that:</p> <ul> <li>1 = <code>F1</code></li> <li>2 = <code>F2</code></li> <li>3 = <code>F3</code></li> </ul> <p>etc. etc.</p> <ul> <li>12 = <code>F12</code></li> <li>13 = <code>CTRL+F1</code></li> <li>14 = <code>CTRL+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>24 = <code>CTRL+F12</code></li> <li>25 = <code>SHIFT+F1</code></li> <li>26 = <code>SHIFT+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>36 = <code>SHIFT+F12</code></li> <li>37 = <code>ALT+F1</code></li> <li>38 = <code>ALT+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>46 = <code>ALT+F10</code></li> <li>49 = <code>CTRL+SHIFT+F1</code></li> <li>50 = <code>CTRL+SHIFT+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>59 = <code>CTRL+SHIFT+F11</code></li> <li>61 = <code>CTRL+ALT+F1</code></li> <li>62 = <code>CTRL+ALT+F2</code></li> </ul> <p>etc. etc.</p> <ul> <li>72 = <code>CTRL+ALT+F12</code></li> <li>73 = <code>CTRL+SHIFT+ALT+F1</code></li> <li>74 = <code>CTRL+SHIFT+ALT+F2</code></li> </ul> <p>etc. etc</p> <ul> <li>84 = <code>CTRL+SHIFT+ALT+F12</code></li> </ul> <p>Note that some keymapped commands are by default assigned to Windows commands.. i.e. <code>ALT+F4</code> closes the active window (in this case the RoR render window). It is best to avoid using those buttons if at all possible.</p> <p>If you hold <code>F4</code> then hold/press <code>ALT</code>, the window should stay open and the command will work.</p>"},{"location":"vehicle-creation/fileformat-truck/#commands2","title":"Commands2","text":"<p>Improved commands.</p> <p>Commands are beams which contract and extend when player presses the corresponding key combination.</p> <p>Since [ Version 0.36.2 ] you can specify an inertia function for your command. This reduces the swing of commands since they will operate smoothly with inertia.</p> <p>The parameters are:</p> <ul> <li>Node 1: Node number/name; The node where the command beam starts.</li> <li>Node 2: Node number/name; The node where the command beam ends.</li> <li>Shortening rate: Positive real number; How fast the command beam shortens.</li> <li>Lengthening rate: Positive real number; How fast the command beam lengthens.</li> <li>Maximum contraction: Positive real number; The shortest length that the command beam will try to be, as a proportion of its initial length.</li> <li>Maximum extension: Positive real number; The longest length the command beam will try to be, as a proportion of its initial length.</li> <li>Shortening key: Key code (decimal number); A number representing the function key needed to compress the command beam. More than one can be controlled with the same key. (see above for keymap)</li> <li>Lengthening key: Key code (decimal number); The key used to extend the command beam.</li> <li>Option flag(s) (optional):<ul> <li><code>n</code>: Filler option, does nothing.</li> <li><code>i</code>: Makes the command beam invisible.</li> <li><code>r</code>: Makes the command beam behave like a rope or a winch.</li> <li><code>c</code>: Makes the command beam auto-center: It will automatically return it to its starting position when a lengthening/shortening key is released.</li> <li><code>f</code>: Stops the command moving faster when engine revs increase.</li> <li><code>p</code>: Activates press-once functionality: A single press of a shortening/lengthening key will lengthen/shorten the command beam as much as possible. A second keypress of the key which started the command moving stops the automatic movement.</li> <li><code>o</code>: is like <code>p</code>, but it will stop in the center position.</li> </ul> </li> <li>Description (optional): Placeholder = underscore '_' A text description that tells the user what the command beam does when it is activated. This is shown by pressing <code>CTRL+T</code> ingame. There is no need to put a key in front of the text (like F1:_do_something) this will be done automatically! Writing \"hide\" will hide the command from the \"t-screen\".</li> <li>Inertia: Start delay factor (optional): [ Version 0.36.2+ ]; Positive real number; The delay upon command start. Note this isn't time in seconds, but are a factor (the lower the value, the more inertia there is)</li> <li>Inertia: Stop delay factor (optional): [ Version 0.36.2+ ]; Positive real number; The delay upon command stop. Note this isn't time in seconds, but are a factor (the lower the value, the more inertia there is)</li> <li>Inertia: Start function (optional): [ Version 0.36.2+ ]; String; Specifies what spline should be used for start. See diagram below.</li> <li>Inertia: Stop function (optional): [ Version 0.36.2+ ]; String; Specifies what spline should be used for stop. See diagram below.</li> <li>Affects engine? (optional): [ Version 0.4.0.5+ ]; Positive real number; default = 1.0; 0 means that moving this command won't affect engine RPM, so it is independent. Value larger than 0 specifies how much engine power will be needed for this command to move.</li> <li>Needs engine? (optional): [ Version 0.4.0.5+ ]; Boolean; default = true; value of \"true\" means that the command only works with a running engine. \"False\" means engine is not needed.</li> </ul> <p></p> <pre><code>commands2\n;id1, id2, rateShort, rateLong, short, long, keys, keyl, options Description\n61, 113,       0.1,      0.5,   1.0,    4,    1,    2,      of\n62, 112,       0.1,      0.5,   1.0,    4,    1,    2,     onf desc\n\ncommands2\n;id1, id2, rateShort, rateLong, short, long, keyS, keyL, options      description startDelay, stopDelay, startFunction  stopFunction\n115, 123,      0.10,     0.10,  1.00, 19.0,    3,    4,       n      First_Joint        0.5,       0.5,   smoothcrane revprogressiv\n127, 133,      0.10,     0.10,  1.00, 10.5,    5,    6,       n     Second_Joint        0.7,       0.5,   smoothcrane revprogressiv\n137, 147,      0.10,     0.10,  1.00, 10.5,    7,    8,       n      Third_Joint        0.7,       0.5,   smoothcrane revprogressiv\n143, 148,      0.05,     0.05,  0.50,  2.0,    9,   10,       n  Extremity_Joint        0.7,       0.5,   smoothcrane revprogressiv\n\ncommands2\n;id1, id2, rateShort, rateLong, short, long, keyS, keyL, options      description startDelay, stopDelay, startFunction  stopFunction affectEngine needsEngine\n115, 123,      0.10,     0.10,  1.00, 19.0,    3,    4,       n      First_Joint        0.5,       0.5,   smoothcrane revprogressiv            0           1\n127, 133,      0.10,     0.10,  1.00, 10.5,    5,    6,       n     Second_Joint        0.7,       0.5,   smoothcrane revprogressiv            0           0\n137, 147,      0.10,     0.10,  1.00, 10.5,    7,    8,       n      Third_Joint        0.7,       0.5,   smoothcrane revprogressiv            1           1\n143, 148,      0.05,     0.05,  0.50,  2.0,    9,   10,       n  Extremity_Joint        0.7,       0.5,   smoothcrane revprogressiv            1           0\n</code></pre> <p>Note: You may mix <code>commands</code>/<code>commands2</code> sections, depending on what you want to use. Example:</p> <pre><code>commands2\n;id1, id2, rateShort, rateLong, short, long, keyS, keyL, options description\n61, 113,       0.1,      0.5,   1.0,    4,    1,    2,      of\n62, 112,       0.1,      0.5,   1.0,    4,    1,    2,     onf Boom\n\ncommands\n;id1, id2,      rate,           short, long, keyS, keyL, options description\n116, 124,       0.1,             1.0,  2.6,    3,    4\n117, 125,       0.1,             1.0,  2.6,    3,    4,       n Underlift\n\ncommands2\n;id1, id2, rateShort, rateLong, short, long, keys, keyl, options Description\n136, 116,       0.4,      4.4,   1.0,   10,    5,    6\n136, 117,       0.4,      4.4,   1.0,   10,    5,    6\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#set_inertia_defaults","title":"Set_inertia_defaults","text":"<p>This command will set the defaults for all following commands, hydros, animators and rotators.</p> <ul> <li>start_delay: Real number, default = -1.0. Entering value &lt; 0 will reset all 4 values of this directive to defaults.</li> <li>stop_delay (optional): Real number, default = -1.0. Entering value &lt; 0 will reset all 4 values of this directive to defaults.</li> <li>start_function (optional): Inertia function name, default = none.</li> <li>stop_function (optional): Inertia function name, default = none.</li> </ul> <pre><code>;set_inertia_defaults startDelay, stopDelay, startFunction  stopFunction\nset_inertia_defaults         0.5,       0.5,   smoothcrane revprogressiv\n...\nset_inertia_defaults         0.7,       0.5,   smoothcrane revprogressiv\n...\n; reset:\nset_inertia_defaults -1\n</code></pre> <p>NOTE: Both commas and spaces are accepted as delimiters between parameters.</p>"},{"location":"vehicle-creation/fileformat-truck/#rotators","title":"Rotators","text":"<p>Rotators are alternate commands(hydros) that allows you to do turntables, like in the base of a rotating crane. They use 10 reference nodes:</p> <ul> <li>2 nodes to define the axis of rotation</li> <li>4 nodes (must be a square, centered with the axis) to define the baseplate</li> <li>4 nodes (again, a square, centered with the axis) to define the rotating plate.</li> </ul> <p>Then, in a similar way to commands, comes the rate of rotation, and the numbers of the left and right function keys.</p> <p>New in [ Version 0.4+ ]</p> <ul> <li>start_delay. Real, default <code>0.0</code></li> <li>stop_delay. Real, default <code>0.0</code></li> <li>start_function.</li> <li>stop_function.</li> <li>engine_coupling. Real, default <code>1.0</code></li> <li>needs_engine. Boolean, default false</li> </ul> <p>Rotators can use inertia.</p> <p>The reference nodes for the baseplate and rotator plate must also match each other in order. (i.e. if you start at the front left for the base plate and work clockwise, do the same for the rotator plate!) See the example rotators code and attached picture. Both plates must be identical!</p> <pre><code>rotators\n;axis1, axis2,   a1, a2, a3, a4,   b1, b2  b3, b4,   rate, keyleft, keyright, (Ver. 0.4+) start_delay, stop_delay, start_function, stop_function, engine_coupling, needs_engine \n29,    30,   31, 32, 34, 33,   37, 38, 36, 35,    0.1,       1,        2,                       1,          1,         smooth,        smooth,             0.5,         true\n</code></pre> <p></p>"},{"location":"vehicle-creation/fileformat-truck/#rotators2","title":"Rotators2","text":"<p>Same as rotators section, but more options that allow lightweight rotators, rotator force setting and tolerance (anti jitter) setting and correct description parsing. Additional options:</p> <ul> <li>Force: the rotating power of the rotator, default is <code>10000000</code></li> <li>Tolerance: anti jitter setting for lightweight rotators, default is <code>0.0</code>. Rise gently to make your rotator spawn and rotate stable if needed</li> <li>Description: descriptive text visible in the t-screen</li> </ul> <pre><code>rotators2\n;axis1, axis2,   a1, a2, a3, a4,   b1, b2  b3, b4,   rate, keyleft, keyright,   force, tolerance,               description, (Ver. 0.4+) start_delay, stop_delay, start_function, stop_function, engine_coupling, needs_engine \n29,    30,   31, 32, 34, 33,   37, 38, 36, 35,    0.1,       1,        2, 1000000,     0.025, Superstructure_left/right,                       1,          1,         smooth,        smooth,             0.5,         true\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#forwardcommands","title":"Forwardcommands","text":"<p>Forwards the command keys pressed while riding a truck to loads in close proximity. It is used to remote control the commands of a load. The load must have the \"importcommands\" tag.</p> <pre><code>forwardcommands\n</code></pre> <p>In 0.4.0.5 and above it is possible to toggle forwardcommands on/off for the current beam object. The standard button assignment for this is <code>CTRL+SHIFT+F</code>.</p>"},{"location":"vehicle-creation/fileformat-truck/#importcommands","title":"Importcommands","text":"<p>Enables a load to receive command keys from a manned vehicle in close proximity. The controlling vehicle must have the \"forwardcommands\" tag. The load only receives the keys that are pressed by the player, it must contain a commands section. Commands section for loads is defined in the same manner as in manned trucks.</p> <pre><code>importcommands\n</code></pre> <p>In 0.4.0.5 and above it is possible to toggle importcommands on/off for the current beam object. The standard button assignment for this is <code>CTRL+SHIFT+I</code>.</p>"},{"location":"vehicle-creation/fileformat-truck/#set_beam_defaults","title":"Set_beam_defaults","text":"<p>This is not a section, but a self-contained line that can be inserted anywhere in the truck file. It changes all the beams (and the hydros and ropes) declared after this line. You can use this line many times to make different groups of beams that have different characteristics (e.g. stronger chassis, softer cab, etc.).</p> <p>Parameters:</p> <ul> <li>Springiness:         Real number;         Default: <code>9000000</code>;         The overall stiffness of a beam. The higher the value the stiffer the beam.</li> <li>Damping constant:         Real number;         Default: <code>12000</code>;         The resistance to motion of a beam. Higher values make the beam less likely to deform.</li> <li>Deformation threshold constant:         Real number;         Default: <code>400000</code>;         The amount of force that must be applied to a beam before it will not return to its original length. The lower the value, the easier it is to deform.</li> <li>Breaking threshold constant:         Real number;         Default: <code>1000000</code>;         The amount of force that must be applied to a beam before it will break.</li> <li>Beam diameter:         (optional);         Real number;         Default: <code>0.05</code> (= 5cm)         The visual size of a beam in meters. This setting only has a visual effect. Changing it does not modify how a truck will drive.</li> <li>Beam material (optional);         String;         Default: tracks/beam;         The material used to color the beam. It must be defined in a separate <code>.material</code> file. </li> <li>Plastic deformation coefficient:         (optional);         Real number in range: <code>0.0</code> - <code>1.0</code>;         Default: <code>0.0</code>;         This defines how elastic the deformation of a beam is. It is explained in greater detail below.</li> </ul> <p>To use default values without having to type the numbers, use <code>-1</code> in each field. Example:</p> <pre><code>set_beam_defaults -1, -1, -1, -1\n</code></pre> <p>Or if you want to use the default values as a base:</p> <pre><code>set_beam_defaults 9000000, 12000, 400000, 1000000, 0.05, tracks/beam, 0.0\n</code></pre> <p>Beware: Excessive spring will result in an unstable chassis. Increasing the damping will help with this, but excessive damping will crash RoR. Higher chassis mass may mitigate that problem if applicable. If you create a light car, you may want to reduce the spring, damping and deformation values to match the real, softer frame of a car, and also increase stability.</p> <p>Be aware that the current default values are \"overspringy\", or \"underdamped\" for stability reasons (that is why trucks often look too springy when they fall down a slope), but on softer designs you can correct this and have a better damping ratio. Missing beam textures may make RoR unstable. Example for a car:</p> <pre><code>;set_beam_defaults spring, damping, deform,  break, diameter, material\nset_beam_defaults 3000000,   10000, 100000, 250000,     0.02, tracks/beamblack\n</code></pre> <p>If you want to keep a rigid chassis base and drivetrain, you can do:</p> <pre><code>beams\n;base chassis and drivetrain with the default high-strength settings\n1,2\n2,3\n...\n3,4\n;car body, softer setting\nset_beam_defaults 3000000, 10000, 100000, 250000\n5,6\n6,7\n...\n;return to stronger defaults for the rest (e.g. hydros)\nset_beam_defaults -1, -1, -1, -1\n...\n</code></pre> <p>If you want to to make something deform well (like for flexbodies), use these settings for the beam group you want to deform together with the global enable_advanced_deformation option to unleash unlimited beam physics for best results in crash deformation:</p> <pre><code>;set_beam_defaults spring, damping, deform,  break, diameter,         material, deform_coef\nset_beam_defaults 3000000,   10000, 100000, 250000,     0.02, tracks/beamblack,         0.9\n</code></pre> <p>The plastic deformation coefficient is <code>0.0</code> by default (elastic deformation). By setting it as property you can tune the related beam group to your needs. </p> <p>For example, if a cube made of nodes and beams is crashed to a wall, then the placement of the nodes are displaced, altering the original shape to an irregular one. </p> <p>This also affects the length of beams, if nodes are displaced, the beams may conform to a new shorter or longer length, and staying that way until another outside force is applied. </p> <p>Valid values: <code>0.0</code> - <code>1.0</code>, do not exceed that range! A plastic deformation coefficient setting of <code>0.0</code> is close to the original beam behavior of RoR 0.36.2 (quite elastic). <code>1.0</code> is close to the maximum plastic deformation you were able to reach with the former experimental <code>enable_advanced_deformation</code> patch. </p> <p>Never use a break setting lower then a deform setting! This will result in a beam breaking instantly when it starts deforming!</p>"},{"location":"vehicle-creation/fileformat-truck/#set_beam_defaults_scale","title":"Set_beam_defaults_scale","text":"<p>This is not a section, but a self-contained line that can be inserted anywhere in the truck file. It changes the scale of all following <code>set_beam_defaults</code> lines to a certain factor:</p> <ul> <li>Springiness - Scale: 0-1</li> <li>Damping constant - Scale: 0-1</li> <li>Deformation threshold constant - Scale: 0-1</li> <li>Breaking threshold constant - Scale: 0-1</li> </ul> <p>The default is all 1 for all arguments.</p> <pre><code>set_beam_defaults_scale 1, 1, 1, 1\n</code></pre> <p>Example that scales spring to 50%:</p> <pre><code>set_beam_defaults_scale 0.5, 1, 1, 1\n</code></pre> <p>Take note:</p> <ul> <li>Unlike <code>set_beam_defaults</code>, you must always give all four arguments. Its not possible to leave some out.</li> <li>Any <code>set_beam_defaults</code> line that is scaled will output a line to <code>RoR.log</code> saying <code>Due to using set_beam_defaults_scale, this set_beam_defaults was interpreted as ...</code></li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#set_node_defaults","title":"Set_node_defaults","text":"<p>This is a directive which affects all nodes (including wheel and camera nodes) declared on lines below it.  You can use this line many times to make different groups of nodes that have different characteristics (e.g. more grip for wheels, more surface drag for chassis nodes, etc.). </p> <p>The parameters are:</p> <ul> <li>loadweight:         Real number;         Default: <code>0.0</code>;          The default loadweight mass applied to a node. Will be overridden by a per node definition (the option <code>l</code>).         Minimass calculation is unaffected.</li> <li>friction:         Real number;         Default: <code>1.0</code>;          The amount to multiply the node's friction by.          A setting of <code>2</code> will double the friction; a setting of <code>0</code> will create a frictionless node.</li> <li>volume:         Real number;         Default: <code>1.0</code>;          The amount to multiply the node's buoyancy.          A setting of <code>2</code> will double the buoyancy; a setting of <code>0</code> will create a non-buoyant node. This only applies when the node is in a fluid.</li> <li>surface:         Real number;         Default: <code>1.0</code>;          The amount to multiply the node's surface by.          A setting of <code>2</code> will double the surface; a setting of <code>0</code> will create a node with no surface. This only applies when the node is in a fluid.</li> <li>options:         (optional);         Options string;         Set any node-option property as default. You do not need to set the <code>l</code> property if a default loadweight is set.</li> </ul> <p>Important: Buoyancy volume and drag surface settings only have effect on fluids defined in <code>ground_models.cfg</code> (mud definitions), so right now they do not work with the standard RoR Water.</p> <p>To use default values without having to type the numbers, use \"-1\" in each field. For example:</p> <pre><code>set_node_defaults -1, -1, -1, -1\n</code></pre> <p>Beware: Excessive friction, surface and volume will result in an unstable node/beam structure when driving in mud. If your wheels/truck explodes when driving from solid ground onto mud, lower the friction and/or volume setting. If a wheel cracks while in the mud, lower the volume and/or the surface setting.</p> <p>Syntax is <code>set_node_defaults loadweight, traction, buoyancy, surface</code></p> <p>Mud tire example, unloaded, increased traction, higher buoyancy, higher drag surface and set to extra per node buoyancy:</p> <pre><code>set_node_defaults -1, 1.1, 5, 1.25, b\n</code></pre> <p>Chassis, loaded with <code>5</code> kg per node, reduced traction, no buoyancy, higher drag surface:</p> <pre><code>set_node_defaults 5, 0.5, 0, 2\n</code></pre> <p>Tracks example, high traction, low buoyancy, low surface, loaded with <code>50</code> kg per node:</p> <pre><code>set_node_defaults 50, 1.2, 0.3, 0.5\n</code></pre> <p>Steam boat paddlewheel, loaded with <code>75</code> kg per node, no traction, no buoyancy, high drag surface:</p> <pre><code>set_node_defaults 75, 0, 0, 3\n</code></pre> <p>Contactless with default settings:</p> <pre><code>set_node_defaults -1, -1, -1, -1, c\n</code></pre> <p>The new <code>L</code> node option will help to understand and use <code>set_node_defaults</code>, <code>p</code> node option will boost fps even with tracked vehicles on slower computers. See: nodes</p>"},{"location":"vehicle-creation/fileformat-truck/#enable_advanced_deformation","title":"Enable_advanced_deformation","text":"<p>This is not a section, but a self-contained line that can be inserted anywhere in the truck file. It changes the general beams deformation physics.</p> <p>Use this only once per truck file, it's a general activation and setting of advanced beam physics\u00a0. Its recommended to place the enable_advanced_deformation before the first beams section in your truck-file.</p> <p>Truck file syntax:</p> <pre><code>enable_advanced_deformation\n</code></pre> <p>This will remove any limit and thresholds from the set_beam_defaults processing. Its recommended to use it for the development of properly deforming flexbody node\\beam structures.</p>"},{"location":"vehicle-creation/fileformat-truck/#rollon","title":"Rollon","text":"<p>NOTE: This directive has no effect as of version 0.39.5+</p> <p>Enables collision between wheels and the contactable textured surfaces of a truck.</p> <pre><code>rollon\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#contacters","title":"Contacters","text":"<p>The contacters section lists the nodes that may contact with cab triangles. This concerns only contacts with other trucks or loads. You can easily omit this section at first.</p> <pre><code>contacters\n34\n18\n20\n22\n24\n26\n28\n30\n32\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#triggers","title":"Triggers","text":"<p>Triggers are special beams which trigger user-specified events when extended/contracted to a given bound. They have no physics attributes and can extend indefinitely.</p> <p>Parameters:</p> <ul> <li>Node 1: Node number/name; The node where the trigger beam starts.</li> <li>Node 2: Node number/name; The node where the trigger beam ends.</li> <li>contraction_trigger_limit: Real number; The length when the shortkey command gets triggered</li> <li>extension_trigger_limit: Real number; The length when the longkey command gets triggered</li> <li>shortbound_trigger_action: Positive or negative Decimal number; On normal triggers without a special option this represents the command key to be triggered at shortbound (1 - 48 [ Version 0.4.0.7+ ] 1 - 84). For other trigger types, look below.</li> <li>longbound_trigger_action: Positive or negative Decimal number; On normal triggers without a special option this represents the command key to be triggered at longbound (1 - 48 [ Version 0.4.0.7+ ] 1 - 84). For other trigger types, look below.</li> <li>options (optional): String<ul> <li><code>i</code>: Makes the trigger beam invisible</li> <li><code>c</code>: Set the boundary calculation to command-style, just for convenience</li> <li><code>x</code>: Set the trigger to disabled on startup ( default = <code>enabled</code> ), will get useless after first activation by a triggerblocker</li> <li><code>b</code>: Blocks other commandkeys, shortkey at shortbound, longkey at longbound. If longkey is set to <code>-1</code>, shortkey will get blocked at short and at longbound. It does not block of manual user inputs, just triggers.</li> <li><code>B</code>: Blocks other triggers when triggered, a number in shortkey represent the number of triggers to block at shortbound , a number in longkey the number of triggers to release at longbound.</li> <li><code>A</code>: [ Version 0.38.23+ ] Same as the Blocker <code>B</code>, but inverted activation. Will block while between shotbound and longbound a number of triggers (shortkey) and release if not (longkey).</li> <li><code>s</code>: Switches commandnumbers when triggered set in shortkey and longkey. Good to build wipers or similar, see examples</li> <li><code>h</code>: [ Version 0.38.26+ ] You can use triggers to lock or unlock hookgroups ( only hookgroups &lt;= <code>-3</code> ); Unlocks hookgroups shortkey at shortbound and hookgroup longkey at longbound.</li> <li><code>H</code>: [ Version 0.38.26+ ] You can use triggers to lock or unlock hookgroups ( only hookgroups &lt;= <code>-3</code> ); Locks hookgroups shortkey at shortbound and hookgroup longkey at longbound.</li> <li><code>t</code>: [ Version 0.4.0.7+ ] Continuous trigger, delivers a value of <code>0</code> below and at shortbound, a value of <code>1</code> over and at longbound. Between these boundaries, this trigger will deliver a value between <code>0</code> and <code>1</code> (linear), depending on the current position. See \"engine trigger\" for details on how to use this.</li> <li><code>E</code>: [ Version 0.4.0.7+ ] Engine trigger. This trigger gives you control over various vehicle driving functions. It is recommended to use this in combination with a <code>t</code>-trigger to get precise, continuous control. Works as follows:<ul> <li>''' (remapped) shortbound_trigger_action''': Positive decimal number Takes the number of the engine to be controlled, starting with <code>0</code>. As RoR only supports one engine per vehicle at the moment, always put <code>0</code> here.</li> <li>''' (remapped) longbound_trigger_action''': Positive decimal number Takes the number of the function you want to control:<ul> <li><code>0</code>: Clutch</li> <li><code>1</code>: Brake</li> <li><code>2</code>: Accelerator</li> <li><code>3</code>: RPM Control (not available at the moment)</li> <li><code>4</code>: Shift Up (use no \"t\"-trigger here). Will shift up on short and longbound.</li> <li><code>5</code>: Shift Down (use no \"t\"-trigger here). Will shift down on short and longbound.</li> </ul> </li> </ul> </li> <li>boundary_timer (optional): Positive real number; default = <code>1.0</code>; Represents the time a boundarycheck is disabled for trigger switches ( option <code>s</code> ) to avoid lockup.</li> </ul> </li> </ul> <pre><code>triggers\n;id1, id2,  short,  long, shortbound action, longbound action, options\n; a trigger between node 11 and 109 triggering commandkey 13 ( ctrl-F1) while in shortbound -10% of original length\n; and commandkey 14 (ctrl-F2) when in longbound +10% of original length\n11, 109,  0.100,  0.100,      13,      14\n\n; a trigger between using command boundaries, does exactly the same then the one above\n11, 109,  0.900,  1.100,      13,      14, c\n\n; a trigger blocked at startup, needs to be released by a triggerblocker once to work as a normal trigger,\n; good for simple robotic programming\n11, 109,  0.900,  1.100,      13,      14, cx\n\n; special case triggers: cmdkeyblocker, triggerblocker, triggerswitch\n; a commandkeyblocker blocking commandkeys when active, 15 (ctrl-F3) at shortbound and  16 (ctrl-F4) at longbound.\n11, 109,  0.900,  1.100,      15,      16, cb\n\n; a commandkeyblocker blocking one commandkey when active, 15 (ctrl-F3) at shortbound and  at longbound.\n11, 109,  0.900,  1.100,      15,      -1, cb\n\n; a triggerblocker blocking the following triggers from checking, blocking 5 at shortbound and releasing 4 at longbound, \n; Most times it will block and release the same amount of triggers, but its good for robotics programming to set separate amounts in some cases.\n11, 109,  0.900,  1.100,       5,       4, cB\n\n; a triggerswitch switching commandkeys when active, also for user inputs,  will switch F1 to F2 and vice versa every time it hits short or longbound,\n;  release timer is set to 1 second by default, before it can be triggered again.\n11, 109,  0.900,  1.100,       1,       2, cs\n\n; a triggerswitch switching commandkeys when active, also for user inputs,  will switch F1 to F2 and vice versa every time it hits short or longbound,\n; release timer is set to 3 seconds.\n11, 109,  0.900,  1.100,       1,       2, cs 3.0\n\n;  an engine trigger, controlling the accelerator (option \"2\") of engine nr. 0. Will give zero throttle in initial position (shortbound), full throttle at longbound, and a linear crossover in between.\n11, 109,  1.000,  1.500,       0,       2, ctE\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#lockgroups","title":"Lockgroups","text":"<p>This section defines lockgroups for nodes. It has to be AFTER the nodes section</p> <p>Lockgroup Default = <code>-1</code>, all nodes can be locked by standard hooks with no special lockgroup set</p> <p>Important:</p> <ul> <li>Special lockgroup: <code>9999</code> skip the node from any locking attempts</li> <li>POSITIVE lockgroups are free to use, the negative range is reserved for RoR built in standard lock-setups.</li> </ul> <pre><code>lockgroups\n;lockgroup,  nodeIDs\n; node 5 added to lockgroup 1\n1,        5\n;nodes 6, 7, 9 added to lockgroup 2\n2,  7, 6, 9\n</code></pre> <p>Performance boost option (needs to be BEFORE the nodes section):</p> <pre><code>lockgroup_default_nolock\n</code></pre> <p>This will set all nodes to <code>9999</code> (deny locking) of the truck by default.</p> <p>Any lockgroups defined later in the truck will override this setting for the specified node.</p> <p>Allows you to define exactly where standard hooks can lock to your truck and boost performance a lot when autolock hooks are used.</p> <p>Its recommended to use this option as default.</p>"},{"location":"vehicle-creation/fileformat-truck/#hooks","title":"Hooks","text":"<p>This section defines special options for hooknodes setup in the nodes section. It has to be placed after the nodes section.</p> <ul> <li>id: A node number to identify the hooknode the options apply to. The node number needs to exist and it has to be a hooknode with option <code>h</code></li> <li>options: no order needed, just place what you need, here is a list of possible options:<ul> <li><code>hookrange:</code> The range a hook scans for a valid node to lock to, Default: <code>0.4</code></li> <li><code>speedcoef:</code> The speed a hook pulls the node to lock into locking position. Default: <code>1.0</code></li> <li><code>maxforce:</code> The force limit where a locking attempt is canceled. Default: <code>100000000.0</code></li> <li><code>hookgroup:</code> The hookgroup a hook belongs to. Standard hook: <code>-1</code> (Default), Reserved for autolock: <code>-2</code>, any special hookgroup for triggered hooks <code>-3</code> or less. Only signed integer are valid. Keyword variants: <code>hookgroup</code> / <code>hgroup</code></li> <li><code>lockgroup:</code> The lockgroup a hook belongs to. Lock everything: <code>-1</code> (Default), all other numbers the hook will lock only to a node with the same lockgroup set. Only signed integer are valid. Keyword variants: <code>lockgroup</code> / <code>lgroup</code><ul> <li>Lockgroup <code>9999</code> is reserved for nodes that are skipped while locking attempts. Do NOT use lockgroup <code>9999</code> with a hook.</li> </ul> </li> <li><code>timer:</code> Delay timer for autolocking hooks before they attempt to relock. Default: <code>5.0</code>. Only positive settings are valid</li> <li><code>self-lock:</code> This hook can lock to the truck its placed on too. Keyword variants: <code>self-lock</code>/ <code>selflock</code> / <code>self_lock</code></li> <li><code>auto-lock:</code> This hook will lock automatically to valid nodes in range. Keyword variants: <code>auto-lock</code> / <code>autolock</code> / <code>auto_lock:</code></li> <li><code>nodisable:</code> When the force limit defined by maxforce is exceed the locking attempt will NOT disable the linkage beam, but the hook node will stop pulling the node to lock. Works similar to ties then. Variants: <code>nodisable</code> / <code>no-disable</code> / <code>no_disable</code></li> <li><code>shortlimit</code>: Minimum range in meters the hook will pull the node to lock to. Default = <code>0.0</code>. Keyword variants: <code>shortlimit</code> / <code>short_limit</code></li> <li><code>norope</code>: Linkage between hook and node to be locked will act like a beam and not like a rope. Variants: <code>norope</code> / <code>no-rope</code> / <code>no_rope</code></li> <li><code>visible</code>: Linkage between hook and node will be visible while locking process and locked. Variants: <code>visible</code> / <code>vis</code></li> </ul> </li> </ul> <pre><code>hooks\n; id, options\n;standard hook, increased scanrange\n144, hookrange: 2.15\n;as above, but will cancel locking attempt if pulling force exceeds 100k\n145, hookrange: 2.15, maxforce: 100000\n;triggered hook, locks 50% faster, is autlocking with a delay-timer of 7.5 seconds, belongs to hookgroup 12 ( for tiggers with option ''h'' or ''H'' ) and will only lock to nodes with lockgroup 2 set\n146, speedcoef: 1.5, auto-lock, timer: 7.5, hookgroup: -12, lockgroup: 2\n</code></pre> <p>Standard hooks toggle with <code>L</code>, autolock and triggered hooks detach with <code>ALT+L</code> manually.</p> <p>Hooks with hookgroups &lt; <code>-2</code> can only be locked automatically or by a trigger.</p>"},{"location":"vehicle-creation/fileformat-truck/#slide-nodes","title":"Slide Nodes","text":"<p>These are nodes which can slide freely along a 'rail', which is a sequence of connected beams. It's a simple constraining mechanism that introduces new possibilities into RoR and simplifies many existing mechanical structures.</p> <p>There are 2 ways to define a rail: * To specify it in slidenodes section as a second parameter.</p> <ul> <li>To specify it in railgroup section and reference it in slidenodes using railgroup_id parameter.</li> </ul> <p>A slidenode without a rail is invalid, naturally.</p> <p>Parameters:</p> <ul> <li>slide_node: Node number/name; A node to become slide-node.</li> <li>rail_nodes (sequence) (optional): Comma-separated list of nodes; default = none, expects railgroup_id: to be used; Nodes forming a rail the node can slide along. Each two consecutive nodes from this list must have a beam defined between them; for example a list containing <code>7, 8, 9, 10</code> would require beams <code>7</code> - <code>8</code>, <code>8</code> - <code>9</code>, <code>9</code> - <code>10</code> to be defined.</li> <li>s (spring_rate) (optional): Real number prefixed with 's' or 'S'; default = 9000000; Force that holds the node to the rail (in N/m). Write as: <code>s10.98</code></li> <li>b (break_force) (optional): Real number prefixed with 'b' or 'B'; default = infinity (never); Force at which the node will separate from the rail (in N). Write as: <code>b10.98</code></li> <li>t (tolerance) (optional): Real number prefixed with 't' or 'T'; default = <code>0</code>; Distance from the rail before rail forces are applied to the node.</li> <li>g (railgroup_id) (optional): Positive decimal prefixed with 'g' or 'G'; default = <code>none</code>, expects rail_nodes: to be used.; railgroup defining a rail. Write as: <code>g2</code></li> <li>r (attachment_rate) (optional): [ Version 0.4+ ] Real number prefixed with 'r' or 'R'; default = disabled; Attachment rate in seconds. Write as: <code>r2.3</code></li> <li>d (max_attachment_distance) (optional): [ Version 0.4+ ] Real number prefixed with 'd' or 'D'; default = 0.1; Maximum attachment Distance in meters. Write as: <code>d0.23</code></li> <li>q (quantity) (optional): [ Version 0.4+ ] Real number prefixed with 'q' or 'Q'; default = infinity; Ignored by parser. Original meaning: number of beams the node can slide along.</li> <li>c (attachment_constraints) (optional): [ Version 0.4+ ] Two character string: [c|C] + [a|f|s|n]; default = <code>none</code><ul> <li>a: Attach all.</li> <li>f: Attach foreign.</li> <li>s: Attach self.</li> <li>n: Attach none.</li> </ul> </li> </ul> <pre><code>slidenodes\n;id, node id list\n1,  7, 8, 9, 10\n\nslidenodes\n;id, node id list, spring,  break, tolerance\n1,  7, 8, 9, 10,  s9000, b10000,      t0.1\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#slidenode_connect_instantly","title":"slidenode_connect_instantly","text":"<p>To be documented.</p>"},{"location":"vehicle-creation/fileformat-truck/#rail-groups","title":"Rail Groups","text":"<p>Allows specifying a separate rail which can be linked to slidenode(s) later.</p> <p>Parameters:</p> <ul> <li>rail_group_id: Positive decimal number; ID of this railgroup.</li> <li>rail_nodes (sequence): Comma-separated list of [nodes/node-ranges]; Nodes forming a rail the node can slide along. Each two consecutive nodes from this list must have a beam defined between them; for example a list containing <code>7, 8, 9, 10</code> would require beams <code>7</code> - <code>8</code>, <code>8</code> - <code>9</code>, <code>9</code> - <code>10</code> to be defined. Ranges are supported (for example: <code>1-10</code>)</li> </ul> <pre><code>railgroups\n;railgroupID, node id list\n1,  7, 8, 9, 10\n\nslidenodes\n;id, railgroupID\n1,          g1\n</code></pre> <p>To create a looped rail group, simply make the last node of the list the same as the first node of the list. Please note that all segments must have beams defined.</p> <pre><code>railgroups\n;railgroupID, node id list\n1,  7, 8, 9, 7\n\nslidenodes\n;id, railgroupID\n1, g1\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#detacher_group","title":"Detacher_group","text":"<p>This section defines group of the beams that are deleted if one beam in this group breaks. Very useful for detaching parts of the truck like bumpers, doors, wheels etc. falling of the truck when crashing. All kinds of beams can be set to a detacher_group except wheel generation section, these one will always be \"default\" to avoid deleting the axle of the wheel which results in a crash.</p> <p>Valid detacher group numbers: any positive or negative integer</p> <p>Valid end lines: <code>detacher_group 0</code>, <code>detacher_group end</code></p> <p>Group <code>0</code> its the default setting and means no group set and is used to end groups.</p> <p>Use positive group numbers for master beams and negative ones for minor beams. A master detacher-beam breaking will brake all beams with the sames group number and all minor beams with the same negative group number (abs(detacher_group)). A minor beam will not break any other beams at all, its just set to break with a group of beams if a master detacher-beam in its group breaks.</p> <pre><code>beams\ndetacher_group 1\n0,    1\ndetacher_group 0\n2,    4\n3,    5\ndetacher_group 1\n6,    8\n7,    9\n10,   12\ndetacher_group 2\n11,   13\ndetacher_group 0\n22,   14\ndetacher_group -1\n16,   17\ndetacher_group 0\n</code></pre> <p>This will add beams <code>0,1</code> + <code>6,8</code> + <code>7,9</code> + <code>10,12</code> to group <code>1</code>, beam <code>16,17</code> to group <code>1(minor)</code> and beam <code>11,13</code> to group <code>2</code>. Breaking beam <code>16,17</code> will not break any other beam. Breaking beam <code>6,8</code> i.e, will break and disable beams <code>0,1</code> + <code>7,9</code> + <code>10,12</code> + <code>16,17</code> too in the same simulation cycle.</p>"},{"location":"vehicle-creation/fileformat-truck/#ropes","title":"Ropes","text":"<p>Ropes are special beams that have no compression strength (they can shorten easily) but have standard extension strength, like a cable or a chain. They have also another peculiarity: the second node can \"grab\" the nearest reachable ropable node with the <code>CTRL+L</code> key. Standard use is to use a chassis node as the first node, and a \"free\" node as the second node (free as in not attached by any other beam). The best example of this are the chains of the Multibennes truck.</p> <p>Option: <code>i</code> for invisible [ Version 0.38.18+ ]</p> <pre><code>ropes\n;order is important: root-&gt;end\n116,134\n130,136, i\n116,135\n130,137\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#fixes","title":"Fixes","text":"<p>Fixes are nodes that are fixed in place. That means that once put in place in the terrain, they will never move, whatever happens. </p> <p>This is useful for making fixed scenery elements from beams, like bridges. </p> <p>Just add the node number that you want to fix.</p> <pre><code>fixes\n2\n3\n12\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#minimass","title":"Minimass","text":"<p>This sets the minimum node mass. Useful for very light vehicles with lots of nodes (i.e. small airplanes).</p> <p>Notes:</p> <ul> <li>Without this section, the minimum node weight is 50 kilograms.</li> <li>When using a very low minimass, i.e. below <code>10</code>, you should use a low damping value in the Beam defaults in your beams section</li> <li>Nodes with a load weight (<code>l</code>) value below the value set in minimass will default to the minimass value.</li> <li>Minimass can be overridden by set_default_minimass.</li> </ul> <pre><code>minimass\n10.0\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#set_default_minimass","title":"Set_default_minimass","text":"<p>[ Version 2020.01+ ] This section allows nodes to override the minimum node weight, either the value set in <code>minimass</code> or the default 50kg if not using minimass. This is very useful if you already have a light vehicle tuned for a certain minimass value and you need to add a lighter node than what is set in your minimass value.</p> <p>It is placed in the nodes section, the new minimum weight will be applied to all following nodes.  Example:</p> <pre><code>nodes\n\n;standard 50kg nodes\n\n0, 0.54, 0, -0.567, n\n1, 0.54, 0.18, -0.567, n\n2, 0.54, 0, -0.4536, n\n\n;set nodes 3-5 minimum weight to 2kg\n\nset_default_minimass 2\n\n3, 0.54, 0.18, -0.4536, n\n4, 2.1, 0.2, -0.567, n\n5, 2.1, 0.2, -0.4536, n\n\n;reset to default\nset_default_minimass 50\n</code></pre> <p>Note: When adding light nodes to a vehicle which features heavy nodes, you may have to lower the beam defaults spring/damping values to accommodate for the lighter weight!</p>"},{"location":"vehicle-creation/fileformat-truck/#ties","title":"Ties","text":"<p>Ties are special beams that have no compression strength (they can shorten easily) but have standard extension strength, like a cable or a chain.</p> <p>Like ropes, ties grab the nearest reachable ropable node with the <code>O</code> key. But there is a twist: unlike ropes, they disappear when not attached (because they have no extremity node at rest) and they automatically shorten until the extension forces reaches a threshold. They are very useful to solidly strap a load to a chassis.</p> <p>Parameters:</p> <ul> <li>Root node: Node number/name; The root node (the starting point of the beam)</li> <li>Max. reach length: Real number; The maximum reach length</li> <li>Auto shorten rate: Real number; The rate of auto-shortening</li> <li>Min. length: Real number; The shortest length possible (proportional to original length; <code>1.0</code> means no shortening)</li> <li>Max. length: Real number; The greatest length possible (proportional to original length; <code>1.0</code> means no extension; recommended you keep it as <code>1.0</code>).</li> <li>Options (optional): String; default = <code>n</code><ul> <li><code>n</code>: Visible (default)</li> <li><code>i</code>: Invisible</li> <li><code>s</code>: [ Version 2020.01+ ] Prevents self locking.</li> </ul> </li> <li>Max. stress (optional): Real number; default = 12000; The force (in Newtons) when the ties stop to shorten.</li> <li>Group (optional): Positive decimal number; default = <code>none</code></li> </ul> <pre><code>ties\n;root, max len, rate, short, long (, flag, max_stress, group)\n58,     1.5,  0.5,   0.3,  1.0\n62,     1.5,  0.5,   0.3,  1.0\n59,     1.5,  0.5,   0.3,  1.0\n63,     1.5,  0.5,   0.3,  1.0, n, 5000, 2\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#ropables","title":"Ropables","text":"<p>This section lists the nodes that can be caught by ropes or ties. Good use is to define some ropable nodes at the front and back of the truck to allow towing the truck.</p> <pre><code>ropables\n;node-id, group, multilock\n0,     0,         0\n1,    -1\n</code></pre> <p>The group and multilock arguments are only available in RoR 0.36.3 and later.</p> <ul> <li>Group:<ul> <li>Default: <code>-1</code> = all groups.</li> </ul> </li> <li>Multilock:<ul> <li><code>0</code>=disable, <code>1</code>=enable: This specifies if this ropable can be locked by many ties/ropes.</li> </ul> </li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#particles","title":"Particles","text":"<p>This enables/disables a particle cannon in the game (with the <code>G</code> key).</p> <pre><code>particles\n;source, back reference,  particle_system_name\n19,              5,  tracks/particles/water1\n19,              5,  tracks/particles/waterGreen\n16,              3,  tracks/particles/water1\n16,              3,  tracks/particles/waterRed\n</code></pre> <p>(You can create your own particle. A template can be found in <code>Rigs of Rods\\resources\\particles.zip\\water.particle</code>)</p>"},{"location":"vehicle-creation/fileformat-truck/#torque-curve","title":"Torque Curve","text":"<p>Torque curves affect the behavior of the engine. This section allows you to assign predefined or user-defined torque curve to a truck. It can be used in 2 ways:</p>"},{"location":"vehicle-creation/fileformat-truck/#usage-1-predefined-curve","title":"Usage #1: Predefined curve","text":"<ul> <li>curve_name: Torque curve name; default = default; Predefined options are: <code>default</code>, <code>diesel</code>, <code>turbodiesel</code>, <code>gas</code>, <code>turbogas</code>, <code>wheelloader</code>, <code>compacttractor</code>, <code>tractor</code>, <code>hydrostatic</code>.</li> </ul> <pre><code>    torquecurve\n    turbogas\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#usage-2-defining-custom-curve","title":"Usage #2: Defining custom curve","text":"<ul> <li>power: Real number; RPM where the power begins</li> <li>torque_percentage: Real number; Power as a percent of total torque specified in section \"engine\" parameter #3 \"Torque\" (0 = 0%, <code>0.5</code> = 50%, <code>1.5</code> = 150%)</li> </ul> <p>It's suitable to define the torque to the engine RPM set in the engine definition plus 25% ( multiply the value with 1.25) to get the overrev area defined.</p> <p>The following example would be good for a maximum engine RPM set to 2800:</p> <pre><code>torquecurve\n   0, 0.00\n1000, 0.79\n1500, 0.90\n2000, 0.97\n2500, 0.99\n3000, 0.90\n3500, 0.77\n</code></pre> <p>Engine dying in idle and first gear? Just define a single higher peak value where you want the engine to idle... like adding:</p> <pre><code>...\n700, 0.2\n800, 0.6\n900, 0.4\n...\n</code></pre> <p> to the example above in the right spot will result the engine idle a little bit higher then <code>800</code> rpm in first gear.</p> <p>The example to the left shows a screenshot of a torquecurve made for a small diesel engine:</p> <p>Idle: <code>~600</code> RPM, Max @ <code>1900</code> RPM, slight and constant torque increase over the used RPM bandwidth, hard torque drop off in the over-rev area.</p>"},{"location":"vehicle-creation/fileformat-truck/#cruise-control","title":"Cruise Control","text":"<p>This section offers options to the cruise control feature (activated by pressing space bar):</p> <ul> <li>lower limit: Sets the minimum speed cruise control can be activated. Unit is meters per second (divide kph by <code>3.6</code>. Example: <code>36</code> kph/<code>3.6</code> =<code>10</code> mps)</li> <li>auto brake: If activated, the vehicle brakes if velocity is faster than set in cruise control. <code>0</code>=auto brake off, <code>1</code>=auto brake on</li> </ul> <pre><code>;cruisecontrol lowlimit autobrake\ncruisecontrol        10         1\n</code></pre> <p>In the example above, minimum speed for cruise control to be activated is <code>10</code>mps (<code>36</code>kph). The auto brake feature is activated.</p>"},{"location":"vehicle-creation/fileformat-truck/#speedlimiter","title":"Speedlimiter","text":"<p>Limits the speed of a vehicle. If the speed is above the limit, the vehicle will not accelerate any further. </p> <p>Insert the limit in meters per second (divide kph by <code>3.6</code>. Example: <code>36</code> kph/<code>3.6</code> =<code>10</code> mps)</p> <pre><code>;speedlimiter &lt;speed in m/s&gt;\nspeedlimiter 10\n</code></pre> <p>In the example above, the maximum speed of the vehicle is <code>10</code>mps (<code>36</code>kph), it will not accelerate any further.</p>"},{"location":"vehicle-creation/fileformat-truck/#axles","title":"Axles","text":"<p>This section defines axles on a vehicle, allowing more accurate distribution of torque among the wheels.</p> <p>The axle section introduces open differentials, and spooled (aka locked) differentials. They are toggled with the <code>W</code> key.</p> <p>By adding axles to your vehicle file you override the propulsed property for the tires. Only wheels connected to an axle are powered, if multiple axles are defined the axles are interconnected in a locked manner. If no axle section is defined the old model of equal power distribution is used. </p> <p>Because the axle sections looks up already defined wheels, it must be defined AFTER the wheels have been defined.</p> <p>The axle section is different from other sections in that it is broken into properties. Properties are not order dependent. Currently the available properties are:</p> <ul> <li>w1(&lt;node1&gt; &lt;node2&gt;) - This defines which wheel the axle is attached to, &lt;node1&gt; and &lt;node2&gt; Refer to the node1 and node2 as defined in the wheel section</li> <li>w2(&lt;node1&gt; &lt;node2&gt;) - Wheel 2, same as w1, this is the second wheel attached to the axle. <code>w1</code> and <code>w2</code> are interchangeable.</li> <li>d(type) - Defines the available differential types for this axle. the list of axles is cycled through in the order specified, differential types maybe specified more than once. Each differential type is specified by a single letter, the letters are not to be separated by spaces or any other character. If no differentials are specified the axles will default to opened and locked.<ul> <li>Available differential types<ul> <li><code>o</code> - Open</li> <li><code>l</code> - Locked (wheels locked together regardless of torque input)</li> <li><code>s</code> - Split evenly (each wheel gets equal torque regardless of wheel speed)</li> <li><code>v</code> - Viscous [ Version 2020.01+ ] (applies locking force based on the amount of torque)</li> </ul> </li> </ul> </li> </ul> <p>Sample axle section:</p> <pre><code>axles\n; axle 1\nw1(1 2), w2(3 4), d(ol)\n; axle 2\nw1(5 6), w2(7 8), d(l)\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#interaxles","title":"Interaxles","text":"<p>In [ Version 2020.01+ ] and above you can define inter axle differentials on a vehicle, allowing more accurate distribution of torque among the axles. They are toggled with <code>CTRL+W</code>.</p> <p>Parameters:</p> <ul> <li>axle_1: The number of the first axle, with the first defined axle starting at <code>1</code>.</li> <li>axle_2: The number of the second axle, with the first defined axle starting at <code>1</code>.</li> <li>d(type): Similar to the <code>axles</code> section</li> </ul> <p>Sample interaxles section:</p> <pre><code>interaxles\n; axle_1, axle_2, d(type)\n2, 3, d(vlso)\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#transfercase","title":"Transfercase","text":"<p>In [ Version 2020.01+ ] and above you can add a transfer case on a vehicle.</p> <p>Parameters:</p> <ul> <li>axle_1: The number of the first axle, the one which is always driven.</li> <li>axle_2: The number of the second axle, the one which is only driven in 4WD mode.</li> <li>2wd_mode: Allows/disallows 2WD mode. </li> <li>2wd_lo_mode: Allows/disallows 2WD Lo mode. </li> <li>gear_ratio(s): Alternate gear ratios in Lo mode. If none are specified, Lo mode will be disabled.</li> </ul> <p>Notes:</p> <ul> <li>Requires an <code>axles</code> section defined first!</li> <li><code>SHIFT+W</code> switches between 2WD/4WD mode.</li> <li>If alternate gear ratios are specified, <code>ALT+W</code> switches between Hi/Lo mode.</li> </ul> <p>Sample transfercase section:</p> <pre><code>;Basic transfer case, no alternate ratio(s) \n\ntransfercase\n;default driven axle, alternate axle, has 2wd mode, has 2wd lo mode\n2, 1, 1, 0\n\n;Transfer case with alternate ratio(s)\n\ntransfercase\n;default driven axle, alternate axle, has 2wd mode, has 2wd lo mode, alternate ratio(s)\n2, 1, 1, 0, 4.11, 3.1, 2.72\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#wheeldetachers","title":"Wheeldetachers","text":"<p>[ Version 0.4.7.0+ ] this section allows you to disable power to a wheel when a detacher_group breaks.</p> <pre><code>wheeldetachers\n;wheel_id, detacher_group\n0, 1\n1, 2\n</code></pre> <p>Parameters:</p> <ul> <li>wheel_id: Real number; The wheel number, with the first defined wheel starting at <code>0</code>.</li> <li>detacher_group: Real number; The d<code>etacher_group</code> number. </li> </ul> <p>Example usage:</p> <pre><code>beams\n;front right wheel\nset_beam_defaults 12500000, 28600, 1860000, 6968000\ndetacher_group 1\n1, 2, i\n3, 4, i\n5, 6, i\n7, 8, i\ndetacher_group 0\n;front left wheel\ndetacher_group 2\n9, 10, i\n11, 12, i\n13, 14, i\n15, 16, i\ndetacher_group 0\n\nmeshwheels \n;tire_radius, rim_radius, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass,   spring, damping, side,               meshname         material\n0.35,       0.21,   0.5,      14,    1,    2,    9999,      1,         1,  18, 200.0, 300000.0,  2000.0,    l, dodgechargerwheel.mesh dodgechargerband\n0.35,       0.21,   0.5,      14,    3,    4,    9999,      1,         1,  26, 200.0, 300000.0,  2000.0,    r, dodgechargerwheel.mesh dodgechargerband\n\n\nwheeldetachers\n;wheel_id, detacher_group\n0, 1\n1, 2\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#collisionboxes","title":"Collisionboxes","text":"<p>In [ Version 0.4.0.5+ ] you can define collisionboxes. In earlier versions of RoR, there was only one bounding box for truck activation per object, which was defined by the outermost nodes. With collisionboxes, you get the ability to define the nodes that should be used for the activation bounding box calculation. It is also possible to define multiple bounding boxes, for example to exclude some areas from activation.</p> <p>Syntax:</p> <pre><code>collisionboxes\n;node id list box 1\n48, 58, 59, 67\n;node id list box 2\n5, 6\n...\n;node id list box n\n...\n</code></pre> <p>Collisionboxes can give you a huge performance increase in situations where many beam objects would have been activated before, for example a container crane with many containers underneath.</p>"},{"location":"vehicle-creation/fileformat-truck/#rescuer","title":"Rescuer","text":"<pre><code>rescuer\n</code></pre> <p>This single keyword placed in the truck file will make the truck a rescuer, like the Scania Wrecker. These vehicles can be entered by pressing <code>R</code>.</p>"},{"location":"vehicle-creation/fileformat-truck/#scripts","title":"Scripts","text":"<p>Loads an AngelScript (*.as) file. Functions like other custom scripts except it provides an extra global variable <code>thisActor</code> pointing to the associated truck.</p> <pre><code>scripts\nMyTruckScript.as\n</code></pre> <p>This feature is early in development, scripting documentation will be updated soon.</p>"},{"location":"vehicle-creation/fileformat-truck/#look-feel","title":"Look &amp; Feel","text":""},{"location":"vehicle-creation/fileformat-truck/#managedmaterials","title":"Managedmaterials","text":"<p>Managed materials helps you to use complex material effects (for example reflective materials like chromes, dynamic damage materials) without having to deal with the technical complexity of writing a shader for Ogre3D. Rigs of Rods comes with a set of standard shader effects, and with the Managedmaterial section you can pick the effect you want and adapt it for your vehicle. The shader library will grow with time, so the set of effects available in this section will grow with time.</p> <p>The generic format of this section is:</p> <ul> <li>Material name - The name of the material you are creating. You can use this material for any of your meshes (flexmeshes, props, etc.). This material name must not be defined anywhere else (for example in a .material file).</li> <li>Effect name - The name of the effect you want to use. Valid names are defined below.</li> <li>Effect parameters - A variable number of parameters, depending on the effect your are using. See below for the description.</li> </ul> <p>Do not use a comma to separate parameters in a managedmaterial section! Also, you must declare your managed material before they are used. That means that the managedmaterial section should come before the flexmesh, props, wheels, or any section that will use this material.</p> <p>Currently available effects:</p> <ul> <li> <p>flexmesh_standard - This effect defines an opaque, reflective and damageable material for flexmeshes. This will work only for flexmeshes! It takes 3 parameters:</p> </li> <li> <p>A standard texture name: this is the base, undamaged texture. (The diffuse map.)</p> </li> <li>A damaged texture name (or <code>-</code> if no damage texture): Should be similar to the standard texture, but with damage.</li> <li> <p>A specular map texture name (or <code>-</code> if no specular map texture): a greyscale image that maps the \"shininess\" of the material, from dark for matte to white for chromed. Technically this isn't a specular map but a reflectivity map.</p> </li> <li> <p>flexmesh_transparent - This effect defines a semi-transparent, reflective and damageable material for flexmeshes. This will work only for flexmeshes! It takes 3 parameters:</p> </li> <li> <p>A standard texture name: this is the base, undamaged texture. The alpha channel of this texture is used to define transparency. (The diffuse map.)</p> </li> <li>A damaged texture name (or <code>-</code> if no damage texture): Should be similar to the standard texture, but with damage.</li> <li> <p>A specular map texture name (or <code>-</code> if no specular map texture): A greyscale image that maps the \"shininess\" of the material, from dark for matte to white for chromed. Again, technically this isn't a specular map but instead a reflectivity map.</p> </li> <li> <p>mesh_standard - This effect defines an opaque, reflective material for any mesh (e.g. wheel rims, props, etc.) It takes 2 parameters:</p> </li> <li> <p>a standard texture name: This is the base texture.</p> </li> <li> <p>a specular map texture name (or <code>-</code> if no specular map texture): A greyscale image that maps the \"shininess\" of the material, from dark for matte to white for chromed.</p> </li> <li> <p>mesh_transparent - This effect defines a semi-transparent, reflective material for any mesh (e.g. windows) It takes 2 parameters:</p> </li> <li> <p>a standard texture name: This is the base, undamaged texture. The alpha channel of this texture is used to define transparency.</p> </li> <li>a specular map texture name (or <code>-</code> if no specular map texture): A greyscale image that maps the \"shininess\" of the material, from dark for matte to white for chromed.</li> </ul> <p>WARNING: Your texture file names must not start with <code>-</code>. The parser would treat the <code>-</code> as \"no texture placeholder\" and ignore the rest.</p> <p>Examples:</p> <pre><code>managedmaterials\n;new_material    effect               parameters...\nmainbody flexmesh_standard    mytruckbody.png mytruckbody-dmg.png mytruckbody-spec.png\nwindows   flexmesh_transparent mytruckbody.png mytruckbody-dmg.png mytruckbody-spec.png\nwheels    mesh_standard        mytruckwheels.png mytruckwheels-spec.png\n</code></pre> <p>A note about shaders for power-users: </p> <p>You can still use your own, non managed, Cg shaders by manually defining your <code>.material</code>, <code>.program</code> and <code>.cg</code>. Consult the Ogre3D documentation for more details. </p> <p>If you think you have made a good shader that can be helpful to other modders, submit it to GitHub for inclusion to the managedmaterial library of RoR.</p>"},{"location":"vehicle-creation/fileformat-truck/#set_managedmaterials_options","title":"Set_managedmaterials_options","text":"<p>This specifies options for all FOLLOWING managed material lines.</p> <p>Parameters:</p> <ul> <li>doublesided: <code>0</code> (single sided) or <code>1</code> (double sided); default = <code>0</code> (single sided); . Determines if the mesh should be visible from both sides or not.     IMPORTANT: This parameter treats <code>1</code> as \"yes\" and anything else as \"no\". This is required for backwards compatibility.</li> </ul> <pre><code>; set_managedmaterials_options doublesided\nset_managedmaterials_options 1\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#assetpacks","title":"Assetpacks","text":"<p>Asset packs are separately distributed zip files that can include meshes/textures/materials/etc to be used by vehicles or terrains.</p> <p>Asset packs are defined in the truck file using:</p> <pre><code>assetpacks\nmyTruckParts.assetpack\n</code></pre> <p>An asset pack zip file MUST include a text file with <code>.assetpack</code> extension containing file info:</p> <pre><code>assetpack_name \"Extra Parts for my Awesome Truck\"\nassetpack_description \"Example asset pack\"\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#flares","title":"Flares","text":"<p>Flares allow you to add lights to your truck. They work as light sources in OGRE and will illuminate other objects (if enabled in settings).</p> <p>See also: Flares Tutorial</p> <p>Required parameters:</p> <ul> <li>Reference node: Node ID;         Node which defines origin of flare-placement coordinate system</li> <li>X axis node: Node ID;         Node which defines X-axis of flare-placement coordinate system</li> <li>Y axis node: Node ID;         Node which defines Y-axis of flare-placement coordinate system</li> <li>Flare X offset: Real number;         Flare position on X axis in % of distance from ref-node to X-node</li> <li>Flare Y offset: Real number;         Flare position on Y axis in % of distance from ref-node to Y-node</li> </ul> <p>Optional parameters:</p> <ul> <li>Type: Character; default = f (headlight);         Type of flare.<ul> <li><code>f</code> (default mode when not stated): Low beams, toggled with <code>N</code> or cycled with <code>CTRL+N</code>.</li> <li><code>h</code>: High beams, toggled with <code>SHIFT+N</code> or cycled with <code>CTRL+N</code>.</li> <li><code>s</code>: Sidelights (running/parking lights), toggled with <code>N</code> or cycled with <code>CTRL+N</code>.</li> <li><code>g</code>: Fog lights, toggled with <code>ALT+N</code> or cycled with <code>CTRL+N</code>.</li> <li><code>b</code>: Brake lights.</li> <li><code>t</code>: Tail lights, activated together with <code>f</code> option. </li> <li><code>l</code>: Left blinker.</li> <li><code>r</code>: Right blinker.</li> <li><code>R</code>: Reverse light. (on when driving in R gear)</li> <li><code>d</code>: Dashboard indicator. (see dashboard input source)</li> <li><code>u</code>: User controlled light. (i.e. fog light) (see control numbers)        </li> </ul> </li> <li>Control number: Integer; default = -1         For <code>u</code> flares, enter value 1-10: <code>1</code> would be <code>CTRL+1</code>, <code>2</code> would be <code>CTRL+2</code>, and so on. For other flare types, enter -1.<ul> <li>Special value: <code>12</code> - Parking brake indicator </li> </ul> </li> <li>Dashboard input source: String Enter an input source from the dashboard system. This enables flares to toggle based on dashboard UI status, such as engine ignition or locked state.</li> <li>Blink delay (ms): Integer; default = -2;         Delay between on/off change, in milliseconds. A value of 500 means that the light is 500ms on and 500ms off. Use a value of 0 to create a non-blinking light.<ul> <li>Special value: <code>-1</code> to use the default value of 500ms.</li> <li>Special value: <code>-2</code> non-blinking light except blinkers, which will have default 500ms.        </li> </ul> </li> <li>Flare size: Real number; default = -1;         This determines how big the flare will be. Reasonable values are between <code>0.1</code> and <code>5</code> (<code>0.1</code> = 10% of default size). If the size is smaller then <code>0</code>, then the flare will be independent of the camera angle. (So the flare does not get smaller when you move the camera)</li> <li>Material name: String; default = 'default';         This field determines what material should be used for the flare display. If you want to use the standard material, use <code>default</code>. Please note that there is not comma between the material name and the size argument. You can use <code>tracks/aimflare</code> to position your flare.</li> </ul> <p>Notes</p> <p>[ Version 2022.12+ ]  introduced the <code>h</code>, <code>s</code>, <code>g</code>, and <code>t</code> options. Light cycling (CTRL+N) functions based on the available lights: i. All lights off ii. Sidelights on but only if any installed, otherwise skip to 3). iii. Sidelights and low beams on. iv. Sidelights, low beams and high beams on, but only if high beams are installed, otherwise cycle to 1).</p> <p>Examples:</p> <pre><code>flares\n;RefNode,  X,  Y, OffsetX, OffsetY, Type, ControlNumber, BlinkDelay, size MaterialName\n\n;example for a most default one:\n51,  1, 79,    0.23,    0.50,    b,            -1,          0,   -1 default\n\n;example for a custom brake light\n51,  1, 79,    0.23,    0.50,    b,            -1,        300,  0.2 myTruck/MyBrakeFlare\n\n;example for a user controlled Fog Light (toggled by CTRL+1)\n51,  1, 79,    0.23,    0.50,    u,             1,          0,  0.3 myTruck/MyFogFlare\n\n;example for dashboard indicator\n51,  1, 79,    0.23,    0.50,    d,    engine_ignition,    -1,  -1 default\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#flares2","title":"Flares2","text":"<p>Flares2 are the same as normal flares, except that they add an offset-z argument in between:</p> <pre><code>flares2\n;RefNode,  X,  Y, OffsetX, OffsetY, OffsetZ, Type, ControlNumber, BlinkDelay, size MaterialName\n51,  1, 79,    0.23,    0.50,    0.50,    b,            -1,        300,  0.2 myTruck/MyBrakeFlare\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#flares3","title":"Flares3","text":"<p>[ Version 2022.12+ ]</p> <p>Flares3 functions the same as Flares2, except they take set_inertia_defaults into account. This allows for flares which can fade in/out. </p> <pre><code>flares3\nset_inertia_defaults 0.4, 0.8, linear, linear\n;RefNode,  X,  Y, OffsetX, OffsetY, OffsetZ, Type, ControlNumber, BlinkDelay, size MaterialName\n51,  1, 79,    0.23,    0.50,    0.50,    b,            -1,        300,  0.2 myTruck/MyBrakeFlare\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#materialflarebindings","title":"Materialflarebindings","text":"<p>See also: Flares Tutorial</p> <p>This can bind a material to a flare, so that the material changes with the flare's on/off status.</p> <p>The format is as follows:</p> <ul> <li>flare number: Counting starts from zero. Just count down your flares in the flares section to find the correct number.</li> <li>material name: The material that you want to change. It must contain one technique, one pass and a special Texture Unit State (see below for an example)</li> </ul> <pre><code>flares\n51,1,79, 0.23, 0.50, b, -1, 300, 0.2 myTruck/MyBrakeFlare\n\nmaterialflarebindings\n0, myBrakeMaterial\n</code></pre> <p>The material must use an animated texture, as shown below:</p> <pre><code>material myBrakeMaterial\n{\n    technique\n    {\n        pass\n        {\n            texture_unit\n            {\n                anim_texture truck_brake_material.png 2 0\n            }\n        }\n    }\n}\n</code></pre> <p>Put the off-state of the brakelight into the file <code>truck_brake_material_0.png</code> and the on-state into <code>truck_brake_material_1.png</code>. The <code>2</code> and <code>0</code> at the end should not be changed. </p> <p>This section should be after the flares section and before the props and flexbodies section in order for the lights to work properly.</p> <p>COMPATIBILITY NOTE: Parameters #1 and #2 can also be separated by just space, the parser will silently accept it.</p>"},{"location":"vehicle-creation/fileformat-truck/#flaregroups_no_import","title":"Flaregroups_no_import","text":"<p>Prevents a truck from importing flare states when locked or tied to another truck. </p> <p>For example, this can be used to stop a truck-mounted forklift's lights from activating with the truck lights.</p> <ul> <li>Type: Character; Type of flare, e.g. low beams (<code>f</code>).</li> <li>Control number: Integer; default = -1         For user-controlled (<code>u</code>) flares, enter value 1-10 that corresponds to the flare.</li> </ul> <p>Example to prevent importing low beams and CTRL+1 user-controlled lights:</p> <pre><code>flaregroups_no_import \nf\nu 1\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#props","title":"Props","text":"<p>This allows you to \"stick\" any 3D mesh to a triangle of points of a truck. You can use it to stick air intakes, horns, seats, dashboard, bumpers, whatever to the truck. Note that there will be no collision detection with these objects. Like flares, they use a vector coordinate system instead of normal right-angle coordinates. Props are positioned relative to 3 nodes of the chassis: One node is the reference node, and the two others define a base (x,y). Props are positioned relative to the reference node by adding proportions of the vectors ref-&gt;X, ref-&gt;Y, with the normal being used as well.</p> <p>Parameters are:</p> <ul> <li>reference_node: Node number/name; The base node, used to define the coordinate system</li> <li>x_direction_node: Node number/name; The node that defines the X direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>y_direction_node: Node number/name; The node that defines the Y direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>x_offset: Real number; The amount the prop should be moved in the X direction from the reference node. The distance it is moved depends on the distance between the Reference node and the '''X direction node '''(it's proportional): (0) leaves the prop on the reference node, (1) moves it all the way to the X direction node, and (0.5) puts the prop half-way between the two</li> <li>y_offset: Real number; The amount the prop should be moved in the Y direction from the reference node. Like the X direction offset, the amount it is proportional to the distance between the reference node and the Y direction node.</li> <li>z_offset: Real number; Imagine a surface which the X and Y directions pass straight through. If looking along that surface is the forwards direction, then this field moves the prop straight up. Unlike the X direction offset and the Y direction offset, the amount for the straight up offset is measured in meters</li> <li>x_axis_rotation: Real number; The amount the prop should be rotated about the X axis</li> <li>y_axis_rotation: Real number; The amount the prop should be rotated about the Y axis</li> <li>z_axis_rotation: Real number; The amount the prop should be rotated about the 'straight up' axis</li> <li> <p>mesh_name_or_special_prop: String (may start with a keyword); The name of the Ogre3D mesh object used for the prop.     If the mesh name starts with one of the following keywords, it will have special behavior:</p> </li> <li> <ul> <li>\"dashboard\": A custom dashboard + steering wheel mesh. See below.</li> <li>\"dashboard-rh\": A custom dashboard +steering wheel mesh on right side. See below.</li> <li>\"leftmirror\": Left rear view mirror.</li> <li>\"rightmirror\": Right rear view mirror.</li> <li>\"seat\": Driver's seat: Positions the driver character and turns translucent if appropriate. Skins the prop using material <code>driversseat</code>.     Note: if multiple \"seat[2]\" props are defined, the first one is the driver's seat.</li> <li>\"seat2\": Driver's seat: Same as \"seat\" except it doesn't force the <code>driversseat</code> material.     Note: if multiple \"seat[2]\" props are defined, the first one is the driver's seat.</li> <li>\"beacon\": A beacon. Color and flare material are adjustable (default = orange)</li> <li>\"redbeacon\": A red beacon which flashes red. Fixed color and flare material.</li> <li>\"lightbar\": Police lightbar beacon, flashes red and blue (fixed). Also marks the vehicle as \"police car\" and sets up some special sounds and controls.</li> <li>\"spinprop\": Plane propeller.</li> </ul> </li> </ul> <p>Please note that if you want to stick wheel meshes on a wheel, the third node has to be taken from one of the outer segments.</p> <pre><code>props\n;ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz, mesh\n93, 95, 92,    0.50,    0.37,     0.0,   90,    0,    0, airintake.mesh\n</code></pre> <p>Note:</p> <ul> <li>The X offset and the Y offset should logically between <code>0</code> and <code>1</code>, or if the body flexes too much the prop will not stick to the body correctly.</li> <li>The coordinate system is actually really similar to 'normal coordinates', but it allows the angle between the two axes (ie. the angle between the X node, the Reference node, and the Y node) to be any value, not just <code>90</code> degrees. If that angle can be made to be <code>90</code> degrees, then the weird coordinate system will turn into 'normal coordinates'. This can be used to make prop placement easier.</li> </ul> <p>For 0.38.8 and later:</p> <p>You can set the cameramode in which the prop should be shown:</p> <pre><code>    ; -2 = all the time, -1 = external only, &gt;=0  cinecam number\n    prop_camera_mode -1\n</code></pre> <p>You can disable shadows of the last specified flexbody:</p> <pre><code>disable_flexbody_shadows\n</code></pre> <p>[ Version 0.35+ ]</p> <p>Disables shadow casting of the last prop to improve complex truck FPS.</p> <pre><code>disable_prop_shadow\n</code></pre> <p>COMPATIBILITY NOTE: Parameters #9 \"Z rotation\" and #10 \"Mesh name\" can be delimited by just space. Parser will emit a warning.</p>"},{"location":"vehicle-creation/fileformat-truck/#special-prop-dashboard","title":"Special Prop: Dashboard","text":"<p>Steering wheel [ Version 0.35+ ] Here you can see the standard reference nodes, and offset for the dashboard. Then, there is the steering wheel mesh, and its offsets.</p> <p>Parameters:</p> <ul> <li>reference_node: Node number/name; Like ordinary prop</li> </ul> <ul> <li>x_direction_node: Node number/name; Like ordinary prop</li> </ul> <ul> <li>y_direction_node: Node number/name; Like ordinary prop</li> </ul> <ul> <li>x_offset: Real number; Like ordinary prop</li> </ul> <ul> <li>y_offset: Real number; Like ordinary prop</li> </ul> <ul> <li>z_offset: Real number; Like ordinary prop</li> </ul> <ul> <li>x_axis_rotation: Real number; Like ordinary prop</li> </ul> <ul> <li>y_axis_rotation: Real number; Like ordinary prop</li> </ul> <ul> <li>z_axis_rotation: Real number; Like ordinary prop</li> </ul> <ul> <li>mesh_1: String with keyword \"dashboard\"; Mesh1: See rules below; MUST contain keyword <code>dashboard</code></li> </ul> <ul> <li>mesh_2: String; Mesh2: See rules below</li> </ul> <ul> <li>dashboard_x_offset (optional): Real number; default = <code>-0.67</code></li> </ul> <ul> <li>dashboard_y_offset (optional): Real number; default = <code>-0.61</code></li> </ul> <ul> <li>dashboard_z_offset (optional): Real number; default = <code>0.24</code></li> </ul> <ul> <li>max_turn_angle_degrees (optional): Real number; default = <code>160</code></li> </ul> <p>Examples:</p> <pre><code>; NOTE: Lines starting with ; are comments\n\n; No optional parameters: The default wheel.\n; Param mesh#1 must contain \"dashboard\" keyword and point to a valid mesh.\n; Param mesh#2 is ignored, can contain a placeholder string.\n; ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz,                 mesh#1        mesh#2 xoffset, yoffset, zoffset, rotationangle\n72, 71, 74,    0.50,     1.0,   -0.05,    0,    0,    0,      my-dashboard.mesh\n\n; -------------------------------------------------------\n; BAD EXAMPLE: Params \"Mesh#2, X, Y, Z\" only take effect if they are all present. The following line has the same effect like line above (Z offset is missing)!\n; Param mesh#1 must contain \"dashboard\" keyword and point to a valid mesh.\n; Param mesh#2 is ignored\n; Params X, Y, Z are ignored because Z is missing.\n; ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz,                 mesh#1        mesh#2 xoffset, yoffset, zoffset, rotationangle\n72, 71, 74,    0.50,     1.0,   -0.05,    0,    0,    0,      my-dashboard.mesh           ~~~   -0.67,   -0.61,    \n\n; -------------------------------------------------------\n; Params \"X, Y, Z\" are present: an example for a custom one with 720 degree:\n; Param mesh#1 must contain \"dashboard\" keyword and point to a valid mesh.\n; Param mesh#2 must contain a mesh name.\n; ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz,                 mesh#1        mesh#2 xoffset, yoffset, zoffset, rotationangle \n72, 71, 74,    0.50,     1.0,   -0.05,    0,    0,    0,      my-dashboard.mesh my-wheel.mesh   -0.67,   -0.51,    0.14,           720\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#special-prop-beacon","title":"Special Prop: Beacon","text":"<p>Change the beacon's color and flare material [ Version 0.35+ ]</p> <p>If you want to use you own mesh as beacon it should be named beacon-&lt;somename&gt;.mesh, e.g. <code>beacon-blue.mesh</code></p> <p>The only difference between this and a standard beacon is the flarematerialname e.g. <code>tracks/redbeaconflare</code> which sets the color of the light, and the RGB value of the flash (The last three numbers), that sets the color of the light that is reflected from objects when the beacon lights them.</p> <p>NOTE: All special parameters are required, otherwise none of them will take effect.</p> <p>Parameters:</p> <ul> <li>reference_node: Node number/name; Like ordinary prop</li> </ul> <ul> <li>x_direction_node: Node number/name; Like ordinary prop</li> </ul> <ul> <li>y_direction_node: Node number/name; Like ordinary prop</li> </ul> <ul> <li>x_offset: Real number; Like ordinary prop</li> </ul> <ul> <li>y_offset: Real number; Like ordinary prop</li> </ul> <ul> <li>z_offset: Real number; Like ordinary prop</li> </ul> <ul> <li>x_axis_rotation: Real number; Like ordinary prop</li> </ul> <ul> <li>y_axis_rotation: Real number; Like ordinary prop</li> </ul> <ul> <li>z_axis_rotation: Real number; Like ordinary prop</li> </ul> <ul> <li>beacon_mesh_name: String with keyword \"beacon\"; The beacon mesh; MUST contain keyword <code>beacon</code></li> </ul> <ul> <li>flare_material_name: String; Material to use for the flare</li> </ul> <ul> <li>flare_color_red: Real number (<code>0</code> - <code>1</code>); Intensity (<code>0</code> = full dark, <code>1</code> = full bright) . This color will be mixed with color of the flare texture. If the texture is white, all coloring is specified this way.</li> </ul> <ul> <li>flare_color_green: Real number (<code>0 - 1</code>); Intensity (<code>0</code> = full dark, <code>1</code> = full bright). This color will be mixed with color of the flare texture. If the texture is white, all coloring is specified this way.</li> </ul> <ul> <li>flare_color_blue: Real number (<code>0</code> - <code>1</code>); Intensity (<code>0</code> = full dark, <code>1</code> = full bright). This color will be mixed with color of the flare texture. If the texture is white, all coloring is specified this way.</li> </ul> <p>Examples:</p> <pre><code>; NOTE: Lines starting with ; are comments\n\n;ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz,        mesh     flareMaterialName    colorRed, colorGreen, colorBlue\n; the default beacon would be:\n19, 73, 16,     0.1,     0.1,       0,   90,    0,    0, beacon.mesh    tracks/beaconflare           1,        0.5,         0\n; the red beacon would be:\n19, 73, 16,     0.1,     0.1,       0,   90,    0,    0, beacon.mesh tracks/redbeaconflare           1,          0,         0\n; example for a custom beacon:\n19, 73, 16,     0.1,     0.1,       0,   90,    0,    0, beacon.mesh     tracks/greenflare           0,          1,         0\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#add_animation","title":"Add_animation","text":"<p>This directive adds an animation to last defined prop. Up to 10 rotations and offsets depending on different sources can be used on one prop.</p> <p>Parameters:</p> <ul> <li>Ratio: Real number; A coefficient for the animation, prop degree if used with mode: rotation and propoffset if used with*' mode: offset*'.</li> <li>Lower limit: Real number; Empty value = 0; The lower limit for the animation, remember to use a negative value when source can be negative (as in wheel steering.) Use 0 for both options to get default limits (Full circle rotation ( -180/+180\u00b0) or -10/+10 for offsets. Limits always apply to the props' spawning position.</li> <li>Upper limit: Real number; Empty value = 0; Upper Limiter for movement, remember to use a positive value when source can be negative (as in wheel steering.). Use 0 for both options to get default limits ( Full circle rotation (-180/+180\u00b0) or -10/+10 for offsets. Limits always apply to the props' spawning position.</li> <li>(Attributes): { Key: options } pairs; Parameter consisting of name, colon, and | - delimited list of options.<ul> <li><code>source:</code> Source type(s) joined with |; A list of sources to use, it is recommended to use only 1 per add_animation line, though multiple sources are possible too.</li> <li><code>mode:</code> Mode type(s) joined with |; A list of modes to use, multiple modes are valid</li> <li><code>event:</code> Key event string; An optional input, only needed for source: event. It determines the keypress event to catch for the animation</li> <li><code>link:</code> Dashboard source type; An optional input, only needed for source: dashboard. It determines the dashboard source to catch for the animation</li> <li><code>autoanimate</code> (optional): \"autoanimate\" keyword; rotation or offset is applied as long as source is not 0. Useful for driveshafts, fans, etc.</li> </ul> </li> <li>\"noflip\" (optional): \"noflip\" keyword; a prop will flip to the opposite limit when a limit is reached, with this mode it just stops at -   \"bounce\" (optional): \"bounce\" keyword; a prop will flip to the opposite limit when a limit is reached, with this mode it just rebound at the set limit. Only useful with mode: noflip</li> <li>\"eventlock\" (optional): \"eventlock\" keyword; will lock a toggled event in its current status, useful for switches and status levers. Only works with mode:event and a correct defined event:</li> </ul> <p>source:</p> <ul> <li><code>airspeed</code> - This prop animates with the actual speed (not speedometer indicated speed) for any vehicle.</li> <li><code>vvi</code> - This prop animates with the vehicle's vertical velocity.</li> <li><code>altimeter100k</code> - This prop animates with the vehicle's altitude up to 100,000 feet.</li> <li><code>altimeter10k</code> - This prop animates with the vehicle's altitude up to 10,000 feet, at which point it will revert back to its original length.</li> <li><code>altimeter1k</code> - This prop animates with the vehicle's altitude up to 1,000 feet, at which point it will revert back to its original length. These three animators can be used to create altimeters with three needles or similar objects/</li> <li><code>aoa</code> - This prop animates with the dashboard's angle of attack.</li> <li><code>flap</code> - This prop animates with the flap setting on the vehicle.</li> <li><code>airbrake</code> - This prop animates with the airbrake setting on the vehicle.</li> <li><code>roll</code> - This prop animates with the vehicle's roll. It will flip at <code>180</code> degrees roll to <code>-180</code> degrees roll. This option can be used for an automatic trim feature.</li> <li><code>pitch</code> - This prop animates with the vehicle's pitch. It will flip back at <code>180</code> degrees pitch to <code>-180</code> degrees pitch. This option can be used for an automatic trim feature.</li> <li><code>throttle1</code> - This prop animates with the throttle setting of an aircraft's first engine. This option can be used for thruster mechanics. Valid sources include <code>throttle1</code>, <code>throttle2</code>, etc. etc. up to <code>throttle8</code>.</li> <li><code>rpm1</code> - This prop animates with the RPM of an aircraft's first engine. This option can be used for thruster mechanics. Valid sources include <code>rpm1</code>, <code>rpm2</code>, etc. etc. up to <code>rpm8</code>.</li> <li><code>aerotorq1</code> - This prop animates with the torque of an aircraft's first engine. Note that this only works for propeller engines, because torque is not applicable to jets. Valid sources include <code>aerotorq1</code>, <code>aerotorq2</code>, etc. etc. up to <code>aerotorq8</code>.</li> <li><code>aeropit1</code> - This prop animates with the pitch of an aircraft's first engine. Note that this only makes sense with propeller engines, pitch is not applicable to jets. Valid sources include <code>aeropit1</code>, <code>aeropit2</code>, etc. etc. up to <code>aerotorq8</code>.</li> <li><code>aerostatus1</code> - This prop animates with the On/Off/Fire status of an aircraft's first engine. Valid sources include <code>aerostatus1</code>, <code>aerostatus2</code>, etc. etc. up to <code>aerostatus8</code>.</li> <li><code>brakes</code> - This prop animates with the vehicle's brake status.</li> <li><code>accel</code> - This prop animates with the vehicle's accelerator status.</li> <li><code>clutch</code> - This prop animates with the vehicle's clutch status.</li> <li><code>speedo</code> - This prop animates with the speedometer indication. It scales with the guisetting speedometer. (It is best to use it even if there is no custom overlay dashboard; it simplifies the adjustment a lot.)</li> <li><code>tacho</code> - This prop animates with the vehicle's RPM. It scales with guisetting tachometer. (It is best use it even if there is no custom overlay dashboard; simplifies the adjustment a lot.)</li> <li><code>turbo</code> - This prop animates with the vehicle's turbocharger PSI.</li> <li><code>parking</code> - This prop animates with the vehicle's parking brake status.</li> <li><code>gear#</code> - This prop animates with the specified gear. Where <code>#</code> is the gear number (\u00bd/3 etc).</li> <li><code>gearneutral</code> - This prop animates with the vehicle's neutral gear. </li> <li><code>gearreverse</code> - This prop animates with the vehicle's reverse gear. </li> <li><code>shifterman1</code> - H-shift left/right ( Reverse | 1-2 | 3-4 | 5-6...11-12 as positions, scales with engine settings (maxGear)</li> <li><code>shifterman2</code> - H-shift forth/back animator Reverse-2-6-8-10-12 | 1-3-5-7-9-11 as positions</li> <li><code>sequential</code> - Sequential shift ( i.e for tiptronic or wheel shift pedals), can be used for commands too (no settable limits then)</li> <li><code>shifterlin</code> - For auto transmission animations or gearselect indicators (special limits rules apply for this one, see below!)</li> <li><code>autoshifterlin</code> - Same as <code>shifterlin</code> except it allows for D/N/R positions as forward gears are clamped to 1.</li> <li><code>signalstalk</code> - For turn signal stalk animations.</li> <li><code>torque</code> - Current engine torque.</li> <li><code>heading</code> - This prop animates with the current heading of the truck.</li> <li><code>difflock</code> - This prop animates with the difflock status of the truck (It only works when differentials are present in the truck.)</li> <li><code>rudderboat</code> - This prop animates with the steering hydro on boats.</li> <li><code>throttleboat</code>- This prop animates with the throttle status on boats.</li> <li><code>steeringwheel</code> - This prop animates with the steering status for trucks.</li> <li><code>aileron</code> - This prop animates with the aileron status for airplanes.</li> <li><code>elevator</code> - This prop animates with the elevator status for airplanes.</li> <li><code>rudderair</code> - This prop animates with the rudder status for airplanes.</li> <li><code>dashboard</code> - This prop animates with the status of a GUI element (engine ignition, parking brake etc). Requires <code>link:</code> data link argument, see below.</li> <li><code>permanent</code> - This is a permanent source, which is always active when you are in the truck.</li> <li><code>event</code> - A source triggered by a keypress, needs exactly one defined event.</li> </ul> <p>Specials: Limits do not apply for mode:sequential. In this case the options are the F-Keynumbers of the command-movement you want to catch. Option 0, 0 with mode:sequential provides a shift_up/shift_down animation for a sequential shifter. Look into the Examples.</p> <p>mode:</p> <ul> <li><code>x-rotation</code> - Rotate around the x-axis, in some cases special rules apply here see below (gimbal lock)</li> <li><code>y-rotation</code> - Rotate around the y-axis, in some cases special rules apply here see below (gimbal lock)</li> <li><code>y-rotation</code> - Rotate around the y-axis, in some cases special rules apply here see below (gimbal lock)</li> <li><code>x-offset</code> - Offset along the x-axis</li> <li><code>y-offset</code> - Offset along the y-axis</li> <li><code>z-offset</code> - Offset along the z-axis</li> </ul> <p>event:</p> <ul> <li>rorkeypressevent - All RoR keypress events. (A list of valid RoR events.)</li> </ul> <p>link:</p> <ul> <li>dashboardsource - Any input source from the dashboard system.</li> </ul> <p>How to use:</p> <p>It's best to test is a prop that has no rotations or offsets set on a node triangle like this:</p> <pre><code>n1, 0, 1, 0\nn2, 0, 1, 1\nn3, 0, 0, 0\n</code></pre> <p>Add the add_animation line AFTER the prop in your prop section that you want to animate:</p> <p>Sources</p> <pre><code>add_animation 200, 0, 0, source: steeringwheel, mode: x-rotation\n;Prop now animated by steeringwheel input.\n;Refer to the '''source:''' list above for the different sources avail.\n\nadd_animation 10, 1, 2, source: sequential, mode: y-rotation\nadd_animation 10, 3, 4, source: sequential, mode: x-rotation\n;a joystick animation related to F1-F4 ( look below for the GIMBAL LOCK issue!)\n\n\nadd_animation 0.02, 1, 0, source: sequential, mode: y-offset\n;button animation getting pressed on F1\n\nadd_animation 10, 0, 0, source: sequential, mode: y-offset\n;sequential shifter reacting to shift up/down\n</code></pre> <p>Modes</p> <pre><code>add_animation 145, 0, 0, source: airspeed, mode: x-rotation\n;Airspeed indicator needle rotating x axis\n\nadd_animation 145, 0, 0, source: airspeed, mode: y-rotation\n;Airspeed indicator needle rotating y axis\n\nadd_animation 145, 0, 0, source: airspeed, mode: z-offset\n;Airspeed indicator sliding z axis\n\nadd_animation -90, 0, 0, source: pitch , mode: y-rotation\nadd_animation 180, 0, 0, source: roll, mode:x-rotation\n;virtual attitude indicator (artificial horizon)( look below for the GIMBAL LOCK issue!)\n</code></pre> <p>Events</p> <pre><code>add_animation 45, 0, 0, source: event, mode: x-rotation, event: TRUCK_TOGGLE_CONTACT\n;Prop will rotate 45\u00b0 x-axis when the starter key is pressed.\n;There is only one event allowed with '''mode:event'''\n\nadd_animation 45, 0, 0, source:event, mode:x-rotation, eventlock, event:TRUCK_TOGGLE_CONTACT\nadd_animation 45, 0, 0, source:event, mode:x-rotation, event:TRUCK_STARTER\n;This rotates the prop related to ignition status and additional 45\u00b0 when the starter is pressed\n;It is valid to stack up to 10 animations of any kind to one single prop.\n</code></pre> <p>Autoanimation</p> <pre><code>add_animation 0.005, 0, 0, source: permanent, mode: x-offset, autoanimate\n;It will animate the related prop on the x-offset\n\nadd_animation -0.005, 0, 0, source: permanent, mode: x-offset, autoanimate\n;Moving direction changed.\n\nadd_animation -0.005, 0, 0, source: permanent, mode: x-offset, autoanimate, noflip\n;Will stop now at the limit and not flip anymore. So now it just moves one direction and thats it.\n\nadd_animation -0.005, 0, 0, source: permanent, mode: x-offset, autoanimate, noflip, bounce\n;Will start moving left / right itself just according to the default limits\n\nadd_animation -0.005, -5, 20, source: permanent, mode: x-offset, autoanimate, noflip, bounce\n;Will start moving left / right itself just according to the user custom limits.\n;Keep in mind: for rotation and offset, first limits needs to be &lt;=0  second &gt;=0\n;Limits are like prop offsets for offsets, default ( opt1=opt2=0) limit is +-10\n\nadd_animation -0.005, 15, 20, source: permanent, mode: x-offset, autoanimate, noflip, bounce\n;The prop will jump instantly at start and bounce between that limits, which might be a bit confusing.\n\nadd_animation -0.005, 15, 20, source: permanent, mode: x-rotation, autoanimate\n;Rotating instead of sliding. All the settings for offsets can be used with rotation too.\n;Limits are in degree for rotations, default ( opt1=opt2=0) limit is +-180\u00b0 ( a full circle)\n</code></pre> <p>GIMBAL LOCK To avoid axis corruption when rotating props: - Always place your prop with a y-rotation of <code>0</code> or <code>180\u00b0</code>. If you need to align your prop in another way, rotate the mesh in your mesh-editor! </p> <p>To avoid axis corruption when rotating multiple props: - Use only the x and y axis together, skip z. If you need 3 axis rotation, do the z-axis with a n/b-rotator as the base for your prop definition nodes. Gimbal lock</p>"},{"location":"vehicle-creation/fileformat-truck/#flexbodies","title":"Flexbodies","text":"<p>Flexbodies are pretty much the same as props. The only difference between them is that flexbodies deform.</p> <p>You can declare several flexbodies. Each must be composed of the two lines (prop-like line and forset line).</p>"},{"location":"vehicle-creation/fileformat-truck/#sub-section-prop-like","title":"(sub-section) \"Prop-like\"","text":"<p>The first line of this section is exactly the same format as on the props section. Parameters:</p> <ul> <li>reference_node: Node number/name; The base node, used to define the coordinate system.</li> <li>x_direction_node: Node number/name; The node that defines the X direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>y_direction_node: Node number/name; The node that defines the Y direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>x_offset: Real number &lt;0 - 1&gt;; The amount the prop should be moved in the X direction from the reference_node.</li> <li>y_offset: Real number &lt;0 - 1&gt;; The amount the prop should be moved in the Y direction from the reference_node.</li> <li>z_offset_meters: Real number; Moves the flexbody \"straight up\". Unlike the x_offset and the y_offset, the distance is measured in meters.</li> <li>x_axis_rotation: Real number; The amount the flexbody should be rotated about the X axis</li> <li>y_axis_rotation: Real number; The amount the flexbody should be rotated about the Y axis</li> <li>z_axis_rotation: Real number; The amount the flexbody should be rotated about the 'straight up' axis</li> <li>mesh_name: String; The name of the Ogre3D mesh object used for the flexbody.</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#sub-directive-forset","title":"(sub-directive) forset","text":"<p>As next, a line beginning with the word forset follows. Behind the word forset, you declare all nodes used for the deformation of the mesh (ranges are supported).</p> <ul> <li>node_list: List of node{number/name/range}; List of nodes to use for deforming the flexbody. These nodes should be outer nodes of the vehicle, those that are close to the mesh.</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#sub-directive-forvert","title":"(sub-directive) forvert","text":"<p>An additional line added after <code>forset</code> enabling manual override of node bindings for specified vertices. The specified nodes do not need to be in <code>forset</code> node list. Processing works the same as <code>forset</code>: the game calculates the offset between the nodes and the vertex and maintains it. </p> <ul> <li>reference_node: Node number/name; The base node, used to define the coordinate system</li> <li>x_direction_node: Node number/name; The node that defines the X direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>y_direction_node: Node number/name; The node that defines the Y direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>vertex_list: List of vertices; List of mesh vertices to use for deforming the flexbody, ranges are supported. Vertex numbers can be viewed in-game using the \"Flexbody debug\" tool from Top Menubar -&gt; Tools.</li> </ul> <p>Note</p> <p>The <code>verts:</code> intermediate line before the vertex list is required!</p> <pre><code>forvert 25, 0, 2, verts: 70-71, 28\n</code></pre> <p>Notes about backwards compatibility:</p> <ul> <li>If you use a node range [A-B], RoR will tolerate if node B doesn't exist (warning will be emitted).</li> <li>If you enter multiple commas <code>,,</code> between forset entries, parser will ignore it silently.</li> <li>If there's a comma after last element, parser will ignore it silently.</li> <li>Accepted separators between keyword \"forset\" and node ranges are: whitespace, comma <code>,</code>, colon <code>:</code>, or nothing at all (lines like <code>forset12,34,56</code> will be correctly evaluated as <code>forset 12, 34, 56</code>) for backwards compatibility.</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#sub-directive-disable_flexbody_shadow","title":"(sub-directive) disable_flexbody_shadow","text":"<p>(optional) [ Version 0.38.8+ ]</p> <p>No parameters. Disables shadow casting of the last flexbody to improve complex truck FPS.</p>"},{"location":"vehicle-creation/fileformat-truck/#sub-directive-flexbody_camera_mode","title":"(sub-directive) flexbody_camera_mode","text":"<p>(optional) [ Version 0.38.8+ ]</p> <p>Sets the cameramode in which the flexbody should be shown:</p> <ul> <li>mode: Decimal number default = <code>-2</code> (always visible); Flexbody visibility: <code>-2</code> = all the time (default), <code>-1</code> = external only, &gt;=<code>0</code> cinecam number</li> </ul> <pre><code>flexbodies\n;ref,  x,  y, offsetx, offsety, offsetz, rotx, roty, rotz, mesh\n3,  4, 19,       0,       0,   0.027,   90,    0,   90, dodgecharger.mesh\nforset 0-16, 23-24, 31, 54-125\n\ndisable_flexbody_shadow\n\n; -2 = all the time, -1 = external only, &gt;=0  cinecam number\nflexbody_camera_mode -1\n</code></pre> <p>Note: It's important to keep an eye on the number of vertices of your meshes. Not that there is a hard limit, but beyond <code>10000</code> vertices there could be a noticeable slowdown. As reference: the Dodge Charger mesh is about <code>4000</code> vertices.</p>"},{"location":"vehicle-creation/fileformat-truck/#submesh","title":"Submesh","text":"<p>Defines the collision surface of the truck; see required subsection <code>cab</code> and option <code>c</code></p> <p>It may also generate textured mesh to visualize the truck; see optional subsection <code>texcoords</code></p>"},{"location":"vehicle-creation/fileformat-truck/#sub-section-cab","title":"(sub-section) cab","text":"<p>Specifies a series of triangles. Order of nodes defines orientation - the side with counterclockwise winding will be 'front' (or 'positive'), the other 'rear' (or 'negative'). If <code>texcoords</code> are used, only the 'front' side will be visible, the 'rear' side will be see-through (or black if you use <code>backmesh</code>).</p> <ul> <li>node_1: Node number; First point of collision triangle.</li> <li>node_2: Node number; Second point of collision triangle.</li> <li>node_2: Node number; Third point of collision triangle.</li> <li>options (optional): String<ul> <li><code>n</code>: Placeholder. Does nothing.</li> <li><code>c</code>: This triangle will be a contact triangle that can contact with contacters nodes. Deprecated aliases: <code>p</code>, <code>u</code>.</li> <li><code>b</code>: This triangle will be part of a buoyant hull. Deprecated aliases: <code>D</code>, <code>F</code>, <code>S</code>.</li> <li><code>s</code>: This triangle will be part of a buoyant hull, mouse dragging will be disabled.</li> <li><code>r</code>: This triangle will be part of a buoyant hull, mouse dragging only.</li> </ul> </li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#sub-section-texcoords","title":"(sub-section) texcoords","text":"<p>Specifies texture coordinates (also called 'UV coordinates') for <code>cab</code> triangles. Only triangles with all 3 texcoords are displayed. The texture is specified in <code>globals</code> section.</p> <ul> <li>node: Node number; Node representing a vertex in the resulting geometry.</li> <li>u: Real number 0.0 - 1.0; The U texture coordinate: Position of this vertex on the X axis of the image.</li> <li>v: Real number 0.0 - 1.0; The V texture coordinate: Position of this vertex on the Y axis of the image.</li> </ul>"},{"location":"vehicle-creation/fileformat-truck/#sub-directive-backmesh","title":"(sub-directive) backmesh","text":"<p>No params. If added, the triangles' backsides (see <code>texcoords</code>) will be black instead of see-through.</p> <pre><code>;cabin top\nsubmesh\ntexcoords\n75, 0.172, 0.334\n76, 0.172, 0.665\n77, 0.291, 0.334\n78, 0.291, 0.665\ncab\n75,76,78\n75,78,77\n\n;cabin back\nsubmesh\ntexcoords\n77, 0.291, 0.334\n78, 0.291, 0.665\n53, 0.422, 0.334\n54, 0.422, 0.665\n6, 0.422, 0.334\n8, 0.422, 0.665\ncab\n77,78,54\n77,54,53\n53,54,8,c\n53,8,6,c\nbackmesh\n</code></pre> <p>Example of invisible collision submesh for a flexbody vehicle (<code>texcoords</code> section is not used):</p> <pre><code>;front bumper\nsubmesh\ncab\n126,121,127,c\n132,126,127,c\n133,132,127,c\n125,120,121,c\n126,125,121,c\n...\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#set_collision_range","title":"set_collision_range","text":"<p>set_collision_range is <code>0.02</code> as default value, and defines the maximum range (<code>2</code> cm) around a truck's collision triangles that collisions start to happen. </p> <p>By increasing it, for example to <code>0.04</code>, penetrations become a lot more difficult.</p> <pre><code>set_collision_range 0.02\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#submesh_groundmodel","title":"submesh_groundmodel","text":"<p>Specifies groundmodel should be used for the trucks contactive submeshes. It has module-wide effect; it only needs to be defined once per file.</p> <p>Parameter:</p> <ul> <li>groundmodel_name: String; default = concrete; The groundmodel to use. See also Groundmodel Description File</li> </ul> <pre><code>;submesh_groundmodel groundModelName\nsubmesh_groundmodel rock\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#exhausts","title":"Exhausts","text":"<p>This replaces the x or y node options. The factor parameter should be \"1\", because it is not used yet. The material should be \"default\" if no user-created one is made. (You could create your own particle emitter based on the default one: data/smoke.particle). Remember: The direction node is behind the ref node!</p> <pre><code>exhausts\n;ref node, direction node, factor material\n103,             99,      1 default\n105,             98,      1 default\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#sections","title":"Sections","text":"<p>This section allows you to have different options selectable from the vehicle spawner menu. Almost any section (<code>managedmaterials</code>, <code>engine</code>, <code>props</code>, <code>flexbodies</code>, etc) can be used with this. </p> <pre><code>sectionconfig 0 lowspeed\nsectionconfig 0 highspeed\n\nsection 0 lowspeed\nengine\n1000.000000, 1500.000000, 5000.000000, 2.000000, 10.850000, 9.520000, 6.560000, -1.000000\nend_section\nsection 0 highspeed\nengine\n1000.000000, 15000.000000, 5000.000000, 2.000000, 10.850000, 9.520000, 6.560000, -1.000000\nend_section\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#guisettings","title":"Guisettings","text":"<p>By using this section you can set some parameters of the Truck GUI. This can be helpful if you're building a vehicle that has a relatively higher or lower speed than average.</p> <p>Format: keyword  value <ul> <li>dashboard: [ Version 0.38.66+ ] Custom HUD layout that should be used for this truck. You can use multiple lines.</li> <li>texturedashboard: [ Version 0.38.66+ ] Custom HUD layout that should be used for the RTT for this truck. You can use multiple lines. RTT means Real Time-generated Texture, you can use it as material for your custom dashboard mesh.</li> <li>interactiveOverviewMap: [ Version 0.36+ ]; off / simple / zoom - Enables/disables the activation of the interactive map for the truck.</li> <li>shifterAnimTime: Sets how much a shifter prop animation should be smoothed. Default <code>0.4</code>, use <code>0.0</code> to disable.</li> </ul> <p>Legacy parameters (not affecting the v0.4 custom HUD system). Will be restored or removed soon.</p> <ul> <li>tachoMaterial: String; default = tracks/Tacho; The name of the tachometer face material. (must be defined in a material file).</li> <li>speedoMaterial: String; default = tracks/Speedo; The name of the speedometer face material. (must be defined in a material file).</li> <li>speedoMax: Positive decimal number; default = 140; The highest number that is on the speedometer (kph). (values 10-32000) Speedometer needle goes from -140\u00b0 to 140\u00b0.</li> <li>useMaxRPM: 0 or 1; default = 0; [Yes/No] Whether or not to use the max rpm (in the engine section) as the highest number on the tachometer. Note that your actual max rpm is MaxRPM+20%. Do not include the 20% on your tachometer or it will be inaccurate. Tachometer needle is from -120\u00b0 to 120\u00b0.</li> <li>helpMaterial: String; default = tracks/black; The help material (a picture that shows command instructions). NOTE: This value overrides settings from section \"help\"</li> </ul> <p>Example:</p> <pre><code>guisettings\ninteractiveOverviewMap zoom\ndashboard dash_test.layout\ndashboard dash_test2.layout\ntexturedashboard dashGauges.layout\n; legacy settings\ntachoMaterial tracks/MyTacho\nspeedoMaterial tracks/MySpeedo\nspeedoMax 80\nuseMaxRPM 1\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#set_skeleton_settings","title":"Set_skeleton_settings","text":"<p>Inline-section; modifies the skeleton display (activated by pressing <code>K</code>) of the truck. Has module-wide effect; only needs to be issued once per file.</p> <p>Parameters:</p> <ul> <li> <p>visibility_range_in_meters (nullable): Real number; default = 150; Empty value = -1</p> </li> <li> <p>beam_thickness_in_meters (optional) (nullable): Real number; default = 0.01 (1 centimeter); Empty value = -1</p> </li> </ul> <p>Examples:</p> <p>Beams visible from <code>150</code> meters away, beams are <code>1</code> centimeter in width (default values): <pre><code>set_skeleton_settings 150, 0.01\n</code></pre></p> <p>2km sight range with <code>9</code> centimeter wide beams:</p> <pre><code>set_skeleton_settings 2000, 0.09\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#videocamera","title":"Videocamera","text":"<p>The videocamera section describes how to set up multiple mirrors and extra cameras like a backup-camera for a truck or hook-camera for a crane. </p> <p>Both, cameras and mirrors, use the same technique, cameras just add a reflective calculation and flip (mirror) the image generated.</p> <p>Parameters:</p> <ul> <li>reference_node: Node number/name; The node where the camera is placed. This is your reference node. Any existing node## is valid.</li> <li>left_node: Node number/name; The Z-reference of the camera, should be exactly right of the reference node when the camera points forward to the trucks front. Any existing node## is valid.</li> <li>bottom_node: Node number/name; The Y-reference of the camera, should be exactly below the reference node when the camera points forward to the trucks front. Any existing node## is valid.</li> <li>alt_reference_node (nullable): Node number/name; Empty value = -1; The alternative cam position node. It replaces the reference node for position but not for orientation. Good to setup mirrors and cams with just one extra node to an existing truck. Important for mirrors, read below! Any existing node## is valid.</li> <li>alt_orientation_node (nullable): Node number/name; Empty value = -1; The alternative camera orientation node. If set, it skips any camera orientation calculation and makes the cam permanent look at the set node. Good for hooks moving up and down. Any existing node## is valid.</li> <li>offset_x (nullable): Real number; Empty value = 0; X-offset from reference or alternative cam position node. Works like props offsets, relates to the plane of Node 1-3 as frustum and moves the cam proportional forth and back on its roll-axis.</li> <li>offset_y (nullable): Real number; Empty value = 0; Y-offset from reference or alternative cam position node. Works like props offsets, relates to the plane of Node 1-3 as frustum and moves the cam up and down in meters on its rotation-axis.</li> <li>offset_z (nullable): Real number; Empty value = 0; Z-offset from reference or alternative cam position node. Works like props offsets, relates to the plane of Node 1-3 as frustum and moves the cam proportional left and right on its pitch-axis.</li> <li>rotation_x (nullable): Real number; Empty value = 0; Optional camera X-rotation. Works like props rotation, relates to the plane of Node 1-3 as frustum. Adjust camera orientation without moving nodes.</li> <li>rotation_y (nullable): Real number; Empty value = 0; Optional camera Y-rotation. Works like props rotation, relates to the plane of Node 1-3 as frustum. Adjust camera orientation without moving nodes. Avoid the gimbal lock, using Y-rotation is not recommended together with other axis.</li> <li>rotation_z (nullable): Real number; Empty value = 0; Optional camera Z-rotation. Works like props rotation, relates to the plane of Node 1-3 as frustum. Adjust camera orientation without moving nodes.</li> <li>fov: Real number, valid: 0.01 -179.9; Camera field of view.</li> <li>texture_width: Positive decimal, must be power of 2; X-resolution of the texture generated. Valid: any value^2 (POW) (see below for explanation), recommended maximum <code>256</code>, watch your FPS.</li> <li>texture_height: Positive decimal, must be power of 2; Y-resolution of the texture generated. Valid: any value^2 (POW) (see below for explanation), recommended maximum <code>256</code>, watch your FPS.</li> <li>min_clip_distance: Real number; Minimum distance in meters of objects to be rendered Valid: <code>0.1</code> - value&lt;maxclipdistance. Useful to blend out things that should not be displayed. Good to tune FPS.</li> <li>max_clip_distance: Real number Maximum distance in meters of objects to be rendered Valid: value&gt;minclipdistance - <code>32000</code>. Useful to blend out things that should not be displayed. Watch your FPS.</li> <li>camera_role: Decimal number; Role aka function of the camera:  <code>-1</code> == Camera  <code>0</code> == Tracker camera (requires an alternative camera orientation node)  <code>1</code> == Mirrors  <code>2</code> == Same as mirrors (<code>1</code>) but without flipping the texture horizontally (expects texcoords to be already flipped in the mesh).</li> <li>camera_mode: Decimal number, use -2; Camera switchoff state. Not supported yet, put a <code>-2</code> in here.</li> <li>material: String; The material the generated textured should be displayed on. Requires a prop (mesh) using this material to get any visual results.</li> <li>name: [ Version 0.38.63+ ] String; Specify a name for this videocamera that might be used for the title of the renderwindow.</li> </ul> <p>Important:</p> <ul> <li>Videocameras only work with props.</li> <li>Place the videocamera section before loading any meshes that should display the material</li> <li>Its recommended that mirrors always use the alternative cam position node placed precise in the center of the mirror-mesh (the reflecting part) of the related mirror. Otherwise, reflective calculation might be wrong. Mirrors can use y-axis rotation presets for easy adjustment, to rotate x/z axis move the reference nodes accordingly to avoid gimbal lock, offset preset work too, but are not recommended to use.</li> <li>Wrong or not existing materials might make RoR crash while parsing the truck. Be accurate !</li> <li><code>.material</code> file material definition is strictly necessary and needs to match the material in the truck-file line. Material definition features a fall-back texture when camera is not active or not set. Just add a texture unit with a texture definition, it will be replaced with the generated texture when camera is setup correct and active automatically.</li> <li>Do NOT the set alternative camera orientation node to the same node## then your reference node or ( if used ) the alternative cam position node. Makes no sense and might crash.</li> </ul> <p>Samples:</p> <pre><code>videocamera\n;nref, nx, ny, ncam, nlookat,    offx,  offy,  offz, rotx, roty, rotz, fov, texX, texY, minclip, maxclip, cRole, cMode, material\n; camera with no offsets and rotations\n43, 42,  1,   -1,      -1,    0.00,  0.00,  0.00,    0,    0,    0,  70,  256,  256,    0.10,    2500,    -1,    -2, video-camera1\n\n; camera with no offsets and rotations placed on an alternative camNode\n43, 42,  1,  185,      -1,    0.00,  0.00,  0.00,    0,    0,    0,  70,  256,  256,    0.10,    2500,    -1,    -2, video-camera1\n\n; tracker camera with no offsets and rotations placed on an alternative camNode\n43, 42,  1,  185,     363,    0.00,  0.00,  0.00,    0,    0,    0,  70,  256,  256,    0.10,    2500,     0,    -2, video-camera1\n\n; camera  with offsets and rotations\n42, 43,  1,  362,      -1,   -3.22,  1.20,  0.00,  -45,    0,    0, 100,  128,  128,    0.01,    2500,    -1,    -2, video-camera1\n\n; camera  with offsets and rotations placed on an alternative camNode (offsets apply from here)\n42, 43,  1,  362,      -1,   -3.22,  1.20,  0.00,  -45,    0,    0, 100,  128,  128,    0.01,    2500,    -1,    -2, video-camera1\n\n; mirror no offsets and rotations placed on an alternative camNode\n43, 42,  1,  185,      -1,    0.00,  0.00,  0.00,    0,    0,    0,  70,  256,  256,    0.10,    2500,     1,    -2, video-camera1\n</code></pre> <p>Example mirror setup from the 1988 Audi UR-Quattro:</p> <pre><code>videocamera\n;nref, nx, ny, ncam, nlookat,    offx,  offy,  offz, rotx, roty, rotz, fov, texX, texY, minclip, maxclip, cRole, cMode, material\n;left\n317,308,315,  318,     -1,   0,   2,   0,   0,   10,   0,  40,  400,  400,     0.1,    6000,     1,    -2, Quattro_LM \n</code></pre> <p>UV Mapped mirror mesh:</p> <p></p> <p>You can use this texture to help UV map your mirror mesh:</p> <p></p> <p><code>.material</code> file:</p> <pre><code>material Quattro_LM\n {\n    technique\n    {\n       pass\n        {\n          texture_unit\n          {\n            texture vidscreen-disabled.png\n          }\n       }   \n    }\n}\n</code></pre> <p>Node position reference:</p> <p></p> <p>Make sure <code>vidscreen-disabled.png</code> is in your truck zip. Use your own texture and material names to avoid conflicts!</p> <p>You can enable videocamera debug in settings (Diagnostic tab) which activates helpful meshes which show position and orientation of the video-cameras set up:</p> <p></p> <p>Notes:</p> <ul> <li>Any value <code>2^n</code> (POW) means that you have to choose a number out of the following numbers:</li> </ul> <pre><code>    2^0 = 1\n    2^1 = 2\n    2^2 = 4\n    2^3 = 8\n    2^4 = 16\n    2^5 = 32\n    2^6 = 64\n    2^7 = 128\n    2^8 = 256\n    2^9 = 512\n    2^10 = 1024\n    2^11 = 2048\n    2^12 = 4096\n    2^13 = 8192\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#extcamera","title":"Extcamera","text":"<p>The extcamera command allows you to change the 3<sup>rd</sup> person camera behavior.</p> <p>Currently, there are three modes you can use:</p> <p>The classic mode (also default if you do not use this command)</p> <pre><code>extcamera classic\n</code></pre> <p>The cinecam mode: it will rotate the camera around the cinecamera</p> <pre><code>extcamera cinecam\n</code></pre> <p>The node mode: it will rotate the camera around a specified node</p> <pre><code>;extcamera node &lt;nodeid&gt;\n;for example:\nextcamera node 123\n</code></pre> <p>The final two modes are useful for a vehicle with detaching parts, so the camera is fixed in the view of the main vehicle.</p> <p>Note</p> <p>You can manually set the extcamera by middle-clicking a node. Reset by middle-clicking an area away from the vehicle. </p>"},{"location":"vehicle-creation/fileformat-truck/#camerarail","title":"Camerarail","text":"<p>In [ Version 0.39.7+ ] and above you can add a camerarail section to your beam objects. The camerarail generates a cSpline on base of the given nodes, on which you can move a camera. A new camera mode will be added ingame which is accessible with the \"c\"-button.</p> <p>Camera controls:</p> <ul> <li>Right-click: Rotate camera</li> <li>Right-click + <code>CTRL</code> (left) + move mouse left/right: Move camera on spline. Speed up with <code>Shift</code> or slow down with <code>Alt</code>.</li> <li><code>CTRL</code> (left) + <code>Shift</code>+ <code>Space</code>: Enable/disable auto-tracking</li> </ul> <p>Syntax:</p> <pre><code>camerarail\n&lt;node1&gt;\n[node2]\n...\n[node50]\n</code></pre> <p>You can define up to <code>50</code> nodes per beam object. You can use one node several times. If the first node is the same as the last one, the spline will be closed and the camera can move on the rail continuously. Example:</p> <pre><code>camerarail\n5\n6\n7\n8\n5\n</code></pre> <p>If multiple beam objects, each with a <code>camerarail</code> section, are connected with hooks, the game will try to connect the splines. </p> <p>This way you can move the camera over multiple hooked vehicles without the need to switch the vehicle:</p> <p>Object A (active) - Object B (hooked) - Object C (hooked)</p> <p>The distance between the last camerarail node of one and the first camerarail node of another object needs to be under 5 meters.</p>"},{"location":"vehicle-creation/fileformat-truck/#sounds","title":"Sounds","text":"<p>Since [ Version 0.36+ ], vehicles can have custom sounds. By default, RoR uses a set of default sounds for your vehicle, but with the following sections you can customize these sounds.</p>"},{"location":"vehicle-creation/fileformat-truck/#disabledefaultsounds","title":"disabledefaultsounds","text":"<p>Use this simple statement to disable all sounds that RoR automatically adds to your vehicle. This allows you to start from a clean slate, and add your custom sounds without interference from the automatically added sounds. Example:</p> <pre><code>disabledefaultsounds\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#soundsources","title":"Soundsources","text":"<p>Adds a sound source to your vehicle.</p> <p>Parameters:</p> <ul> <li>node: Node number; The place where your sound will come from. Doesn't support named nodes.</li> <li>sound_script_name: String; Sound scripts are defined in soundscript files. You can use game-defined sound scripts or your own sound scripts.</li> </ul> <pre><code>soundsources\n;nodeID, sound\n23, my_diesel\n23, my_turbo\n135, tracks/default_horn\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#soundsources2","title":"Soundsources2","text":"<p>Parameters:</p> <ul> <li>node: Node number; The place where your sound will come from. Doesn't support named nodes.</li> <li>mode: Decimal number<ul> <li>-2: Global; enabled all the time</li> <li>-1: Enabled in external camera only</li> <li>0 (or higher): Enabled for cinecamera number specified.     Note: for backwards compatibility, the parser will read invalid values as <code>0</code> and emit a warning.</li> </ul> </li> <li>sound_script_name: String; Sound scripts are defined in soundscript files. You can use game-defined sound scripts or your own sound scripts.</li> </ul> <pre><code>soundsources2\n;node, mode, sound\n23,   -2, my_diesel\n23,   -1, my_turbo\n135,    0, tracks/default_horn\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#list-of-default-soundsources","title":"List of default soundsources","text":"<p>This is a list of all default soundsources separated by engine type</p> <p>This can be inserted in the file as is.</p>"},{"location":"vehicle-creation/fileformat-truck/#engine-diesel","title":"Engine (Diesel)","text":"<pre><code>soundsources\n1, tracks/default_diesel\n1, tracks/default_force\n1, tracks/default_starter\n1, tracks/default_turbo\n1, tracks/default_air_purge\n1, tracks/default_horn\n1, tracks/default_pump\n1, tracks/default_screetch\n1, tracks/default_brakes\n1, tracks/default_parkbrakes\n1, tracks/default_air\n1, tracks/default_shift\n1, tracks/default_break\n1, tracks/default_creak\n1, tracks/default_gear_slide\n1, tracks/default_reverse_beep\n1, tracks/default_turn_signal\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#engine-gasoline","title":"Engine (Gasoline)","text":"<pre><code>soundsources\n1, tracks/default_car\n1, tracks/default_starter\n1, tracks/default_horn\n1, tracks/default_pump\n1, tracks/default_police\n1, tracks/default_screetch\n1, tracks/default_brakes\n1, tracks/default_parkbrakes\n1, tracks/default_shift\n1, tracks/default_break\n1, tracks/default_creak\n1, tracks/default_gear_slide\n1, tracks/default_turn_signal\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#airplane-prop","title":"Airplane (Prop)","text":"<pre><code>soundsources\n1, tracks/default_turboprop_start1\n1, tracks/default_turboprop_lopower1\n1, tracks/default_turboprop_hipower1\n1, tracks/default_turboprop_start2\n1, tracks/default_turboprop_lopower2\n1, tracks/default_turboprop_hipower2\n1, tracks/default_turboprop_start3\n1, tracks/default_turboprop_lopower3\n1, tracks/default_turboprop_hipower3\n1, tracks/default_turboprop_start4\n1, tracks/default_turboprop_lopower4\n1, tracks/default_turboprop_hipower4\n1, tracks/default_turboprop_start5\n1, tracks/default_turboprop_lopower5\n1, tracks/default_turboprop_hipower5\n1, tracks/default_turboprop_start6\n1, tracks/default_turboprop_lopower6\n1, tracks/default_turboprop_hipower6\n1, tracks/default_turboprop_start7\n1, tracks/default_turboprop_lopower7\n1, tracks/default_turboprop_hipower7\n1, tracks/default_turboprop_start8\n1, tracks/default_turboprop_lopower8\n1, tracks/default_turboprop_hipower8\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#airplane-jet","title":"Airplane (Jet)","text":"<pre><code>soundsources\n1, tracks/default_turbojet_start1\n1, tracks/default_turbojet_lopower1\n1, tracks/default_turbojet_hipower1\n1, tracks/default_turbojet_afterburner1\n1, tracks/default_turbojet_start2\n1, tracks/default_turbojet_lopower2\n1, tracks/default_turbojet_hipower2\n1, tracks/default_turbojet_afterburner2\n1, tracks/default_turbojet_start3\n1, tracks/default_turbojet_lopower3\n1, tracks/default_turbojet_hipower3\n1, tracks/default_turbojet_afterburner3\n1, tracks/default_turbojet_start4\n1, tracks/default_turbojet_lopower4\n1, tracks/default_turbojet_hipower4\n1, tracks/default_turbojet_afterburner4\n1, tracks/default_turbojet_start5\n1, tracks/default_turbojet_lopower5\n1, tracks/default_turbojet_hipower5\n1, tracks/default_turbojet_afterburner5\n1, tracks/default_turbojet_start6\n1, tracks/default_turbojet_lopower6\n1, tracks/default_turbojet_hipower6\n1, tracks/default_turbojet_afterburner6\n1, tracks/default_turbojet_start7\n1, tracks/default_turbojet_lopower7\n1, tracks/default_turbojet_hipower7\n1, tracks/default_turbojet_afterburner7\n1, tracks/default_turbojet_start8\n1, tracks/default_turbojet_lopower8\n1, tracks/default_turbojet_hipower8\n1, tracks/default_turbojet_afterburner8\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#airplane-piston","title":"Airplane (Piston)","text":"<pre><code>soundsources\n1, tracks/default_pistonprop_start1\n1, tracks/default_pistonprop_lopower1\n1, tracks/default_pistonprop_hipower1\n1, tracks/default_pistonprop_start2\n1, tracks/default_pistonprop_lopower2\n1, tracks/default_pistonprop_hipower2\n1, tracks/default_pistonprop_start3\n1, tracks/default_pistonprop_lopower3\n1, tracks/default_pistonprop_hipower3\n1, tracks/default_pistonprop_start4\n1, tracks/default_pistonprop_lopower4\n1, tracks/default_pistonprop_hipower4\n1, tracks/default_pistonprop_lopower5\n1, tracks/default_pistonprop_hipower5\n1, tracks/default_pistonprop_lopower6\n1, tracks/default_pistonprop_hipower6\n1, tracks/default_pistonprop_lopower7\n1, tracks/default_pistonprop_hipower7\n1, tracks/default_pistonprop_lopower8\n1, tracks/default_pistonprop_hipower8\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#marine-large","title":"Marine (Large)","text":"<pre><code> 1, tracks/default_marine_large\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#marine-small","title":"Marine (Small)","text":"<pre><code>1, tracks/default_marine_small\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#aircraft","title":"Aircraft","text":""},{"location":"vehicle-creation/fileformat-truck/#wings","title":"Wings","text":"<p>Please see this page for more information</p> <p></p> <p>The wings parameters are:</p> <ul> <li>A Front left down node number</li> <li>B Front right down node number</li> <li>C Front left up node number</li> <li>D Front right up node number</li> <li>E Back left down node number</li> <li>F Back right down node number</li> <li>G Back left up node number</li> <li>H Back right up node number</li> <li>Texture X coordinate of the front left of the wing: in the texture defined in \"globals\"</li> <li>Texture Y coordinate of the front left of the wing: in the texture defined in \"globals\"</li> <li>Texture X coordinate of the front right of the wing: in the texture defined in \"globals\"</li> <li>Texture Y coordinate of the front right of the wing: in the texture defined in \"globals\"</li> <li>Texture X coordinate of the back left of the wing: in the texture defined in \"globals\"</li> <li>Texture Y coordinate of the back left of the wing: in the texture defined in \"globals\"</li> <li>Texture X coordinate of the back right of the wing: in the texture defined in \"globals\"</li> <li>Texture Y coordinate of the back right of the wing: in the texture defined in \"globals\"</li> <li>Type of control surface: see below</li> <li>Relative chord point at which starts the control surface (between 0.0 and 1.0)</li> <li>Minimum deflection of the control surface: in degrees (negative deflection)</li> <li>Maximum deflection of the control surface: in degree (positive deflection)</li> <li>Airfoil file to use</li> <li>coefficent (optional) Default is <code>1.0</code> (100%), setting any other positive number increases or decrease overall wing efficacy. Useful for precision flight characteristics tuning.</li> </ul> <p>The type of control surface is set by a single character, and defines how the control surface will move depending on pilot inputs. Available control surface types are:</p> <ul> <li><code>n</code> = None</li> <li><code>a</code> = Right aileron</li> <li><code>b</code> = Left aileron</li> <li><code>f</code> = Flap</li> <li><code>e</code> = Elevator</li> <li><code>r</code> = Rudder</li> <li><code>S</code> = Stabilator with right hand axis (full body elevator), useful for e.g. a Mig25</li> <li> <p><code>T</code> = Stabilator with left hand axis (full body elevator), useful for e.g. a Mig25</p> </li> <li> <p><code>c</code> = Right elevon (right aileron + elevator), useful for e.g. Concorde</p> </li> <li><code>d</code> = Left elevon (left aileron + elevator), useful for e.g. Concorde</li> <li><code>g</code> = Right flaperon (right aileron + flap)</li> <li><code>h</code> = Left flaperon (left aileron + flap)</li> <li><code>U</code> = Taileron with right hand axis (full body elevator+aileron), useful for e.g. a F-15</li> <li><code>V</code> = Taileron with left hand axis (full body elevator+aileron), useful for e.g. a F-15</li> <li><code>i</code> = Right ruddervator (rudder + elevator), useful for V-tails like the Bonanza</li> <li><code>j</code> = Left ruddervator (rudder + elevator), useful for V-tails like the Bonanza</li> </ul> <pre><code>wings\n;main wing\n28,22,29,23,18,20,19,21, 0.509, 0.999, 0.555, 0.751, 0.752, 0.999, 0.752, 0.751, a, 0.75, -24, 24, NACA64.1.412.afl\n; this wing is force efficacy reduced to 50%\n26,28,27,29,16,18,17,19, 0.804, 0.711, 0.818, 0.617, 0.999, 0.711, 0.999, 0.617, f, 0.75, -30, 0, NACA64.1.412.afl 0.75\n; this wing is force efficacy upgraded to 300% ( equals 3 wings of the same type )\n90,26,25,27,14,16,15,17, 0.783, 0.844, 0.804, 0.711, 0.999, 0.844, 0.999, 0.711, f, 0.75, -30, 0, NACA64.3.618.afl 3.0\n 0,90,24,25, 4,14,13,15, 0.764, 0.933, 0.784, 0.844, 0.999, 0.933, 0.999, 0.844, f, 0.75, -30, 0, NACA64.3.618.afl\n 2, 0,46,24, 6, 4,12,13, 0.756, 0.999, 0.764, 0.933, 0.999, 0.999, 0.999, 0.933, n, 1.0, 0, 0, NACA0009.afl\n44, 2,45,46,30, 6,31,12, 0.783, 0.844, 0.764, 0.933, 0.999, 0.844, 0.999, 0.933, f, 0.75, -30, 0, NACA64.3.618.afl\n42,44,43,45,32,30,33,31, 0.804, 0.711, 0.783, 0.844, 0.999, 0.711, 0.999, 0.844, f, 0.75, -30, 0, NACA64.3.618.afl\n40,42,41,43,34,32,35,33, 0.818, 0.617, 0.804, 0.711, 0.999, 0.617, 0.999, 0.711, f, 0.75, -30, 0, NACA64.1.412.afl\n38,40,39,41,36,34,37,35, 0.555, 0.751, 0.509, 0.999, 0.752, 0.751, 0.752, 0.999, b, 0.75, -24, 24, NACA64.1.412.afl\n;rudder\n101,107,102,108,103,109,104,110, 0.017, 0.746, 0.087, 0.492, 0.262, 0.746, 0.204, 0.492, r, 0.56, -35, 35, NACA0009.afl\n99,101,100,102,105,103,106,104, 0.017, 0.999, 0.132, 0.747, 0.262, 0.999, 0.253, 0.747, n, 1.0, 0, 0, NACA0009.afl\n;elevators\n144,154,146,155,142,152,105,153, 0.763, 0.457, 0.840, 0.244, 0.999, 0.457, 0.983, 0.244, e, 0.64, -33, 33, NACA0009.afl\n145,144,147,146,143,142,106,105, 0.756, 0.999, 0.764, 0.933, 0.999, 0.999, 0.999, 0.933, n, 1.0, 0, 0, NACA0009.afl\n150,145,151,147,148,143,149,106, 0.840, 0.244, 0.763, 0.457, 0.983, 0.244, 0.999, 0.457, e, 0.64, -33, 33, NACA0009.afl\n</code></pre> <p>Special wing formats to reduce node/beam count and CPU load:</p> <p>(Use at own risk!)</p> <p>All examples lines refer to the node notation sample picture above.</p> <p>'A' means Node A from that schematic diagram.</p> <p>They work, no idea if they produce more or less lift then a wing with defined thickness.</p> <p>Only use them for invisible wings with meshed props/flexbodies for the visual appearance and with a transparent material, skinning them results in an ugly visual appearance.</p> <ul> <li>Flarewing using 2 nodes</li> </ul> <p>For precise aviation flare placement you can use a wing defined with only 2 nodes. It has no aerodynamic influence at all It has an extremely low node/beam count -- Vital: Needs to be placed as first wing in the wings section. Use <code>NACA0009.afl</code> as the airfoil.</p> <pre><code>wings\nA,B,A,B,A,B,A,B,0,0,0,0,0,0,0,0,n,0,0,0, NACA0009.afl\n</code></pre> <ul> <li>Trim or main wing using 3 nodes</li> </ul> <p>-- Defines a wing using only 3 nodes. Placing this wing first in the wing section results in the aviation flares appearing on the nodes <code>A,B</code> ( red/green ) and <code>E</code> (white flash).</p> <p>Works horizontally and vertically. (As on the tail.) Low node/beam count wing for self built flaps, ailerons, elevators or trimwings, very easy to animate with a single hydro. </p> <p>Can be used with any active control surface and any afl-format </p> <p>Known Issues: Sometimes vertical tailfin wings work only one direction. If RoR crashes exchange node <code>A</code> and <code>B</code> with each other.</p> <pre><code>wings\nA,B,A,B,E,E,E,E,0,0,0,0,0,0,0,0,n,0,0,0, NACA0009.afl\n</code></pre> <ul> <li>Trim or main wing using 4 nodes</li> </ul> <p>-- Defines a wing using only 4 nodes. Placed first in the wing section results in the aviation flares appearing on the nodes <code>A,B</code> (red/green) and <code>E,F</code> (white flash) </p> <p>Works horizontally and vertically (As on the tail.) </p> <p>Low node/beam count wing for main wings </p> <p>Can be used with any active control surface and any afl-format. </p> <p>Known Issues: sometimes vertical tailfin wings work only one direction. If RoR crashes exchange node <code>A,B</code> and <code>E,F</code> with each other</p> <pre><code>wings\nA,B,A,B,E,F,E,F,0,0,0,0,0,0,0,0,n,0,0,0, NACA0009.afl\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#airbrakes","title":"Airbrakes","text":"<p>Airbrakes are a moving panel used to slow down an airplane (key bindings: <code>3</code> and <code>4</code>). They are positioned similarly to props. </p> <p>These airbrakes can be easily added to a wing box, with <code>noderef</code>, <code>nodex</code>, <code>nodey</code> and nodea being the four upper nodes of a box.</p> <p>Parameters:</p> <ul> <li>reference_node: Node number/name; The base node, used to define the coordinate system</li> <li>x_direction_node: Node number/name; The node that defines the X direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>y_direction_node: Node number/name; The node that defines the Y direction (this can be visualized as a line pointing from the reference node to this node)</li> <li>additional_node: Node number/name; An additional node to make the braking forces symmetric (they are applied to <code>noderef</code>, <code>nodex</code>, <code>nodey</code> and <code>nodea</code>).</li> <li>x_offset: Real number &lt;0 - 1&gt;; The amount the prop should be moved in the X direction from the reference node. The distance it is moved depends on the distance between the Reference node and the '''X direction node '''(it's proportional): (0) leaves the prop on the reference node, (1) moves it all the way to the X direction node, and (0.5) puts the prop half-way between the two</li> <li>y_offset: Real number &lt;0 - 1&gt;; The amount the prop should be moved in the Y direction from the reference node. Like the X direction offset, the amount it is proportional to the distance between the reference node and the Y direction node.</li> <li>z_offset: Real number &lt;0 - 1&gt;; Imagine a surface which the X and Y directions pass straight through. If looking along that surface is the forwards direction, then this field moves the prop straight up. Unlike the X direction offset and the Y direction offset, the amount for the straight up offset is measured in meters</li> <li>width: Real number; Dimension of the panel</li> <li>height: Real number; Dimension of the panel</li> <li>max_inclination_angle: Real number; Maximum inclination angle</li> <li>texcoord_x1: Real number &lt;0 - 1&gt;; Texture coordinate.</li> <li>texcoord_y1: Real number &lt;0 - 1&gt;; Texture coordinate.</li> <li>texcoord_x2: Real number &lt;0 - 1&gt;; Texture coordinate.</li> <li>texcoord_y2: Real number &lt;0 - 1&gt;; Texture coordinate.</li> <li>lift_coefficient (optional): Real number; default = -1.0</li> </ul> <pre><code>airbrakes\n;noderef, nodex, nodey, nodea, offsetx, offsety, offsetz, width, length, max angle, texcord x1, texcoord y1, texcoord x2, texcoord y2\n95,   105,   113,   125,     0.2,     0.0,     0.0,   2.0,    3.0,      60.0,      0.044,       0.205,       0.124,       0.146\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#turboprops","title":"Turboprops","text":"<p>The turboprops section defines the turboprop engines, and makes the truck a plane!</p> <p>It is important that this section comes AFTER the props section, because you will need to add a <code>spinprop.mesh</code> entry to the props before turboprops will work. </p> <p>One <code>pale.mesh</code> per propeller blade can also be added for visible blades. Easy, eh? Each prop blade is associated to a blade tip node, and you must ensure the blade nodes are correctly interconnected with beams so it will spin freely around its axis, while maintaining a rigid prop disc. </p> <p>See how the Antonov 12 is made. You can also make 2 or 3 blade props by putting a <code>-1</code> instead of the blade tip node number(see the Twin Otter for example). Parameters are:</p> <ul> <li>reference_node: Node number/name; Center of the prop</li> <li>axis_node: Node number/name; Back of the prop</li> <li>blade_1_tip_node: Node number/name;</li> <li>blade_2_tip_node: Node number/name;</li> <li>blade_3_tip_node: Node number/name;</li> <li>blade_4_tip_node: Node number/name;</li> <li>turbine_power: Real number; Power of the turbine (in kW)</li> <li>airfoil: String; Airfoil of the blades</li> </ul> <pre><code>turboprops\n122,173,174,175,176,177, 3000.0, Clark-Y.afl\n113,168,169,170,171,172, 3000.0, Clark-Y.afl\n116,158,159,160,161,162, 3000.0, Clark-Y.afl\n119,163,164,165,166,167, 3000.0, Clark-Y.afl\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#fusedrag","title":"Fusedrag","text":"<p>The fusedrag section helps the correct modeling of the fuselage contribution to the aerodynamic drag of a plane. </p> <p>It also makes possible the \"masking\" of the aerodynamic contribution of an object loaded inside the plane. </p> <p>It models the fuselage as a big wing section, with an airfoil (usually a symmetrical airfoil like <code>NACA0009</code>). Fusedrag can also be used in road vehicles to aid top speed. The parameters are:</p> <ul> <li>Number of the front-most node of the fuselage</li> <li>Number of the rear-most node of the fuselage</li> <li>Approximate width of the fuselage</li> <li>Airfoil name</li> </ul> <pre><code>fusedrag\n131, 51, 4.0, NACA0009.afl\n</code></pre> <ul> <li>autocalc Automatically calculates the width and height of the truck.</li> <li>Fusedrag area coefficient This is optional, default = \"1.0\" ( = 100% ) Smaller values will make your truck go faster.</li> <li>Airfoil name This is optional, default = <code>NACA0009.afl</code></li> </ul> <pre><code>fusedrag\n;fusedrag calculated by truck width and height using NACA0009.afl airfoil\n131, 51, autocalc\n\n;fusedrag calculated by truck width and height using NACA0009.afl airfoil with coef 0.5\n131, 51, autocalc, 0.5\n\n;fusedrag calculated by truck width and height using airfoil_name.afl airfoil with coef 1.75\n131, 51, autocalc, 1.75 airfoil_name.afl\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#turbojets","title":"Turbojets","text":"<p>Defines a turbojet. Parameters:</p> <ul> <li>front_node: Node number/name; A node at the air intake.</li> <li>back_node: Node number/name; A node at the base of the nozzle.</li> <li>side_node: Node number/name; A node at the side of the engine, for reference.</li> <li>is_reversable: Integer (yes/no); Boolean meaning: <code>0</code> is NO, anything else (including <code>-1</code>) is YES</li> <li>dry_thrust: Real number; The thrust without afterburner (in kilonewtons).</li> <li>wet_thrust: Real number; The total thrust with afterburner, or zero if it does not apply.</li> <li>front_diameter: <code>0</code>; Unused.</li> <li>back_diameter: Real number; The nozzle diameter.</li> <li>nozzle_length: Real number; The length of the nozzle. This will automatically add a nozzle prop at the end of the engine, with the diameter and length specified.</li> </ul> <pre><code>turbojets\n;front_node, back_node, side_node, is_reversable, dry_thrust(kN), wet_thrust(kN), front_diameter, back_diameter, nozzle_length\n272,       273,       277,             0,           73.5,          100.1,            1.2,          1.66,          0.73\n274,       275,       276,             0,            3.5,          100.1,            1.2,          1.66,          0.73\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#pistonprops","title":"Pistonprops","text":"<p>Pistonprops act in almost the exact same way as turboprops minus two differences. The pitch is manually set and stays at a set value and it has a couplenode.</p> <p>Parameters:</p> <ul> <li>reference_node: Node number/name; Center of the prop</li> <li>axis_node: Node number/name; Back of the prop</li> <li>blade_1_tip_node: Node number/name;</li> <li>blade_2_tip_node: Node number/name;</li> <li>blade_3_tip_node: Node number/name;</li> <li>blade_4_tip_node: Node number/name;</li> <li>couple_node: Node number/name OR -1; It is unknown of what the couplenode does so it's recommended to leave it at <code>-1</code>.</li> <li>turbine_power: Real number; Power of the turbine (in kW)</li> <li>pitch: Real number;</li> <li>airfoil: String; Airfoil of the blades</li> </ul> <pre><code>pistonprops\n;ref, back,  p1,  p2,  p3,  p4, couplenode,  power, pitch,    propfoil\n 122,  173, 174, 175, 176, 177,         -1, 3000.0,   -10, Clark-Y.afl\n 113,  168, 169, 170, 171, 172,         -1, 3000.0,   -10, Clark-Y.afl\n 116,  158, 159, 160, 161, 162,         -1, 3000.0,   -10, Clark-Y.afl\n 119,  163, 164, 165, 166, 167,         -1, 3000.0,   -10, Clark-Y.afl\n</code></pre>"},{"location":"vehicle-creation/fileformat-truck/#boats","title":"Boats","text":"<p>See: Boats</p>"},{"location":"vehicle-creation/fileformat-truck/#screwprops","title":"Screwprops","text":"<p>Screwprops are boats' propellers. Currently, steering is only done by thrust vectoring. </p> <p>The current syntax is <code>prop node</code>, <code>back node</code>, <code>top node</code>, <code>power</code>.</p> <pre><code>screwprops\n;prop node, back node, top node,    power\n        88,        93,       91, 100000.0\n        89,        92,       90, 100000.0\n</code></pre>"},{"location":"vehicle-creation/flares/","title":"Flares (how to add lights)","text":"<p>Before we begin, we need to ensure some basic understanding of flares, nodes, and planes (no, not the flying type). </p>"},{"location":"vehicle-creation/flares/#the-definition-of-a-flare","title":"The Definition of a Flare","text":"<p>Flares are basically lights that originate  from a set of chosen nodes, which can be manipulated via the appropriate  values in the <code>.truck</code>, <code>.load</code>, <code>.trailer</code>, .<code>boat</code> or <code>.plane</code> file.  There are multiple types of flares, ranging from brake lights,  to turn signals, to headlights, to specialty lighting. </p>"},{"location":"vehicle-creation/flares/#the-coordinate-plane","title":"The Coordinate Plane","text":"<p>Flares operate on a different coordinate plane than nodes,  for some reason. Note these changes: </p>  Axis   Chassis (N/B)   Flares   X   Front to back   Left to right   Y   Up to down   Up to down   Z   Left to right   Front/Back"},{"location":"vehicle-creation/flares/#time-warning","title":"Time Warning","text":"<p>Furthermore, be advised that adding flares to a vehicle  will sometimes take quite a bit of time, depending on the type of vehicle,  number of nodes, number of flares, etc. You've been warned. </p>"},{"location":"vehicle-creation/flares/#preparing-the-chassis","title":"Preparing the chassis","text":"<p>Before we begin, you'll absolutely need a truck editor, such as the Editorizer.</p> <p>This will allow you to see where each node is placed in relationship to the coordinate plane (X,Y,Z). </p> <p>Once the editor is running, and is open to the truck of your choice (It's suggested hat one starts out with something simple,  such as the old Cartrailer.load, which can be found on the Repository)</p> <p>You'll need to select the checkbox up at the top that says, <code>Print Node Numbers</code> This is pretty self-explanatory, as you'll need three node numbers later on to add your flares. </p> <p>This next step can be challenging, depending on how many nodes and beams are present on the selected vehicle.  You'll need to find three nodes close to where you want them on the vehicle.  If you're adding brake/turn/head lights, it's suggested that you start with  the lower lefthand corner of the front or back chassis, writing that node number  on a piece of paper (this'll be your reference or REF node),  then write down the node directly above it (this'll be your Y), and then finally,  write the number of the node directly to the right of it (this'll be your X). </p> <p></p> <p>If you cannot find REF,X,Y nodes because they aren't where you want the lights  (e.g. you're working on the school bus, which has the tail lights quite a bit above the bumper),  you can add three nodes, in the same fashion as noted above, and use them to base your flares off of,  but that's too advanced to go in this tutorial. </p>"},{"location":"vehicle-creation/flares/#getting-to-know-notepad","title":"Getting to Know Notepad","text":"<p>Next up is man's best friend--the Windows notepad. If you're using another operating system,  and/or another editor, that's fine, as long as it can save in ANSI format--it'll save you problems later on.  Whatever you do, do not use MS Word/Wordpad/OpenOffice/AbiWord etc.</p> <p>You'll need to open up the vehicle or load of choice with the aforementioned application  (notepad or compliant editor). Here, you'll need to add a flare section </p> <p>Once the line \"flares\" is added, you'll need to hit enter once, starting a new section, where it's advised you paste the syntax: </p> <pre><code>flares\n;RefNode,X,Y,OffsetX,OffsetY, Type, ControlNumber, BlinkDelay, size MaterialName\n</code></pre>"},{"location":"vehicle-creation/flares/#tutorial","title":"Tutorial","text":"<p>So imagine a flat plane with 4 nodes, the direction of the planes face up, down, left or right determines where your flare will be.</p> <p>There are two ways to do this.</p> <p>First way: </p> <pre><code>flares\n219,218,220,0.0,0.0,f,-1,0,0.50, default\n</code></pre> <p>The first node (<code>219</code>) is where the flare comes from and the other 2 (<code>218</code>, <code>220</code>)  determine whether it faces front or back of the plane.</p> <p></p> <p>The 1<sup>st</sup> image shows my plane nodes <code>0</code>, <code>1</code>, <code>217</code>, <code>218</code></p> <p></p> <p>The 2<sup>nd</sup> image shows the nodes where my flares are going to be placed  (optional to have them or not, just there to make things more precise and save time).</p> <p></p> <p>The 3<sup>rd</sup> image shows the placement for the left headlight,  the first node <code>219</code> is where the flare comes from and <code>217</code>, <code>218</code> makes it face frontwards, if I did <code>218</code>, <code>217</code> the flare would face the other way.</p> <p></p> <p>The 4<sup>th</sup> image shows the placement for the right headlight,  the first node <code>220</code> is where the flare comes from and <code>219</code>,<code>217</code> makes it face frontwards.</p> <p>To do the rest of the headlight flares, all I change is the first node, but keep the other two nodes depending on the side you want it. </p> <p>The other way to do it is without the nodes where the headlights would be (you need to move the flare with the the red marked numbers).</p> <p>219,218,220,0.0,0.0,f,-1,0,0.50, default</p> <p>All you would do it replace the first node, so instead of 219, it would be 0 and then you would move the flare to the left.</p> <pre><code>flares\n219,218,220,0.0,0.0,f,-1,0,0.50, default\n\n\nflares\n0,218,220,0.0,0.0,f,-1,0,0.50, default\n</code></pre> <p>Same thing apply for rear lights, top lights, side lights, just needs to have a plane, doesn't matter how big or how small the plane is since you can move the flare with the red marked numbers.</p>"},{"location":"vehicle-creation/flares/#syntax","title":"Syntax","text":"<p>Borrowed from Truck file format: </p> <ul> <li>Reference node: Node ID; Node which defines origin of flare-placement coordinate system</li> <li>X axis node: Node ID; Node which defines X-axis of flare-placement coordinate system</li> <li>Y axis node: Node ID; Node which defines Y-axis of flare-placement coordinate system</li> <li>Flare X offset: Real number; Flare position on X axis in % of distance from ref-node to X-node</li> <li>Flare Y offset: Real number; Flare position on Y axis in % of distance from ref-node to Y-node</li> </ul> <p>This defines where the light flares will be. It is positioned in relation to 3 nodes of the chassis. One node is the reference node, and the two others define a base (x,y). </p> <p>So the flare is in the plane defined by the 3 nodes, and is placed relative to the reference node by adding a fraction of the vectors ref-x and ref-y. </p> <p>The three first parameters are the 3 nodes numbers (ref,x,y) and the two next gives what amount of ref-x and ref-y to add to displace the flare point (these two should be logically between 0 and 1, or else that means you use the wrong base triangle and if the body flexes too much the flare will not stick to the body correctly). </p> <p>Basically, OffsetX/Y means that a fraction of X and Y will be added to the Reference node, which should be a corner, with a Y node above it, and an X node to the right or left of it. It's a bit easier, however, if it's in a left corner, than a right. </p> <p>Example (* = node, + = flare location): </p> <pre><code>*\n  +\n*   *\n</code></pre> <p>Hint: Use the material name <code>tracks/aimflare</code> for help in positioning a flare.  </p> <p>Alright, back on topic: below the syntax, you should begin listing your nodes, keeping in mind their location on the vehicle, and the coordinate plane. You'll probably need to save, open up RoR, and test out the flares quite a few times before the placement of the flare is perfect.</p>"},{"location":"vehicle-creation/flares/#adding-symmetrical-flares","title":"Adding Symmetrical Flares","text":"<p>Okay, so you finally have that headlight, taillight, marker light, whatever-light  in place. Now, you need one for the opposite side. Never fear, however, because  there's a quite simple way of figuring out how to exactly place the other side's flare.  Remember above, when it was stated, \"these two should be logically  between 0 and 1\" about offset-X and offset-Y? </p> <p>Well, anyway, once you have the first flare placed, just use that same exact placement line again,  but this time, subtract whatever offset-X you used on the first flare from 1.0.  Example: say we placed this headlight: </p> <pre><code>flares\n;RefNode,X,Y,OffsetX,OffsetY, Type, ControlNumber, BlinkDelay, size MaterialName\n0,10,1,0.345,0.55,f\n</code></pre> <p>That'd be the left side. To get the right side, we'd have to take 0.345 and subtract it from 1.0 to get 0.655. Then, we use 0.655 for the right side's offset-X. Since we want the right side flare to be at the same height as the left side, we use the same offset-Y. So, in turn, it'd look like this: </p> <pre><code>flares\n;RefNode,X,Y,OffsetX,OffsetY, Type, ControlNumber, BlinkDelay, size MaterialName\n0,10,1,0.345,0.55,f\n0,10,1,0.655,0.55,f\n</code></pre> <p>This guide uses headlamps as an example, but this technique can be used to place any type of flare. </p>"},{"location":"vehicle-creation/flares/#troubleshooting-flares","title":"Troubleshooting Flares","text":"<p>Should the flare seem to stick to the interior of the vehicle when you select REF, X and Y nodes from the left side of the chassis, just use three nodes\u00a0directly opposite on the right side of the chassis\u00a0instead.\u00a0 This should thereby make the flare stick to the outside of the vehicle. </p> <p>If you had to add nodes to a vehicle to place flares, and the flares seem to swing around or fall to the ground, ensure that you tied the said nodes into the frame of the vehicle with beams. </p> <p>If a flare isn't illuminating when you attempt to turn it on, verify that the syntax is correct; the flare line has the correct REF, X &amp; Y nodes; that it is of the correct type; and that the control number (if it's a user-controlled light) is correct.  The flare could be showing up inside the vehicle, check the wireframe (hit K).  If this is the case, see above.</p>"},{"location":"vehicle-creation/flares/#custom-flares","title":"Custom flares","text":"<p>Some times, default flares get a little boring, because there are not enough flash patterns or not enough colors. In this tutorial, you will learn how to make your own flare texture and your own flash patterns.</p> <p>If you want to make your own custom flare textures, you will need a decent photo-editing program.</p>"},{"location":"vehicle-creation/flares/#making-your-flare-texture","title":"Making your flare texture","text":"<p>(You only need this step if you want to make your own flare texture/color. If you will use default flares, skip to step 3)</p> <p>Open up a new document in your photo-editing software. Make the background transparent, and make it 40 pixels wide and 40 pixels high.</p> <p></p> <p>Right after that, pick a color for your flare. I will do blue, because I want blue flashers on my vehicle. So I will select the gradient tool and make a small light effect. (Note I zoomed in a little bit)</p> <p></p> <p>Remember to save your textures as Portable Network Graphics (PNG)</p> <p>Then, save it as a name you will remember, such as <code>Flare1</code> or <code>Flash1</code>. </p> <p>For this tutorial, I will go with <code>Flash1</code>. Following that step, you must make another light effect, but 100% transparent. So create a new file in Photoshop with the dimensions and settings above, then simply save it as <code>Flash2</code>. This is needed because there needs to be an invisible flash when the light is off/deactivated.</p> <p>Once you have saved the flashes, put them into the vehicle's <code>.zip</code> file you will be editing.</p>"},{"location":"vehicle-creation/flares/#the-material-file-and-the-material-code","title":"The Material file and the Material code","text":"<p>Locate the <code>.material</code> file in your vehicles .ZIP folder and open it with notepad. You will need to copy and paste the following code below...</p> <pre><code>material tracks/&lt;a name for your new flare&gt;\n{\n    receive_shadows off\n    technique\n    {\n        pass\n        {\n            lighting off\n            scene_blend alpha_blend\n            alpha_rejection greater 2\n            depth_write off\n            //depth_check off\n\n            texture_unit\n            {\n                anim_texture &lt;the on image&gt; &lt;the off image&gt; &lt;animation length&gt;\n            }\n        }\n    }\n}\n</code></pre> <p>(Thanks to Turbocharger for providing the code)</p> <p>... Anyways, paste that to the bottom of your <code>.material</code> file of your vehicle. </p> <p>If you inspect the code provided, you will see inserts where to put names. </p> <p>For example, where it says <code>&lt;A name for your new flare&gt;</code> will be the name of your custom flare. </p> <p>I would call it the same as my texture name, Flash1. </p> <p>Then where it says <code>&lt;on image&gt;</code> and <code>&lt;off image&gt;</code>, put what it says. </p> <p>For the on, put <code>Flash1.png</code> and for the off, put <code>Flash2.png</code> </p> <p>And for animation length, put how long you want them to flash. </p> <p>I would test values before I got it perfect. </p> <p>After filling in the missing spaces, your <code>.material</code> code should look like this:</p> <pre><code>material tracks/Flash1\n{\n    receive_shadows off\n    technique\n    {\n        pass\n        {\n            lighting off\n            scene_blend alpha_blend\n            alpha_rejection greater 2\n            depth_write off\n            //depth_check off\n\n            texture_unit\n            {\n                anim_texture Flash1.png Flash2.png .5\n            }\n        }\n    }\n}\n</code></pre> <p>Save your <code>.material</code> file after completing this.</p>"},{"location":"vehicle-creation/flares/#editing-the-truck-file","title":"Editing the truck file","text":"<p>Open the <code>.truck</code> file, and find the flares section. To test these flashes, I would use the headlights as an example. So copy the headlight codes, and paste them below. You may have to change them from headlights, to custom flares. So if you see this in the headlight line: f, -1, you need to change that to: u, 1 because that makes it a user controlled flare (A flare you activate by pressing Ctrl+1) Then, instead of end of the headlight code saying default, change it to: tracks/Flash1 so it flashes your custom flare pattern. </p> <p></p> <p>Once you test it in game, it is a simple on/off flashing pattern.</p> <p></p>"},{"location":"vehicle-creation/flares/#lets-go-one-step-further","title":"Lets go one step further","text":"<p>Now that you can easily make an off/on flashing pattern, let's get more complex. </p> <p>Get back into the <code>.material</code> file, copy the custom flare section, and paste it below. Now switch/reverse the  and  image, and call the pattern Flash2.  <p></p> <p>Now, open up the .truck file, and look at only ONE of the new flashing headlights, and change it's material name to tracks/Flash2. </p> <p></p> <p>Now, see it ingame, it will be a wig-wag pattern. </p> <p></p> <p>Easy as that. There is a rule when it comes to making custom flashes: </p> <p>When <code>Flash1</code> is on, <code>Flash2</code> is off. When <code>Flash1</code> is off, <code>Flash2</code> is on. </p> <p>You can make a traffic advisor using this rule, or strobes, or anything you like. </p> <p>Just refer to this tutorial and be creative.</p>"},{"location":"vehicle-creation/flexbody-deforming-detaching-parts/","title":"Flexbody deforming/detaching parts","text":"<p>This is pretty simple, actually. I prefer to use notepad with the Editorizer just as a viewer, since the Editorizer tends to screw things up when you save with it. Excuse the crap drawings; hopefully this will still be helpful. </p>"},{"location":"vehicle-creation/flexbody-deforming-detaching-parts/#instructions","title":"Instructions","text":"<p>First start by making a grid of nodes however many segments long and wide you need it to be (recommend at least 4 nodes wide and 4 nodes long for a hood) and fitting the shape of your body panel (this is for a hood or trunk; I'll talk about bumpers in a bit). Connect all of them together lengthwise/widthwise only. Give them a set_beam_defaults such that they can't deform or break at all (make the deform and break thresholds very high). These define the basic shape of the body part so they can't deform or break or you'll get weird glitchy stuff going on. </p> <p> </p> <p>Then make the 'crossing' beams. These are the beams that form an X inside each square and keep the shape together. These should have a set_beam_defaults making them unbreakable and hard to deform (deform value in the hundreds of thousands range for light cars) </p> <p> </p> <p>Now make the deformer beams. These hold the shape together rigidly and also keep it in a deformed shape when it bends. Do them like this, lengthwise and widthwise, between every other node and also between the back and front nodes. Set them to be unbreakable but with a pretty low deformation threshold. It'd be a good idea to put the lengthwise and widthwise deformers under separate set_beam_defaults values, so you can tweak individually the strength in both directions. </p> <p> </p> <p>Now if your body panel is pretty flat, like this, it's going to flop all over the place unless you support it from underneath. The best way to fight this is with stabilization nodes. Usually two nodes floating about 0.3 meters above or below are a good way to do it. Connect both of those nodes to every single node of your body panel and each other, and make those beams unbreakable but easy to deform. I haven't drawn about half of them because the image would get too cluttered. You can also get away with having just one stabilization node. </p> <p> </p> <p>Next is the hinge. Attach all of the nodes of the back two rows (closest to the hinge) to two nodes you can hinge from on your main body. Set these beams to be fairly stiff but also breakable (deform &amp; break values in the hundred thousand range for light cars). </p> <p> </p> <p>Now you need to support the hood/trunk from underneath so it doesn't fall inwards. Make beams going downwards from each hood node to the bottom of your frame/body, and give them the \"s\" flag so they resist compression but not extension. This allows the hood/trunk/whatever to push upwards/pop open but doesn't let it fall inwards into the body. Make sure the set_beam_defaults damping is set to 1 or 0 for the support beams, so when a part detaches it doesn't get dragged along with the car for a ways until the support beams break. These should be pretty easy to deform (around 50000) but harder to break (they break automatically when they reach 4x their length, so if your hood or whatever falls off, you don't need to worry about making these easy to break). </p> <p> </p> <p>Finally, the latch. This will keep the hood (or whatever it is you're doing) completely locked in place to the body until the latch breaks, at which point it'll pop open and swing on its hinges. Make downwards beams attaching the frontmost nodes of the panel to the closest frame/body nodes. These should be easy to deform and have a break threshold only slightly above the deform. These might not be rigid unless you also attach them to a second segment of nodes (either the next one on the hood or a segment below on the body). </p> <p> </p> <p>Bumpers are a similar deal, but the 'hinges' should be at both corners, and the node/beam should obviously be shaped like a bumper. Bumpers should also be less susceptible to deformation, since they're usually made of plastic or spring steel. </p> <p>This also works for doors (replace latch with commands if you want them to be openable) </p> <p>One final note: if your body panel shape is quite curved and convex/concave, you probably won't need the stabilization nodes/beams. My '49 Ford hood has no stabilization nodes because the shape is curved enough to be rigid on its own. </p>"},{"location":"vehicle-creation/flexbody-deforming-detaching-parts/#credits","title":"Credits","text":"<p>This was originally written by Gabester.</p>"},{"location":"vehicle-creation/flexbody-wheels/","title":"Flexbody wheels","text":"Number of wheels  Wheel rays  Chassis nodes  Cameras before wheel section"},{"location":"vehicle-creation/flexbody-wheels/#what-is-this","title":"What is this?","text":"<p>By default, Rigs of Rods's meshwheels sections generate a tire using a texture. In order to use a 3D tire mesh, you have to place the tire meshes using flexbodies or props. This tool simplifies that process by generating the flexbody code for you.</p> <p>Some addon parts require you to generate flexbody wheels as the tire mesh is separate.</p> <p>Not to be confused with flexbodywheels, which provides this feature.</p>"},{"location":"vehicle-creation/flexbody-wheels/#instructions","title":"Instructions","text":"<p>First, make sure the tire material in the meshwheels section is set to <code>tracks/trans</code> , for example:</p> <pre><code>meshwheels\n;tire_radius, rim_radius, width, numrays, node1, node2, snode, braked, propulsed, arm,  mass,   spring, damping, side,               meshname         material\n0.35,       0.21,   0.5,      14,    32,    33,    34,      1,         1,  18, 200.0, 300000.0,  2000.0,    l, dodgechargerwheel.mesh tracks/trans\n0.35,       0.21,   0.5,      14,    34,    35,    33,      1,         1,  26, 200.0, 300000.0,  2000.0,    r, dodgechargerwheel.mesh tracks/trans\n0.35,       0.21,   0.5,      14,    44,    45,  9999,      1,         0,  53, 200.0, 350000.0,  2000.0,    l, dodgechargerwheel.mesh tracks/trans\n0.35,       0.21,   0.5,      14,    46,    47,  9999,      1,         0,  50, 200.0, 350000.0,  2000.0,    r, dodgechargerwheel.mesh tracks/trans\n</code></pre> <p>Notice the <code>tracks/trans</code> at the end of the line. This makes the default tire invisible.</p> <p>Explanation of each option:</p> <p><code>Number of wheels</code> - Amount of wheels the vehicle has.</p> <p><code>Wheel rays</code> - The number of \u2018pie pieces\u2019, or corners, that make up the wheel. In the above example, <code>numrays</code> is set to <code>14</code> .</p> <p><code>Chassis nodes</code> - Amount of nodes the vehicle has. Just set the last node ID at the bottom of the nodes section.</p> <p><code>Cameras before wheel section</code> - Amount of cameras the vehicle has. Most only have 1, while others (such as the Gavrils) have 3.</p> <p><code>Inside axle node</code> -  The inner axle node. In the above example, the first wheel's <code>node1</code> is <code>32</code> .</p> <p><code>Outside axle node</code> - The outer axle node. In the above example, the first wheel's <code>node2</code> is <code>33</code> .</p> <p><code>Mesh name</code> - The mesh name of the tire, with <code>.mesh</code> file extension.</p> <p>Once you fill in all options, click <code>Generate code</code> to generate the flexbodies.</p> <p>All that's left to do is just paste the generated flexbody lines below the <code>meshwheels</code> section.</p> <p>Complete example for the Burnside Race:</p> <pre><code>meshwheels2\n;tire_radius, rim_radius,width,numrays,node1,node2,snode,braked,propulsed, arm, mass, spring, damping, side, meshname material\n0.35, 0.233, 0.265, 14, 44, 46, 9999, 4, 1, 131, 46.0, 100000.0, 900.0, r, ICD_AEZ_Forged_16.mesh tracks/trans\n0.35, 0.233, 0.265, 14, 45, 47, 9999, 4, 1, 134, 46.0, 100000.0, 900.0, l, ICD_AEZ_Forged_16.mesh tracks/trans\nset_beam_defaults 3300000, 90, 2000000, 2500000\nset_node_defaults -1, 1.14, -1, -1\n0.35, 0.233, 0.265, 14, 66, 67, 69, 1, 1, 62, 46.0, 125000.0, 900.0, r, ICD_AEZ_Forged_16.mesh tracks/trans\n0.35, 0.233, 0.265, 14, 69, 70, 67, 1, 1, 63, 46.0, 125000.0, 900.0, l, ICD_AEZ_Forged_16.mesh tracks/trans\n\nflexbodies\n; wheel 1\n44, 46, 249, 0.5, 0, 0, 0, 0, 0, ICD_Kumho_ECSTA_SPT_16.mesh\nforset 46, 44, 249-276\n\n; wheel 2\n45, 47, 277, 0.5, 0, 0, 0, 0, 0, ICD_Kumho_ECSTA_SPT_16.mesh\nforset 47, 45, 277-304\n\n; wheel 3\n66, 67, 305, 0.5, 0, 0, 0, 0, 0, ICD_Kumho_ECSTA_SPT_16.mesh\nforset 67, 66, 305-332\n\n; wheel 4\n69, 70, 333, 0.5, 0, 0, 0, 0, 0, ICD_Kumho_ECSTA_SPT_16.mesh\nforset 70, 69, 333-360\n</code></pre> <p>When you click <code>Generate code</code> , the current settings attempt to be stored in the browser, so that when revisiting the page, they are retrieved.</p> <p>This only allows storage of one truck's settings at a time - hopefully that's enough for development purposes.</p>"},{"location":"vehicle-creation/flexbody-wheels/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>If the tire sticks too far out/in, adjust the X offset. In the above Burnside Race example, the offset is set to <code>0.5</code> .</p> </li> <li> <p>If the tire glitches/isn't attached to the wheel, you have set the wrong node/camera count and/or wheel nodes.</p> </li> </ul>"},{"location":"vehicle-creation/flexbody-wheels/#credits","title":"Credits","text":"<p>This was originally a spreadsheet by Fat-Alfie on the  Rigs of Rods forum.  Translated  into html/javascript form by nmurdoch.ca to make it more convenient.</p>"},{"location":"vehicle-creation/making-custom-hud/","title":"Creating custom HUD","text":"<p>The GUI is described in a Layout file (*.layout). It is an XML file format.</p> <p>The Layout Files should be edited by the provided GUI Editor</p> <p>The GUI is linked with RoR over \"User Data\" Strings.  These are Strings that can be set-up in the LayoutEditors Widget Properties.  A link is a connection between the GUI Elements and RoR game values.</p> <p>The controls are separated via Layers, so they can overlap each other in a defined way:</p> <p></p> <p>Needles should go on top (Main Layer), static background images to the bottom (Back Layer)</p>"},{"location":"vehicle-creation/making-custom-hud/#required-software","title":"Required Software","text":"<p>GUI Editor 4</p> <p>(old version: GUI Editor 2)</p> <p>Note</p> <p>Some animations do not work exactly like in RoR.</p>"},{"location":"vehicle-creation/making-custom-hud/#workflow","title":"Workflow","text":"<ol> <li>Create graphics of gauges and needles</li> <li>Start GUIEditor and create the controls using your graphics </li> <li>Save the .layout and image files in your truck zip and use <code>guisettings</code> to integrate it with your vehicle.</li> <li>Test in RoR and fix in GUIEditor</li> </ol>"},{"location":"vehicle-creation/making-custom-hud/#available-animations","title":"Available animations","text":""},{"location":"vehicle-creation/making-custom-hud/#rotate","title":"rotate","text":"<p>Rotates a single image around its center</p> <ul> <li>Input type: float (real number)</li> <li>FPS impact: light</li> <li>Internals: based on MyGUI control 'RotatingSkin'</li> </ul> <p></p> <p>Arguments:</p> <ul> <li>min - the minimum rotation angle</li> <li>max - the maximum rotation angle</li> <li>vmin - the value at the minimum angle</li> <li>vmax - the value at the maximum angle</li> </ul> <p>Example for a simple speedo gauge:</p> <pre><code>anim=rotate\nmin=-104\nmax=110\nvmin=0\nvmax=120\nlink=speedo_kph\n</code></pre>"},{"location":"vehicle-creation/making-custom-hud/#lamp","title":"lamp","text":"<p>Switches between two images</p> <p></p> <ul> <li>Input type: boolean (true/false)</li> <li>FPS impact: light</li> <li>Internals: based on MyGUI control 'ImageBox'</li> </ul> <p>Arguments:</p> <ul> <li>texture - the base name of the texture to use The resulting images are called [texture]-on.png and [texture]-off.png</li> </ul> <p>Example for a simple clutch lamp (images are clutch-on.png and clutch-off.png):</p> <pre><code>anim=lamp\ntexture=clutch\nlink=clutchLamp\n</code></pre> <p>Lamps can have conditions on when they switch states.  Currently there is only support for &lt; and &gt; comparisons.  For example this lamp will be \"on\" for speeds over 50kph:</p> <pre><code>anim=lamp\ntexture=clutch\nlink=speedo_kph&amp;gt;50\n</code></pre>"},{"location":"vehicle-creation/making-custom-hud/#series","title":"series","text":"<p>Switches between N images</p> <p></p> <ul> <li>Input type: integer (whole number)</li> <li>FPS impact: light</li> <li>Internals: based on MyGUI control 'ImageBox'</li> </ul> <p>Arguments:</p> <ul> <li>texture- the basename of the texture to use The resulting images are called &lt;texture&gt;-&lt;number&gt;.png</li> </ul> <p>Example for a simple secured lamp (images are secured-0.png, secured-1.png and secured-2.png):</p> <pre><code>anim=series\ntexture=secured\nlink=ties_mode\n</code></pre>"},{"location":"vehicle-creation/making-custom-hud/#scale","title":"scale","text":"<p>Scales one image</p> <p></p> <ul> <li>Input type: float (real number)</li> <li>FPS impact: heavier</li> <li>Internals: based on MyGUI control 'ImageBox'</li> </ul> <p>Arguments:</p> <ul> <li>min - the minimum size to add</li> <li>max - the maximum size to add</li> <li>vmin - the value at the minimum size</li> <li>vmax - the value at the maximum size</li> <li>direction - what side to scale up. possible values:  up, down, left, right</li> </ul> <p>Example for a simple speedo bar (which is 200 pixels width):</p> <pre><code>anim=scale\nmin=-200\nmax=0\nvmin=0\nvmax=120\ndirection=right\nlink=speedo_kph\n</code></pre>"},{"location":"vehicle-creation/making-custom-hud/#translate","title":"translate","text":"<p>Moves around one image</p> <p></p> <ul> <li>Input type: float (real number)</li> <li>FPS impact: heavier</li> <li>Internals: based on MyGUI control 'ImageBox'</li> </ul> <p>Arguments:</p> <ul> <li>min - the minimum size to translate</li> <li>max - the maximum size to translate</li> <li>vmin - the value at the minimum translation</li> <li>vmax - the value at the maximum translation</li> <li>direction - what side to move to. possible values:  up, down, left, right</li> </ul> <p>Example for a simple speedo bar:</p> <pre><code>anim=translate\nmin=0\nmax=200\nvmin=0\nvmax=120\ndirection=right\nlink=speedo_kph\n</code></pre>"},{"location":"vehicle-creation/making-custom-hud/#textstring-textformat","title":"textstring / textformat","text":"<p>Displays text</p> <p></p> <ul> <li>Input type: text (max 250 characters)</li> <li>FPS impact: light</li> <li>Internals: based on MyGUI control 'TextBox'</li> </ul> <p>Arguments:</p> <ul> <li>format - (optional) the display format that should be used,  See here for more info.</li> </ul> <p>Example for a simple speedo display:</p> <pre><code>anim= textstring or textformat\nformat=%04.0f km/h\nlink=speedo_kph\n</code></pre>"},{"location":"vehicle-creation/making-custom-hud/#input-sources","title":"Input sources","text":"Method Description Type / Values / Ranges Active when <code>rpm</code> Engine RPM Float: 0 - max truck RPM Engine exists <code>speedo_kph</code> Wheel Speed in kilometer per hour Float: unlimited, minus if driving backwards Always <code>speedo_mph</code> Wheel Speed in miles per hour Float: unlimited, minus if driving backwards Always <code>engine_turbo</code> Engines Turbo PSI value Float: unlimited Engine exists <code>engine_ignition</code> true if engine has contact, false if not Boolean: true or false Engine exists <code>engine_battery</code> true if engine has contact and is nor running, false if not Boolean: true or false Engine exists <code>engine_clutch_warning</code> true if engine torque is greater than the clutch force, false if not Boolean: true or false Engine exists <code>engine_gear</code> Number of available gears, does not change Integer: -1 for first reverse gear, 0 for neutral, 1 for first gear, etc Engine exists <code>engine_num_gear</code> Gear number, negative for reverse Integer: i.e. 6 for six usable gears Engine exists <code>engine_gear_string</code> String that shows the gears in relation to the number of gears Character: \" / \" or \"N\" or \"R\" Engine exists <code>engine_auto_gear</code> Automatic gear (R/N/D/\u00bd) Integer: same as gear but for automatic Engine exists <code>engine_clutch</code> Current clutch value Float: 0 (not pressed) to 1 (fully pressed down) Engine exists <code>brake</code> Current brake value Float: 0 (not pressed) to 1 (fully pressed down) Always <code>accelerator</code> Current accelerator value Float: 0 (not pressed) to 1 (fully pressed down) Engine exists <code>roll</code> Current cabin roll - values represents angle in degree Float: unlimited Always <code>roll_corr</code> Current cabin roll targeted by active shocks - values represents angle in degree Float: unlimited Always <code>roll_corr_active</code> true when the active shocks are working Boolean: true/false Always <code>pitch</code> Current cabin pitch - values represents angle in degree Float: unlimited Always <code>parkingbrake</code> true if parking brake is on Boolean: true/false Always <code>locked</code> true if any hooks are locked to something Boolean: true/false Always <code>low_pressure</code> true if hydraulics cannot work as the RPM is too low Boolean: true/false Always <code>headlights</code> true if headlights (low beams) are on Boolean: true/false Always <code>highbeams</code> true if headlights (high beams) are on Boolean: true/false Always <code>foglights</code> true if fog lights are on Boolean: true/false Always <code>sidelights</code> true if running lights are on Boolean: true/false Always <code>lights</code> legacy source, now alias of <code>sidelights</code> Boolean: true/false Always <code>brake_lights</code> true if brake lights are on Boolean: true/false Always <code>reverse_light</code> true if reverse lights are on Boolean: true/false Always <code>signal_turnleft</code> left turn signal is lit. Boolean: true/false Always <code>signal_turnright</code> light turn signal is lit. Boolean: true/false Always <code>signal_warning</code> warning signal is lit. Boolean: true/false Always <code>beacons</code> true if beacons are on Boolean: true/false Always <code>custom_lightN</code> user controlled light is lit (N = control number 1-10). Boolean: true/false Always <code>tractioncontrol_mode</code> Traction Control (TC) mode Integer: 0-3: 0 = not present, 1 = off, 2 = on, 3 = active Always <code>antilockbrake_mode</code> Anti-lock Brakes (ABS) mode Integer: 0-3: 0 = not present, 1 = off, 2 = on, 3 = active Always <code>ties_mode</code> Ties locking state Integer: 0-2: 0 = not tied, 1 = prelock (currently tightening), 2 = tied (locked) Always <code>screw_throttle_X</code> Boat Screw Throttle. X from 0 to 5 (DD_MAX_SCREWPROP) Float: unlimited Screwprop exists <code>screw_steer_X</code> Boat Screw Steering direction. X from 0 to 5 (DD_MAX_SCREWPROP) Float: unlimited, -1 = left, +1 = right? Screwprop exists <code>water_depth</code> Depth of water below lowest node Float: unlimited Screwprop exists <code>water_speed</code> Speed on water in knots (1 Nautical Mile/Hour) Float: unlimited Screwprop exists <code>aeroengine_throttle_X</code> Airplane Engine Throttle. X from 0 to 5 (DD_MAX_AEROENGINE) Float: 0-1 Aeroengine exists <code>aeroengine_failed_X</code> Airplane Engine Failure. X from 0 to 5 (DD_MAX_AEROENGINE) Boolean: true if failed Aeroengine exists <code>aeroengine_rpm_X</code> Airplane Engine RPM. X from 0 to 5 (DD_MAX_AEROENGINE) Float: 0 to aeroengine max RPM Aeroengine exists <code>airspeed</code> Speed above ground in knots/hour Float: unlimited Aeroengine or wing exists <code>wing_aoa_X</code> Wings Angle of Attack. X from 0 to 5 (DD_MAX_WING) Float: unlimited Wing exists <code>altitude</code> Altitude above ground Float: unlimited Aeroengine or wing exists <code>altitude_string</code> Altitude above ground - string Characters: three character altitude display: \"000\" Aeroengine or wing exists"},{"location":"vehicle-creation/making-custom-hud/#quickstart","title":"Quickstart","text":"<p>Perhaps the easiest thing to add is a text readout, here we will add a simple readout that shows the speed of a vehicle in MPH.</p> <p>1. Load up the layout editor and add a TextBox.</p> <p>You can do this by opening the Widgets tab, and under default you will find TextBox. Drag a TextBox out on the canvas as shown:</p> <p></p> <p>2. Change the properties of the TextBox.</p> <p>Do this in the Properties tab as shown. Align should be to a corner of the screen (Left Top here) and Layer should be \"Main\". Also add the user data properties:</p> <pre><code>anim=text\nlink=speedo_mph\n</code></pre> <p>put the keyword (e.g. \"anim\") into the box above \"Key\" and put the value (e.g. \"text\") above the box marked \"Value.\"  Then click on \"Add\" and repeat this step for all the user data properties. In the end you should have these properties for the TextBox:</p> <p></p> <p>3: Save the layout as \"namehere.layout\" and put the layout with the vehicle's .truck file.</p> <p>In the .truck file add the following lines:</p> <pre><code>guisettings\ndashboard namehere.layout\n</code></pre> <p>4: Test your readout!</p> <p>Extra: Add these user values to format the display like this: \"xxxx.xx MPH\"</p> <pre><code>format=%.2f MPH\n</code></pre> <p>Now you have the basics of the layout editor, move on to more advanced readouts. Let's now create a simple speedo gauge:</p> <p>Important</p> <p>Put your graphics into the YourMedia sub folder, so the editor can use it.</p> <ol> <li>Open the layout editor.</li> <li>Add an ImageBox in the same way that you added a TextBox in the first part of this quickstart.</li> <li>Go into the ImageBox's properties and put the gauge texture into the ImageTexture field.</li> <li>Add a RotatingSkin widget  add your needle texture to it in the same way as you did previously.</li> <li>Add these values to the RotatingSkin as User data: <pre><code>anim=rotate\nmin=-104\nmax=110\nvmin=0\nvmax=120\nlink=speedo_kph\n</code></pre></li> <li>Save your .layout file, and move it and the images to your truck folder, and add the truck&lt;--&gt;.layout linkage   as you did earlier in the quickstart.</li> <li>Test out your gauge, and make modifications as necessary.</li> </ol>"},{"location":"vehicle-creation/making-custom-hud/#dashboard-mods","title":"Dashboard mods","text":"<p>Introduced in version 2025.03 RC1, the dashboard mod type enables players to easily install and create different default HUDs without having to edit game files.</p> <p>Just like vehicles and terrains, a dashboard mod zip file is placed inside the <code>mods</code> folder.</p> <p>The dashboard can then be selected in <code>Settings</code> -&gt; <code>UI</code> -&gt; <code>Default truck/boat dashboard</code>.</p>"},{"location":"vehicle-creation/making-custom-hud/#folder-layout","title":"Folder layout","text":"<p>A dashboard mod contains:</p> <ul> <li><code>*.dashboard</code> file(s).</li> <li>MyGUI <code>*.layout</code> file(s)</li> <li>Textures</li> <li>(optional) Preview (<code>filename-mini</code>) images</li> </ul>"},{"location":"vehicle-creation/making-custom-hud/#dashboard-file-format","title":"Dashboard file format","text":"<p>A <code>*.dashboard</code> file is the main entry point, contains file info for the selector.</p> <p>Example from Modern Analog Gauges:</p> <pre><code>dashboard_name \"Modern Analog Gauges\"\ndashboard_description \"Semi-transparent blue-tinted analog gauges with a digital speedo\"\ndashboard_author \"graphics\" 899 \"Mark\" \"example@example.com\"\ndashboard_author \"layouts\" 899 \"Mark\" \"example@example.com\"\ndashboard_category 201\n</code></pre>"},{"location":"vehicle-creation/making-custom-hud/#dashboard_name","title":"dashboard_name","text":"<p>(String) Name of the dashboard. </p>"},{"location":"vehicle-creation/making-custom-hud/#dashboard_description","title":"dashboard_description","text":"<p>(String) Description/tag line, pretty self-explanatory.</p>"},{"location":"vehicle-creation/making-custom-hud/#dashboard_author","title":"dashboard_author","text":"<p>(String: credit) (Int: forum ID) (String: name) (String: email))</p> <ul> <li>Credit: Tells what the author referenced did.</li> <li>Forum ID:  ID of the author's RoR Forum account. To get your ID, view your forum profile and check the number shown in the URL. For example: </li> </ul> <p>https://forum.rigsofrods.org/members/curiousmike.5831/</p> <p><code>5831</code> would be the ID. </p> <ul> <li> <p>Name: The name of the author.</p> </li> <li> <p>Email: Author's email address. Optional, not shown in the selector.</p> </li> </ul>"},{"location":"vehicle-creation/making-custom-hud/#dashboard_category","title":"dashboard_category","text":"<p>(Int) Dashboard type. Accepted categories:</p> <ul> <li><code>200</code> - Generic</li> <li><code>201</code> - Truck</li> <li><code>202</code> - Boat</li> </ul>"},{"location":"vehicle-creation/making-custom-hud/#layout-file-names","title":"Layout file names","text":"<p>The MyGUI <code>*.layout</code> files MUST be named the same as the <code>*.dashboard</code> file. For example:</p> <pre><code>modern_analog_gauges.dashboard\nmodern_analog_gauges_3500rpm_kph.layout\nmodern_analog_gauges_3500rpm_mph.layout\nmodern_analog_gauges_7000rpm_kph.layout\nmodern_analog_gauges_7000rpm_mph.layout\n</code></pre> <p>Optional file name tags:</p> <ul> <li><code>_Nrpm</code> - N is the redline RPM. The layout will be used if the engine RPM meets or is below this limit. If RPM exceeds available dashboards' RPM, the closest match will be used.</li> <li><code>_Xph</code> - X is units <code>k</code>= Kilometers or <code>m</code>= Miles</li> </ul>"},{"location":"vehicle-creation/motorbikes/","title":"Motorbikes","text":"<p>This tutorial covers the theory and concepts used to build real 2-wheeled vehicles in Rigs of Rods.</p>"},{"location":"vehicle-creation/motorbikes/#theory","title":"Theory","text":"<p>Motorbikes are counter-intuitive, to turn left, you must steer right a little first and vice-versa. It is because of this that the player cannot control the steering directly (with hydros) because the response time is too long and there is no feedback like when you ride a bicycle. So you must use animators and the <code>roll</code> option. This is what we use to turn the front wheel.</p> <p>The roll means the angle between the camera plane and the ground plane, so you can adjust it by rotating the camera. This is the main way of controlling the bike, you essentially trick the bike into thinking its falling onto one side and it will always try to be level. In other words, you're not steering, just controlling the lean angle.</p> <p></p>"},{"location":"vehicle-creation/motorbikes/#construction","title":"Construction","text":"<p>To make a motorcycle or similar you need to have good knowledge about node-beam systems and have experience of vehicle creation. A lot of details will not be covered because it should be obvious to an experienced user.</p> <p>The image above shows how the motorbike operates, note how the front wheel is able to slide up and down on four slidenodes.</p>"},{"location":"vehicle-creation/motorbikes/#wheels","title":"Wheels","text":"<p>The wheels should be as thin as possible and be made very stiff to stop flexing and be sure to only power the rear wheel. I added a snode out to the side for both front (<code>n51</code>) and back (<code>n50</code>) wheels to stop them form flexing so much. These snodes must be contactless, so use the node option <code>c</code>, instead of the usual <code>n</code>.</p> <p>I used wheels that were 0.1m thick at the front and 0.12m thick at the back.</p> <p>I cheated and increase the grip for both wheels, because RoR is designed for heavy trucks.</p> <pre><code>set_node_defaults -1, 3, -1, -1\n</code></pre> <p>Was inserted before the wheels section, stops wheel spin and although drifting in the bike was amazing, it wasn't good for control or cornering</p> <pre><code>wheels\n0.31, 1, 12, 27, 28, 50, 1,    1,    43,     35.0, 80000.0, 600.0, tracks/daffwheelface tracks/dafwheelband\n0.29, 1, 12, 29, 30, 51, 1,    0,    45,     35.0, 60000.0, 500.0, tracks/daffwheelface tracks/dafwheelband \n</code></pre>"},{"location":"vehicle-creation/motorbikes/#how-to-only-power-the-rear-wheel","title":"How to only power the rear wheel","text":"<p>This bit is important, you must define an axle, making sure the differentials are set to split \"d(s)\" and only the rear wheel is powered. <pre><code>axles\nw1(27 28), w2(29 30), d(s)\n</code></pre></p>"},{"location":"vehicle-creation/motorbikes/#steering","title":"Steering","text":"<p>The steering assembly is able to move up and down with the suspension on slide nodes and controls the balance of the bike.</p> <p>I used 3 slide rails and 4 slide nodes so it is as rigid as possible. The nodes at the bottom of the frame should have the option \"c\", so they are contactless.</p> <p>There are four animators that form a sort to diamond shape they are defined something like this; <pre><code>29, 34, 1, roll | shortlimit: 0.15 | longlimit: 0.15\n</code></pre></p> <p>Note how the short and long limit are quite small, you don't need a large number because the castor angle on the front wheel helps the bike turn when it is in a lean.</p> <p>See animators.</p>"},{"location":"vehicle-creation/motorbikes/#camera","title":"Camera","text":"<p>You can control the lean angle of the bike by controlling the lean angle of the camera, and you do this using hydros as usual, just make sure they turn the camera assembly the opposite way from where you want the bike to go. I recommend trying about 20 deg then gradually increasing until a balance between control and stability is found. Offroad bikes should have less because of lower grip.</p>"},{"location":"vehicle-creation/motorbikes/#mass","title":"Mass","text":"<p>Due to RoR I didn't bother trying to get my bike too light, It wasn't a key issue.  If you want to get a realistic weight the biggest issue will be the wheels,  they are designed to work best on trucks and if your bike is 100kg, then there is clearly going to be a problem.</p>"},{"location":"vehicle-creation/motorbikes/#engine","title":"Engine","text":"<p>The bike I have provided is sort of a low geared, lightweight racing bike, enough power to pop a wheelie in first gear if you drop the clutch but will top out at about 200kph.</p> <p>Note that high speeds and the corresponding vibrations and shaking are not good for control.</p> <pre><code>engine\n2000.0, 5000.0, 120.0, 3, 6, 99, 3.2, 2.23, 1.71, 1.35, 1.24, -1.0\n</code></pre> <p>And:  <pre><code>engoption\n0.02, c, 100.0, 0.1, 0.2, 0.1\n</code></pre></p>"},{"location":"vehicle-creation/motorbikes/#suspension","title":"Suspension","text":"<p>Should be quite stiff with high damping to stop the bike bouncing and jiggling around. Any shaking is bad for the stabilization and control.</p>"},{"location":"vehicle-creation/motorbikes/#example-bike","title":"Example Bike","text":"<p>Polaris_GP2.5.0.truck</p>"},{"location":"vehicle-creation/motorbikes/#conclusion","title":"Conclusion","text":"<p>Hopefully this page will be updated as motorbikes are further developed. Future development will probably look into adding riders and expanding into special types of bikes.</p> <p>Easy riding,</p> <p>Davded</p>"},{"location":"vehicle-creation/rail-vehicles/","title":"Building rail vehicles","text":"<p>In this tutorial you will learn how to build a small locomotive and wagon.  Apart from the meshbuilding, it covers everything needed to build a working train.  All sizes must be exactly as shown in this tutorial!</p> <p></p> <p>What you need for this tutorial:</p> <ul> <li>Some basic knowledge of building objects for RoR</li> <li>A text editor, e.g. Notepad</li> <li>A visual editor for watching the node and beam structure</li> </ul> <p>Please note that this train does not work as well as expected.  Main reasons are the low mass of the train, the really short wheelbase and the fact  that tires in RoR are not perfectly round. All this results in a quite bumpy ride.</p>"},{"location":"vehicle-creation/rail-vehicles/#building-a-small-locomotive","title":"Building a small locomotive","text":""},{"location":"vehicle-creation/rail-vehicles/#step-1-bogie","title":"Step 1: Bogie","text":"<p>The bogie is the main part of our train.  It holds the wheels and avoids the train from sliding off the rails.  It has the shape of a trapezoid prism, the lower side is smaller than the upper.  The 4 upper nodes are for the wheels, the four lower nodes are the guidance nodes.  Those need to have low friction ( <code>set_node_defaults -1, 0, -1, -1</code> ) and need to be contacters.  Give them a mass of <code>50</code> kg using the <code>l</code> -option in the nodes section.</p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-2-placement-node","title":"Step 2: Placement node","text":"<p>In order to spawn the train correctly in the train spawner,  node <code>0</code> needs to be in the center of the train, <code>0.53</code> meters below the lowest edge of the wheel (See Fig. 4).  For our tutorial train, we set node <code>0</code> in the middle of the bogie.  Node <code>0</code> needs to have the <code>c</code> -option in the nodes section for no ground detection. </p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-3-wheels","title":"Step 3: Wheels","text":"<p>Now it's time to place the wheels between the upper nodes of the bogie.  Remember to set the radius correctly.  Fig. 4 (\"front view\") shows the important sizes of what we have so far</p> <p></p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-4-chassis","title":"Step 4: Chassis","text":"<p>It's time to build a chassis and, on this train, connect it directly to the bogie. </p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-5-couplers","title":"Step 5: Couplers","text":"<p>Now we add simple couplers to the front and back of the train.  We are using hooknodes with the auto-lock option.</p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-6-support-beams","title":"Step 6: Support beams","text":"<p>The last step is to add more beams to make the structure stable. We can also add contacters and ropables.</p> <p></p> <p></p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-7-tweaking-the-truckfile","title":"Step 7: Tweaking the truckfile","text":"<p>Now the node and beam of our train is finished, now it's time to tweak the truckfile. </p> <p>Download the finished train and look into the truckfile: Railrunner</p> <p>Please note the comments in there!</p>"},{"location":"vehicle-creation/rail-vehicles/#building-a-wagon","title":"Building a wagon","text":""},{"location":"vehicle-creation/rail-vehicles/#step-1-bogie_1","title":"Step 1: Bogie","text":"<p>The bogie is the main part of our wagon. It holds the wagon on the rails.  It has the shape of a trapezoid prism, the lower side is smaller than the upper.  The 4 upper nodes slide on top of the rail, the four lower nodes are the guidance nodes.  Make them all low friction ( <code>set_node_defaults -1, 0, -1, -1</code> ). The four lower nodes need to be contacters.  Give them a mass of <code>50</code> kg using the \"l\"-option in the nodes section. </p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-2-placement-node_1","title":"Step 2: Placement node","text":"<p>In order to spawn the wagon correctly in the train spawner,  node <code>0</code> needs to be in the center of the train, <code>0.53</code> meters below the upper four nodes of our bogie.  Node <code>0</code> needs to have the \"c\"-option in the nodes section for no ground detection. </p> <p> </p>"},{"location":"vehicle-creation/rail-vehicles/#step-4-chassis_1","title":"Step 4: Chassis","text":"<p>We add the chassis.</p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-5-couplers_1","title":"Step 5: Couplers","text":"<p>Now we add simple couplers to the front and back of the wagon. We are using hooknodes with the auto-lock option (Attention: disable high quality reflective effects in RoR, otherwise it will crash).</p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-6-support-beams_1","title":"Step 6: Support beams","text":"<p>The last step is to add more beams to make the structure stable. We can also add contacters and ropables. </p> <p></p> <p></p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#step-7-tweaking-the-truckfile_1","title":"Step 7: Tweaking the truckfile","text":"<p>Now the node and beam of our wagon is finished, it's time to tweak the truckfile.</p> <p>Download the finished train and look into the truckfile: Railrunner</p> <p>Please note the comments in there!</p>"},{"location":"vehicle-creation/rail-vehicles/#coupling-systems","title":"Coupling Systems","text":""},{"location":"vehicle-creation/rail-vehicles/#automatic-couplers","title":"Automatic couplers","text":"<p>If you want to make your train compatible to BigBoy's American trains (Janney (AAR) coupler),  this is the coupling system for you. It is a very easy automatic system.  Use the following code for the coupling nodes. The node ID's need to be adjusted to your train.</p> <pre><code>hooks\n;nd_id, options\n162, lockgroup: 54, hookgroup: -55, auto-lock\n163, lockgroup: 54, hookgroup: -55, auto-lock\n\nlockgroups\n;lockgroup, nd_id\n54, 162, 163\n\ntriggers\n;id3, id4, short, long, shortkey, longkey, options\n44, 165, 0.05, 0.1, -55, -56, ih\n</code></pre> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#buffers-and-chain-coupling","title":"Buffers and chain coupling","text":"<p>This is the standard European buffer and chain coupling.  It is much more complex than the automatic coupling above.  As this is quite complicated and hard to rebuild, please use the node and beam of the  Rbns 641 freight wagon as a template.</p>"},{"location":"vehicle-creation/rail-vehicles/#chain-coupling","title":"Chain coupling","text":"<p>First image shows standard position of the couplers. When a trigger is activated, it disengages a hook on the left and lets the chain piece swing down. Another hook is engaged, connecting the chain to the other coupling.</p> <p>![fig20-eu-coupling-inactive] (/images/rail-vehicles-tutorial-eu-coupling-inactive.png) ![fig21-eu-locking-position]  (/images/rail-vehicles-tutorial-eu-locking-position.png) ![fig22-eu-connected]         (/images/rail-vehicles-tutorial-eu-connected.png)</p> <p></p> <p>Trigger code:</p> <pre><code>triggers\n;left\n  nd1,   nd2, 0.900, 10.00, -32, -32, ich  ;unlock hookgroup -32 (chain falls down)\n  nd1,   nd2, 0.910, 10.00, -31, -31, icH  ;lock hookgroup -31 (coupling connects to 2nd wagon)\n  nd1,   nd2, 0.001, 1.100, -31, -31, ich  ;unlock hookgroup -31 (coupling deconnects from 2nd wagon)\n  nd1,   nd2, 0.001, 1.100, -32, -32, icH  ;lock hookgroup -32 (chain goes to rest position)\n\n;right\n  nd1,   nd2, 0.900, 10.00, -34, -34, ich  ;unlock hookgroup -34 (chain falls down)\n  nd1,   nd2, 0.910, 10.00, -33, -33, icH  ;lock hookgroup -33 (coupling connects to 2nd wagon)\n  nd1,   nd2, 0.001, 1.100, -33, -33, ich  ;unlock hookgroup -33 (coupling deconnects from 2nd wagon)\n  nd1,   nd2, 0.001, 1.100, -34, -34, icH  ;lock hookgroup -34 (chain goes to rest position)\n</code></pre>"},{"location":"vehicle-creation/rail-vehicles/#buffers","title":"Buffers","text":"<p>The European coupling system needs buffers to absorb collisions between the wagons.</p> <p></p> <p>One side has a contactable slidenode connected to a shock. The other side has a contactable submesh plane that is also movable and connected to a shock. The submesh collides with the contacter and absorbs the collisions. Try it out ingame to see how it works!</p> <p></p>"},{"location":"vehicle-creation/rail-vehicles/#troubleshooting","title":"Troubleshooting","text":"<p>Q: My train is stuck in the rail or positioned wrong when spawning: </p> <ul> <li>Check the position of node <code>0</code> </li> </ul> <p>Q: The train derails on switches: </p> <ul> <li>Are all bogie nodes positioned correctly?</li> <li>Do all bogie nodes have the correct options? (mass, contact, friction)</li> </ul> <p>Q: The ride is very bumpy</p> <ul> <li>Raise the numray count on the tires</li> <li>Add a suspension</li> </ul>"},{"location":"vehicle-creation/special-components/","title":"Special components","text":""},{"location":"vehicle-creation/special-components/#command-hydraulics-commands","title":"Command hydraulics - <code>commands</code>","text":"<p>Documentation</p> <p>A\u00a0command is a beam\u00a0 that has \"Commands\"\u00a0that make it extend/retract and so forth,  The command beam has many uses, From being a Hydraulic arm to a destruction tool, Some of the things you can do with commands... </p> <ul> <li>Open hoods </li> <li>Make lifting arms </li> <li>Adjust ride heights</li> <li>Make extending parts</li> <li>Make winches </li> <li>Many, many more uses too!</li> </ul> <p>One example (in picture below) - all of the moving parts are made by using Commands:</p> <p></p>"},{"location":"vehicle-creation/special-components/#connection-utilities","title":"Connection utilities","text":"<p>This is a guide how you can use the different connection methods in RoR.</p> <ul> <li><code>ties</code>: these are beams that grab a node and pull them tight</li> <li><code>ropes</code>: like ties, just don't tighten itself</li> <li><code>hooks</code>: nodes that interlock with other nodes or ropables</li> </ul>"},{"location":"vehicle-creation/special-components/#ropables","title":"Ropables","text":"<p>The documentation about ropables can be found here</p>"},{"location":"vehicle-creation/special-components/#ties","title":"Ties","text":"<p>The documentation about ties can be found here</p> <p>Ties (as commands) can only work over an RPM of 800 and might request more power from the engine when being used.</p> <p>So basically define a tie on the transport truck and a ropable on the load you want to tighten.</p>"},{"location":"vehicle-creation/special-components/#hooks","title":"Hooks","text":"<p>The documentation about hooks can be found here</p> <p>Hooks lock against nodes in a search area of 40 centimeters.</p>"},{"location":"vehicle-creation/suspension/","title":"Suspension","text":"<p>Suspension is a flexible component which connects a car's body to its wheels. because of its flexibility, suspension components soften out bumps in the road and make the truck's ride smoother.</p> <p>For syntax, see truckfile reference.</p>"},{"location":"vehicle-creation/suspension/#example-trucks","title":"Example trucks","text":"<p>A package containing all example trucks featured can be downloaded here.</p> <p></p>"},{"location":"vehicle-creation/suspension/#types","title":"Types","text":""},{"location":"vehicle-creation/suspension/#coilovers","title":"Coilovers","text":"<p>Coilover springs (standing for 'coil-over-oil') are extremely simple to model in RoR, since the game's shocks simulate them directly.</p> <p>Things to keep in mind:</p> <ul> <li>Spring is the measure of resistance change to the shock's of position, or how 'stiff' the suspension is. The shorter or longer a shock is compared to its original length, the more force it will exert to try to get back to its original length.</li> <li>Damping is a measure of how fast the shocks can change their length: the faster a shock tries to change its length (by compression or extension of the suspension), the more resistance the shock will apply. Too little damping will make the suspension too bouncy. Too much damping and the suspension will not be able to move well enough in response to bumps. </li> </ul> <p>So, for soft suspension you would want low spring and relatively low damp, and the opposite for stiff suspension (high spring and relatively high damp). Shocks behave differently based on the force acted upon them. So a shock that is good for a truck weighing several tonnes will be much too 'stiff' for the same shock on a street car. </p>"},{"location":"vehicle-creation/suspension/#leaf-springs","title":"Leaf springs","text":"<p>Leaf spring suspension is a very simple (in real life; it is much harder to model in RoR) and efficient design found on almost all trucks using beam axles. The design consists of a spring and a shackle, the spring is a long metal arc that bend when a force is exerted on the spring. One end of the spring is securely mounted to the frame and the other to a shackle. The shackle allows for one end of the spring to move back and forth as the spring straightens out under force.</p>"},{"location":"vehicle-creation/suspension/#dependent-suspension","title":"Dependent suspension","text":"<p>The wheels of each axle are securely connected to each other using non independent suspension systems. The force from every bump that a wheel on one side goes over is transmitted into the other wheel too. These systems do not tend produce very good handling, and therefore are not often used on sports cars. Non independent suspension is much more commonly found on heavy duty vehicles, where the link between the wheels makes axles much stronger</p>"},{"location":"vehicle-creation/suspension/#beam-axle","title":"Beam axle","text":"<p>Beam axles are an extremely simple form of suspension, almost always seen on the back axles of vans and semi trailers. The wheels are directly attached to the axles, and cannot change their angle to it.</p> <p>The easiest way to create a beam axle is to use Axle Rigidity nodes.</p> <p>The lateral location of a beam axle can be controlled in a number of ways; the easiest way in RoR simply to weakly truss the two arms that hold the axle, but this is generally not possible in real life and limits how much the axle can roll.</p> <p>Example using a beam axle on the rear, with simple truss for lateral location.</p> <ul> <li>Top image: Normal extension</li> <li>Middle image: Full compression</li> <li>Bottom image: Full extension.</li> <li>Blue: Axle. </li> <li>light brown: Frame and trailing arms. </li> <li> Green: Simple truss for lateral location</li> </ul>"},{"location":"vehicle-creation/suspension/#watts-linkage","title":"Watt's linkage","text":"<p>Example using Watt's linkage method of lateral location.</p> <p>Watt's Linkage:</p> <ul> <li>Blue: Axle. </li> <li>Light brown: Frame and trailing arms.</li> <li>Purple: Holder for Watt's Linkage </li> <li>Green: Watt's linkage (the 2d elements of it). </li> <li>Yellow: Trusses and A-arms to hold linkage in place</li> <li>Red: Connector for Watt's linkage and axle</li> </ul>"},{"location":"vehicle-creation/suspension/#panhard-rod","title":"Panhard rod","text":"<p>Panhard rod: </p> <ul> <li>Blue: Axle. </li> <li>Light brown: Frame and trailing arms. </li> <li>Green: Panhard rod. </li> <li>Purple: Holder for Panhard rod</li> </ul>"},{"location":"vehicle-creation/suspension/#de-dion-tube","title":"De Dion tube","text":"<p>De Dion tube suspension is a relatively complex form of suspension, which falls in between the categories of independent and non independent suspension: The wheels are directly connected to each other using a sliding tube, forcing them to stay parallel to each other, but this tube is not connected to any other part of the vehicle. each wheel is actually held to the truck by a single A-arm</p> <p>Due to their complexity, De Dion tubes are uncommon on modern vehicles.</p> <p>Example using a de Dion tube on the rear. Since a telescoping tube cannot be directly modeled in RoR, a Sarrus Linkage has been used instead. It provides exactly the same effect.</p> <p></p> <p>The wheels connected to the tube are kept parallel, regardless of body roll or suspension travel on either side... The tube's length can change.</p> <ul> <li>Top image: Normal extension</li> <li>Middle image: Full compression</li> <li>Bottom image : Full extension</li> <li>Blue: A-arms.</li> <li>Green: De Deion Tube</li> </ul>"},{"location":"vehicle-creation/suspension/#walking-beam","title":"Walking beam","text":"<p>Walking beam is a special form of suspension: It solidly links two axles together, meaning that all four wheels on those axles must move in unison. Indeed, the setup is know as walking beam due to the way that trucks are see to 'walk' over obstacles. This design allows the tires to conform to the landscape, evening out the pressure on each tire. </p> <p>Example using extremely simple walking beam suspension on the rear.</p> <ul> <li>Blue: Axles.</li> <li>Light brown: Frame and trailing arms</li> <li>Green: simple truss for lateral location.</li> <li>Yellow: Frame for walking beam</li> </ul> <p></p> <p>The bogie that holds the truck's four back wheels together.</p> <p></p> <p>A concept vehicle in game.</p> <p></p> <ul> <li>Black: Structural beams</li> <li>Green: The suspension</li> <li>Blue: Shocks</li> </ul>"},{"location":"vehicle-creation/suspension/#independent-suspension","title":"Independent suspension","text":"<p>There are no significant connections between wheels in independent suspension setups. They are therefore much more suited to vehicles where roadholding is especially important.</p>"},{"location":"vehicle-creation/suspension/#swing-axle","title":"Swing axle","text":"<p>The swing axle is a small step up from the beam axle. Although it is the most common form of suspension on Pricorde's trucks, it probably produces the worst handling vehicles in the game, due to the way the camber changes when going over bumps.</p> <p>Because of its strange handling characteristics, swing axle suspension is uncommon in modern trucks.</p> <p>Example using swing axles on the rear. The axles on this truck are quite short, which encourages the inside wheel to tuck under when cornering.</p> <ul> <li>Top image: Normal extension</li> <li>Middle image: Full compression</li> <li>Bottom image: Full extension</li> <li>Blue: Axles.</li> <li>Light brown: trusses and A-arm for axles.</li> </ul>"},{"location":"vehicle-creation/suspension/#double-wishbone","title":"Double wishbone","text":"<p>Double wishbone suspension is most common in racing cars and larger passenger cars. The wheels are kept perpendicular to the road through the use of two A-arms, one above the other. It is relatively easy to tune for handling.</p> <p>Example using double wishbone suspension on the rear. The front axles also carry double wishbone suspension and are used for steering. The front wheels have also been rotated to place them inside the wishbones, which makes them much stronger; any object they collide with exerts less leverage on them.</p> <ul> <li>Top image: Normal extension, </li> <li>Middle image: Full compression, </li> <li>Bottom image: Full extension</li> <li>Green: Upper wishbones</li> <li>Blue: Lower wishbones</li> <li>Light brown: Extra truss arms.Hydros could go here when modelling steering axles</li> </ul>"},{"location":"vehicle-creation/suspension/#mcpherson-strut","title":"McPherson strut","text":"<p>By far and away the most common form of front suspension for passenger cars, the spring/shock assembly must not only provide suspension to the wheel, but hold it in place, keeping the wheel aligned to the shock at all times. This requires the use of some sort of straight line mechanism with the shock</p>"},{"location":"vehicle-creation/suspension/#example-1","title":"Example 1","text":"<p>Old-style example using McPherson strut suspension on the front. The straight line mechanism has been hidden on the right hand side to provide a better view of the overall setup.</p> <ul> <li>Top: Normal extension</li> <li>Middle: Full compression</li> <li>Bottom: Full extension</li> <li>Blue: A-arms.</li> <li>Light brown: holder for straight line mechanism and shock</li> <li>Green: Straight line mechanism,to keep the shock and the wheel holder pointing in the same line.</li> <li>Red: connector from the straight line mechanismto the bottom of the wheel holder</li> </ul>"},{"location":"vehicle-creation/suspension/#example-2","title":"Example 2","text":"<p>An example truck using slidenodes to keep the beam count down. No beams in the suspension mechanism have been hidden, the shocks are hold in line with slidenodes.</p>"},{"location":"vehicle-creation/suspension/#torsion-bar","title":"Torsion bar","text":"<p>A torsion bar is a simple form of independent suspension that uses a flexible rod to provide spring force instead of a coil spring.  It can be found on many vehicles from the VW beetle, to light trucks and SUVs, or even trailers.</p> <p>Example using torsion bar suspension front and rear. You will notice the wheels tend to gain camber while cornering like swing arm suspension, however since the pivot point is perpendicular to the wheels, they will not fold under the chassis like a swing arm.</p> <ul> <li>Top image: Normal extension</li> <li>Middle image: Full compression</li> <li>Bottom image: Full extension</li> <li>Grey: Axles.</li> <li>Red: Torsion bar beams.</li> </ul>"},{"location":"vehicle-creation/suspension/#other-forms-of-independent-suspension","title":"Other forms of independent suspension","text":"<ul> <li>Twin Traction Beam - A beam that goes to the other side of the truck where it is connected to the chassis. </li> <li>Multilink - Multilink, or 5-link, system are called so because they use 5 different points to connect the fusee to the chassis.</li> <li>Trailing-arm - Two arms that look like the 4 link system except that there is not solid axle.</li> </ul>"},{"location":"vehicle-creation/suspension/#special-parts","title":"Special parts","text":""},{"location":"vehicle-creation/suspension/#anti-roll-bars","title":"Anti roll bars","text":"<p>Anti roll bars are stiff beams which run across vehicle axles to lessen body roll when cornering. This makes vehicles hold the road much better when cornering. </p> <p>Top:Truck with anti roll bars. Bottom: Truck without anti roll bars. Notice how the front wheels are much farther apart in the top image. Green: Anti roll bar.</p> <p>The setup of anti roll bars differs slightly depending on the type of suspension they are being fitted to. In all cases, they must pivot on the truck body itself, but with suspension setups that use transverse A-arms, such as double-wishbone or swing arm, care must be taken to allow for left-right movement in each wheel. If this is not done the suspension will lock up during travel.</p> <p>The two trucks here are identical except the second truck does not have an anti roll device fitted. The anti roll device shown is suitable for any truck which uses same length double wishbone suspension.</p> <p>Examples with and without the anti roll bars are included in the main download.</p>"},{"location":"vehicle-creation/suspension/#liftable-axles","title":"Liftable Axles","text":"<p>Liftable axles have been implemented in a couple of ways in RoR.</p>"},{"location":"vehicle-creation/suspension/#example-1_1","title":"Example 1","text":"<p>Creating a basic liftable axle is as easy as replacing part of the supporting beams with commands.  Note that if your commands are too long/too short, your shocks will break. In the picture above, the commands lift the node that the shock is attached to, effectively moving the axle.</p>"},{"location":"vehicle-creation/suspension/#example-2_1","title":"Example 2","text":"<p>Another way of accomplishing this same concept without stressing the axles is to lift the shocks, instead of the wheel. The commands will lift the shock and, consequently, the wheel will travel with the shock thus lifting the axle without stressing the shocks.  This allows you to have very stiff shocks without fear of breaking.</p> <p></p> <ul> <li>Top image: Axle lowered. </li> <li>Bottom image: Axle raised. </li> <li>Blue: A-arms.</li> <li>Green: A arm to connect shocks and commands (Shocks are on outside, commands on inside).</li> </ul>"},{"location":"vehicle-creation/tracked-vehicles/","title":"Tracked vehicles (using slidenodes)","text":""},{"location":"vehicle-creation/tracked-vehicles/#intro","title":"Intro","text":"<p>This is a step-by-step tutorial of how to make tracks for crawler crane/excavator/bulldozer/other heavy machines without suspension.</p> <p>This page assumes knowledge softbody basics: basic N/B, rotators, submeshing and slidenodes.</p> <p>Your brain also has a naturally built-in physics simulator. Try to use it when you build the tracks. Look at your structure, imagine the nodes moving around as they would do in RoR,  and try to see if your structure will work. It's not hard.</p> <p>NOTES about the pictures:</p> <ul> <li>the SketchUp models are only to show the structure in 3D, you CAN NOT make working N/B track in SketchUp.</li> <li>models show very few beams just to make it easier to see the basic structure.</li> </ul> <p>Of course the actual N/B structure shall have more beams to make it stronger.</p>"},{"location":"vehicle-creation/tracked-vehicles/#step-1-making-the-frame","title":"Step 1: Making the frame","text":"<p>The shape of the frame always varies depending on the vehicle you make or how you want to make it, of course. The picture shows a very simple structure of a crawler crane/excavator frame. And by simple I mean I have left out a lot of beams to make it easier to see the structure, placement of nodes etc.</p> <p>The ends of the frame as you can see, consist of a group of nodes (nodes 1-5),  forming a rounded end. Depending on the number of nodes you use, and how well you place them, determines how well and smoothly the track chain will bend around the ends.</p> <p>The example as you can see uses 10 nodes on each end,  or 5 nodes when you see from the side, which makes a fairly smooth bending.</p> <p>To help making a good half-circle shaped bending, you can temporarily place a wheel (not showed in the picture) on the \"center node (node 6)\" and follow the shape of the wheel. Then don't forget to enable viewing wheels in the editor (View&gt; Wheels) and remove the wheel when you are done.</p> <p>Note about the nodes: Don't forget to make the nodes of the bottom *of the crawler frame un-contactable with the ground with the \"c\" option for nodes.</p> <p>Red dots = crawler frame nodes, Black tubes = crawler frame beams</p> <p> </p>"},{"location":"vehicle-creation/tracked-vehicles/#step-2-making-the-track-links","title":"Step 2: Making the track links","text":"<p>Placement: As the track link nodes will work as slidenodes going around the crawler frame, they should be placed pretty accurately on the beams forming the rail,  and it is important that all track links are the same length. \u00b1 one centimeter or so doesn't matter, but avoid larger differences. There are some methods for this:</p> <ul> <li>Trigonometry, somewhat advanced math calculating.</li> <li>Making the N/B using a program like Blender, where you would be able to create</li> </ul> <p>a long chain of links and then angle them to the correct position   (I've never tried that in Blender, but it is possible right? ).</p> <ul> <li>Do like I did, using a physical ruler. Yes, I actually used a plastic ruler</li> </ul> <p>on the computer monitor. Just begin by making one track link with a fitting   length, measure the distance on the monitor between the nodes and continue   placing the nodes with the ruler.</p> <p>When the nodes are placed, it's time to define the slidenodes and rails in the truck file.</p> <p>And don't forget to make all track nodes contactable, in order to be driven by the submesh in the sprockets</p> <p>Blue dots = track nodes</p> <p> </p> <p>Beams or shocks? In some cases the track links need to change length *in order to keep in place on the sliderail, and in most cases it's only about *a few millimeters. Therefore I would recommend using shocks for all the beams *in the track links except the ones going straight sideways:</p> <p>Purple lines = shocks</p> <p> </p> <p>The shocks don't need to be able to extend or retract much at all,  Maximum contraction and extension values like 0.05 for the shocks should work well.</p> <p>Length and number of links? How long each track link shall be is up to you. The more links you make (the shorter they are), the more nodes does it take and therefore more FPS heavy, but it also drives more smooth. Snowcats and other similar all-terrain machines would be more realistic with a larger number of track links, while heavy machines like excavators and crawler cranes could use less as they are driving quite slow.</p>"},{"location":"vehicle-creation/tracked-vehicles/#step-3-making-the-driving-sprocket","title":"Step 3: Making the driving sprocket","text":"<p>Size: The sprocket should not be too big or too small. If it is too small,  there is a chance the nodes will slide/jump over the submeshes in the sprocket. If it is too big it's not good either, how I shall explain this though, I don't know.</p> <p>In the example below, the size of the sprocket compared to the \"bending frame\" thingy is fairly good.</p> <p>Number of \"sections\": In my example below the sprocket is built up by 6 \"sections\". How many sections that are needed depends on size of the track and the length of the track links.</p> <p>When you have built the basic structure of the sprocket, add the contactable submesh and use the \"U\" option for contact. Since the submesh is supposed to be invisible, simply skip the \"texcoords\" lines and add only \"cab\" lines.</p> <p>\"Light pink\" dots and lines = sprocket nodes and beams</p> <p> </p> <p>Also keep in mind that the sprocket always need to be wider than the track itself.</p> <p></p> <p>One or two sprockets?</p> <p>Depending on the kind of vehicle, how much force is applied to the tracks,  how many nodes you are willing to use etc, you may want to make either one or two driving sprockets per track. If you want two sprockets, it is very easy to drive the other sprocket with the first one (the one that is driven by the rotator,  see further down for how to make the rotators).</p> <p>In the example with the 6-section sprocket, it can be done easily by connect three beams per side like the picture shows:</p> <p></p>"},{"location":"vehicle-creation/tracked-vehicles/#step-4-making-the-rotator-for-the-driving-sprocket","title":"Step 4: Making the rotator for the driving sprocket","text":"<p>Now it's time to define rotator for the sprocket. The size of the rotator can without problems be about the same size *as the sprocket itself, But it's recommended that you don't make the rotators *too small, for this matter: ((TODO: fix link)) *[http://www.rigsofrods.com/threads/66248-Rotators-flexing-%28flexing-rotation-force-NOT-beams%29]</p> <p>Note: Don't forget to make the nodes of the rotators sprockets *un-contactable with the ground with the \"c\" option for nodes.</p> <p>Green: Rotator, Olive green: beams connecting the rotator to the sprocket Orange: beams connecting the rotator to the crawler frame.</p> <p> </p> <p>The finished result looks something like this (track link beams are left out). The yellow planes in the 2<sup>nd</sup> picture are the submesh (will be invisible ingame).</p> <p> </p> <p>This is the right track of my crawler crane, viewed in Blender with plugins:</p> <p></p> <p>Hope it was helpful!</p> <p>This tutorial was created by AIN_002 and added to the (retired) wiki by Steve Ror Fan.</p>"},{"location":"vehicle-creation/vehicle-concepts/","title":"Vehicle concepts","text":"<p>Rigs of Rods (RoR) is not your typical vehicle simulator. Other vehicle simulators use fake suspension, mesh-based vehicles with no mass distribution, predetermined damage from collisions, and approximated fuzzy-dice sway models. </p> <p>RoR uses a very unique way to simulate a truck. In fact, it does not simulates a truck at all... It only simulates a set of points, called Nodes interconnected by Beams. Assembling these elements to form the structure of a truck makes a truck. But you could also assemble them to do a car, a bike, a giant robot, a boat, a plane, a building, a bridge, anything, and it would be simulated the same way. </p> <p>To grasp the idea, take a look at these games that use the same construction logic:</p> <ul> <li>Geomag is a real-world construction game that uses metallic balls and magnets.</li> <li>Bridge Construction Set is a video game where you build and test bridges.</li> </ul> <p>To build a truck in RoR, you need to design a structural chassis composed of a lattice of rods. You have to define :</p> <ul> <li>Nodes: these are the points of interconnection of rods (the same as the balls in Geomag). For the physics engine, these nodes are the only concrete elements of the truck: they have a mass and can collide with other elements, but they are dimensionless.</li> <li>Beams: (or rods): they interconnect nodes. For the physics engine they are massless and are composed of a spring and a damper, so their length can change depending on the forces it bears. They are monodimensional - they have length, but no thickness.</li> </ul> <p>Also, if you want to \"dress\" the chassis with a texture, you can \"fill\" any node triangle with a polygon (like the panels in geomag, but in RoR they deform like if they were made of rubber). This is what the submesh section if for.</p> <p>One important thing is that the interconnection of beams to nodes uses what is known as a ball joint. That means that no force opposes a change of angles between two beams connected to the same node. It may sound abstract, but in practice you will immediately see the result : anything that is not triangulated will fold. To design rigid bodies you must have triangles everywhere, in any direction. So for example, if you have a cubic structure, you must add diagonal rods in all the faces. If you let a square somewhere it will fold, or it will be a soft zone (it will stay rigid because of other parts of the geometry, adding strains to this part).</p> <p></p> <p>Why did we chose ball joints? Because:</p> <ul> <li>It requires less computation to simulate, and keep the physics simple (because of this, the simulated elements are dimensionless, that means that a lot of physics law are irrelevant and do not need to be simulated. The good news is that the laws we ignored (as rotation momentum, center of gravity, centripetal force...), are here anyway, as you can observe, because they emerge from the complex interaction between beams)</li> <li>It can be used to build almost any kind of joint. By assembling rods in certain way, you can constraint movements and synthesize most useful joints. For example the suspensions and direction of trucks uses such construction techniques to limit movements only in certain directions.</li> </ul> <p>A note on beam strength: A beam's length changes depending on the forces (compressive or extensive) it bears. When the forces are gone, it returns to its original length (elastic deformation). If the forces are too strong, it will not return to its original length (plastic deformation). If the forces are even stronger, it will snap and disappear!</p>"},{"location":"vehicle-creation/weight-tuning/","title":"Weight tuning","text":""},{"location":"vehicle-creation/weight-tuning/#introduction","title":"Introduction","text":"<p>SUMOWEIGHT ? </p> <p>A guide to tune your trucks to a realistic weight</p> <p>I will try to explain here how to tune your trucks weight without loosing it characteristics. A lot of things have changed with the recent physics updates and there is no need for overweighed trucks at all in ROR anymore.</p> <p>This guide is based on RoR version 0.36.3+.</p> <p>All templates in this guide are free to use, you don't need to give any credits.</p> <p>Why go for a realistic weight ? Well, RoR gets more and more realistic physics in the last updates, so i think for gameplay and especially multiplayer trucks should have realistic weights in the future, so loading, lifting and crashing stuff works propper. Since the new physics support this, here is your tutorial:</p> <p>Here we go...first of all a template truck:</p> <p></p> <p>300 kg... RoR's first working 200 km/h light weight truck </p> <p>Download here</p> <p>Its a truck featuring independent suspended front wheels and a rigid rear axle, it has a realistic steering geometry and is basically built for baja(gravel) terrains.</p> <p>Overall weight including wheels is 300 kg, featuring working wheel nodearms and a small aerodynamic help for drifting and jumping ( to avoid zips its visible in the template file )</p> <p>Spawns in the street cars (146) category.</p> <p>Step by step weight tuning</p>"},{"location":"vehicle-creation/weight-tuning/#minimass","title":"Minimass","text":"<p>Truck file format - minimass</p> <pre><code>minimass\n5.0\n</code></pre> <p>Even lower settings are fine. You need to add loadweight to every single node for weight tuning. Please refer to the template truck.</p> <p>You can use set_node_defaults for group loadweights here too, but tweaking single nodes does not work and so its not recommended</p> <p>A minimass setting lower then you minimum loadweight to a node makes no sense and will not provide any benefit.</p>"},{"location":"vehicle-creation/weight-tuning/#set_beam_defaults","title":"Set_beam_defaults","text":"<p>Truck file format - set_beam_defaults</p> <pre><code>set_beam_defaults 12000000, 350, 200000, 2000000\n</code></pre> <p>A  good setting for rigid truck parts like suspension and frame with low weight nodes.</p> <p>For lightweight nodes always use LOW damping settings, if you want parts of your truck deform propper while crashing, play around with spring, deform and brake values.</p> <p>NEVEREVER use high dampings, they are responsible for truck explosions at spawn most of the times.</p>"},{"location":"vehicle-creation/weight-tuning/#wheels","title":"Wheels","text":"<p>Truck file format - wheels</p> <pre><code>wheels\n0.45, 0.3, 10,  13,  11,9999, 1, 1,  20, 22.5, 5000.0, 600.0, tracks/wheelface tracks/wheelband1\n</code></pre> <p>Really light weight wheels which work fine with light trucks. </p> <p>If the wheels collapse too often or explode when hitting a wall, gently add some kg and test until you are fine. </p> <p>Increasing the spring rate gently works fine too. Test in small steps until you are satisfied.</p>"},{"location":"vehicle-creation/weight-tuning/#overall-weight","title":"Overall weight","text":"<p>Truck file format - globals</p> <pre><code>globals\n50.0, 500.0, tracks/beam\n</code></pre> <p>A significant low starting weight helps to make trucks light.</p> <p>Please note: Your load weight in this line ( second entry ) should be at least the total loadmass of you nodes, better higher. </p> <p>it does NOT apply to the truck weight if you set it higher then the actual sum of your loadweights.</p>"},{"location":"vehicle-creation/weight-tuning/#shocks","title":"Shocks","text":"<p>Truck file format - shocks/shocks2</p> <pre><code>shocks2\n;front axle\n  10,   3, 8500, 1250, 5, 5, 8500, 1250, 5, 5, 1, 1, 1.05, vs\n</code></pre> <p>Use LOW shock settings now, especially the damping really needs to be LOW (less than 5k) for testing</p> <p>If your trucks spawns stable, gently alter spring and damping settings until you are fine with the suspension works.</p> <p>Overall guideline: lightweight trucks use low numbers ;)</p>"},{"location":"vehicle-creation/weight-tuning/#engineengoptionbrakes","title":"Engine/Engoption/Brakes","text":"<p>Truck file format - engine</p> <pre><code>engine\n1350.0, 3350.0, 350.0, 4.1, 1.8, 1.8, 1.8, 1.1, 0.8, 0.7, -1.0\n\nengoption\n0.125, c, 55, 0.4, 0.8, 0.4\n\ntorquecurve\ngas\n\nbrakes\n600\n</code></pre> <p>Low settings for torque, brakes and clutch avoid exploding wheels at higher speeds and while braking hard.</p>"},{"location":"vehicle-creation/weight-tuning/#fusedrag","title":"Fusedrag","text":"<p>Truck file format - fusedrag</p> <pre><code>fusedrag\n   3,   0, 0.25, NACA0009.afl\n</code></pre> <p>Your truck not accelerating propper and wheels spinning fast ? Use a small fusedrag.</p>"},{"location":"vehicle-creation/weight-tuning/#testing","title":"Testing","text":"<p>Open RoRConfig -&gt; Debug tab -&gt; Select \"Beam Break Debug\". This will log broken beams to the RoR.log file (Located in <code>Rigs of Rods/logs/RoR.log</code>), a vital tool for weight tuning.</p> <p>So now spawn your truck, enter it and see it explode.</p> <p>If it does not explode, you didn't push the limits hard enough, if you are fine with your weight and it works for you, you are successfully understood and managed to use the contents of this tutorial.</p> <p>Else, you need to see if the truck disintegrates or the wheels explode. You might enable the replay mode in the configurator and use it to see.</p> <p>If the trucks \"walks/strafes\" around your wheels are too light or their damping is too high. Fix that and try again</p> <p>If the truck explodes or simply some beams break, exit ror and open your ror log (Located in <code>Rigs of Rods/logs/RoR.log</code>)</p> <p>Search for \"xxx\" in the log file, the first entry is the beam that broke first. Write down the node numbers, open your truck file and add some kg to both of the nodes.</p> <p>Spawn your truck and do this until you can spawn your truck without braking one single beam</p> <p>When you managed to spawn your truck without any broken beam, start testing it. You might find some more beams that break when jumping/landing hard or using commands etc.</p> <p>The procedure is always the same, look into your RoR.log file, identify the nodes which were attached to breaking beams and gently rise their weight until you got them working properly.</p> <p>Overall, this way of weight tuning should lead to a fast and simple way to build really lightweight trucks.</p>"},{"location":"vehicle-creation/wheels-axles-steering/","title":"Wheels, axles, steering","text":""},{"location":"vehicle-creation/wheels-axles-steering/#wheels","title":"Wheels","text":"<p>wheels are simply structures that the game creates automatically out of standard features to make creating vehicles easier. They are simply nodes connected by beams with a contactable submesh. They are unique in that they will rotate when given input to accelerate.</p> <p>Wheels are the most basic wheels in the game. The width of a wheel is determined by the distance between the two reference nodes and is composed of pie slices known as rays. The more rays a wheel has, the smoother it will be but will also contain more nodes and beams and consequently lower performance. It is considered good form to keep your rays between 10 and 20.</p> <p> </p> <p>The optional snode option allows for game-managed Axle Rigidity. This will keep the two wheel reference nodes in line under normal conditions. If snode is NOT used, you must enter 9999.    Nodes 2 and 3 would be mounted to the chassis with wheels mounted on nodes 1,2 and 3,4 </p> <pre><code>wheels\n;radius, width, numrays, node1, node2, snode, braked, propulsed, arm, mass,  spring,   damping,   facemat          bandmat\n0.54,   1,  12,       1,     2,   9999,    1,      1,         25,  400.0, 800000.0, 4000.0, tracks/wheelface tracks/wheelband2\n0.54,   1,  12,       3,     4,   9999,    1,      1,         23,  400.0, 800000.0, 4000.0, tracks/wheelface tracks/wheelband2\n</code></pre> <p>First step: The snode is Disabled ( The data is 9999), the nodes 1 and 4 are hanging just down. </p> <pre><code>wheels\n;radius, width, numrays, node1, node2, snode, braked, propulsed, arm, mass,  spring,   damping,   facemat          bandmat\n0.54,   1,  12,       1,     2,      3,    1,      1,         25,  400.0, 800000.0, 4000.0, tracks/wheelface tracks/wheelband2\n0.54,   1,  12,       3,     4,   9999,    1,      1,         23,  400.0, 800000.0, 4000.0, tracks/wheelface tracks/wheelband2\n</code></pre> <p>Second step: You type 3 to the snode option of the wheel 1,2. Now node 1 will always have the ambition to be at the same \"line\" like the nodes 2 and 3. </p> <pre><code>wheels\n;radius, width, numrays, node1, node2, snode, braked, propulsed, arm, mass,  spring,   damping,   facemat          bandmat\n0.54,   1,  12,       1,     2,      3,    1,      1,         25,  400.0, 800000.0, 4000.0, tracks/wheelface tracks/wheelband2\n0.54,   1,  12,       3,     4,      2,    1,      1,         23,  400.0, 800000.0, 4000.0, tracks/wheelface tracks/wheelband2\n</code></pre> <p>Third step: You type 2 to the snode option of the wheel 3,4.</p> <p>Now all nodes will be on one level / line even node 1 and 4 aren't mounted primary to the chassis.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#wheels2","title":"Wheels2","text":"<p>This feature improves the default wheels section by splitting wheels into rims and tires. This allows the player to set tire pressure with the keyboard.  </p> <p>Wheels2 (also known as the \"complex wheel model\") allows you to separate the wheel [rim] from the tire (tyre). This requires extra syntax, namely specifying the characteristics of the wheel versus the tire. Traditionally the wheel will be very rigid with the tire being much less so. The rigidity of wheels2 tires can be altered by holding [ and ] ingame, resulting in this:     Inflated tire  Deflated tire </p> <p>The adjustable tire pressure allows you to adjust handling in real-time. Lower pressure creates more grip while higher pressure creates more stability. </p>"},{"location":"vehicle-creation/wheels-axles-steering/#meshwheels","title":"Meshwheels","text":"<p>Meshwheels takes advantage of a mesh's static nature. It also creates a smoother tire. The wheel rim is a standard Ogre3D mesh.</p> <p>Meshwheels are very similar to normal wheels, but require specification of the wheel rim radius. Likewise, the direction the wheel is facing must be specified in order for the mesh to be rotated properly.<sup>1</sup> </p>  Here is an example picture of a rim mesh, as it should be modeled. The actual tire will be added dynamically and will still flex.  This material should be slightly different to other tire materials as it covers both the tire face and the tire wall:"},{"location":"vehicle-creation/wheels-axles-steering/#notes","title":"Notes","text":"<p>The mesh should be centered (Where should the wheel be placed in the L/R direction? Should it face left or right?) and of the right size for the wheel you want to do: its outer diameter should be as the <code>rim_radius</code> parameter, and its width should be the same as the distance between <code>node1</code> and <code>node2</code>.  All wheels are able to do skid steering. See the steering chapter.</p> <p>It is considered good form to keep your rays between 10 and 20.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#axles","title":"Axles","text":"<p>This section defines axles on a vehicle, allowing more accurate distribution of torque among the wheels. </p> <p>Sample axle section:</p> <pre><code>axles\n; axle 1\nw1(1 2), w2(3 4), d(ol)\n; axle 2\nw1(5 6), w2(7 8), d(l) \n</code></pre> <p>The axle section introduces open differentials, and Spooled (aka locked) differentials. By adding axles to your vehicle file you override the propulsed property for the tires. Only wheels connected to an axle are powered, if multiple axles are defined the axles are interconnected in a locked manner. If no axle section is defined the old model of equal power distribution is used. Because the axle sections looks up already defined wheels, it must be defined AFTER the wheels have been defined</p> <p>The axle section if different from other sections in that it is broken into properties, properties are not order dependent, currently the available properties are: </p> <ul> <li>w1(&lt;node1&gt; &lt;node2&gt;) - this defines which wheel the axle is attached to, &lt;node1&gt; and &lt;node2&gt; refer to the node1 and node2 as defined in the wheel section </li> <li>w2(&lt;node1&gt; &lt;node2&gt;) - wheel 2, same as w1, this is the second wheel attached to the axle. w1 and w2 are interchangeable.</li> <li> d(&lt;list of diff types&gt;) - Defines the available differential types for this axle. the list of axles is cycled through in the order specified, differential types maybe specified more than once. Each differential type is specified by a single letter, the letters are not to be separated by spaces or any other character. if no differentials are specified  the axles will default to opened and locked.         <ul> <li> Available differential types <ul> <li> o - open</li> <li> l - locked</li> <li> s - Split evenly (each wheel gets equal torque regardless of wheel speed)</li> </ul> </li> </ul> </li> </ul>"},{"location":"vehicle-creation/wheels-axles-steering/#problems","title":"Problems?","text":"<p>Wheel weight has a big effect on top speed since heavy wheels have lots of rolling resistance in RoR. Try to make the wheels as light as possible. If the wheels explode, they probably have too high damping for the weight. If the wheels and rpm needle start shaking, set lower clutch torque in the engoption section. This can take some tweaking, but it's worth it.</p> <p>Used together with fusedrag and realistic truck weight, real torque is often enough so there's no need to have several thousand hp engines. That makes the trucks easier to drive and better handling.</p> <p></p>"},{"location":"vehicle-creation/wheels-axles-steering/#axle-rigidity","title":"Axle Rigidity","text":"<p>See Also: Suspension</p> <p>The Axle Rigidity keeps the wheel aligned with the axle of the vehicle. It is used to avoid having to make a complex structure in order to hold the wheel in place. In fact, it keeps the two wheel nodes and the defined node in a straight line. This is intended to use with solid non-steerable axles. However, you probably can devise a way to use this as independent suspension.</p> <p>Normally a wheel needs some sort of pyramidal hub to support it, such as the image to the right.  Axle rigidity allows you to avoid making this by doing some internal magic to keep the nodes supported.  Wheels need at least 2 nodes to define their width, and the node used for axle rigidity is the innermost node of the wheel.</p> <p> </p> <p>Here, the black beam are normal beams.  Red beams are a crude suspension set up.  Light-blue nodes are the outermost wheel nodes, while green nodes are axle rigidity nodes.</p> <p>For the left wheel (defined by nodes 1 and 2), the special rigidity node will be 3, and for the right wheel (defined by nodes 3 and 4), the special rigidity node will be 2.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#reference-arm-node","title":"Reference Arm Node","text":"<p>This is to help modders, as I have seen a few asking about what this does.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#what-it-does","title":"What it does","text":"<p>The reference arm node in the .truck file serves an important purpose. That purpose is to determine where the torque reaction in a chassis will be. If that node is placed in front of the specified wheel, then it will provide more traction, as the wheel pushes the chassis down into the ground. This is good for vehicles such as off-roaders and high-grip racecars. If the arm node is behind the specified wheel, then grip will be reduced as the wheel will help lift the chassis off the ground. This is useful for drifters and other cars and trucks that need less grip.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#how-it-is-implemented","title":"How it is Implemented","text":"<p>The arm node is implemented through the wheels section of a <code>.truck</code> file.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#example-vehicle","title":"Example Vehicle","text":"<p>A good example vehicle that shows how the arm node works is box5diesel's Baja Trophy Truck. When in the air, if you accelerate in 6<sup>th</sup> gear, the nose of the truck will be lifted up. If you brake while in the air, the nose of the truck will be pushed down. This is due to the arm nodes of the rear wheels being located in front of the rear axle, and the arm nodes for the front wheels, located behind the front axle.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#example-diagram","title":"Example Diagram","text":"<p>This is a rough diagram I made to show how it works.      In the top diagram, the arm node is behind the wheel, so as the wheel spins counterclockwise, it applies upward force to the node(red) in the blue circle, therefore imparting less traction as the chassis is pushed upward.In the bottom diagram, the arm node is in front of the wheel, so as the wheel spins counterclockwise, it applies downward force to the circled node, therefore imparting more traction as the chassis is pushed downward.  </p> <p></p>"},{"location":"vehicle-creation/wheels-axles-steering/#steering","title":"Steering","text":"<p>Steering is made possible with the use of hydros. A proven steering set up which involves a diamond wheel support and a small chassis which the suspension is attached to. When this concept is realized, steering is not too difficult.</p>"},{"location":"vehicle-creation/wheels-axles-steering/#wheel-mount","title":"Wheel Mount","text":"<p>This is a typical wheel support diamond (\"face octahedron\"). This will carry the wheel independently from the main chassis. For example: </p> <p> </p> <p>The \"wheel\" nodes labeled here will become the position for the wheels. The distance between the two nodes will determine the wheel width. It is wise to make the diamond symmetrical for stability (that is, the height equals the width). You will need one of these for every wheel that is steerable.</p> <p>If you find your nodes are contacting the ground and obstructing movement, you can make specific nodes non-contactable. See the nodes syntax.</p> <p></p>"},{"location":"vehicle-creation/wheels-axles-steering/#axle","title":"Axle","text":"<p>The axle is actually simply built out of four beams: </p> <p> </p> <p>But you need a rocker, too. However it's easy to build. This only requires two nodes in front of the axle (be aware these nodes should be at least 80cm from the axle away) and beams attached to them as shown at this picture: </p> <p> </p>"},{"location":"vehicle-creation/wheels-axles-steering/#hydros","title":"Hydros","text":"<p>After the steering chassis is completed, the hydros can be added. Hydros are simply beams that change length when you press the right and left arrow keys, and are typically used for steering (although you can use them for other purposes if you so wanted).</p> <p>In order to define a hydro, some specific information is needed. </p> <ol> <li>Node 1 - One end of the hydro </li> <li>Node 2 - The other end of the hydro </li> <li>        Factor - The decimal percentage (0.2 = 20%) representing how far a hydro can extend.         <ol> <li>The length of a hydro can be determined by Original Length \u00b1 (Original Length * Factor)</li> </ol> </li> </ol> <p>A hydro can also have two optional parameters: </p> <ol> <li>i - The Hydro will be invisible </li> <li>s - At approximately 20km/h to 40km/h the factor will be lowered gradually to 0 and will then be disabled. This is commonly used for rear-wheel turning, as it is disabled at high speed.</li> </ol> <p>Example Syntax: <pre><code>hydros\n;node1, node2, factor, options\n43,    37,    -0.2,   i\n46,    36,     0.2,   s\n</code></pre></p> <p>The following example shows how hydros will push and pull nodes in a direction to induce steering: </p> <p> </p>"},{"location":"vehicle-creation/wheels-axles-steering/#finished-steering-axle","title":"Finished Steering Axle","text":"<p>The finished axle can look like this:</p> <p></p> <p>Don't forget to add suspension (as covered in the previous chapter)</p>"},{"location":"vehicle-creation/wheels-axles-steering/#braked-steering","title":"Braked Steering","text":"<p>It is possible to have a steering system that only turns one side of wheels. In the wheels section, set the <code>Wheel Braking</code> value to 2 or 3 for left or right wheel respectively. This works well for emulating tracked vehicles such as bulldozers. These usually do not work well at high speed.</p>"}]}